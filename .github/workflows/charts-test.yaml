name: "Charts: Test"

on:
  workflow_call:
    inputs:
      checkoutCommit:
        required: true
        type: string
      chartChangesDetected:
        required: true
        type: string

jobs:
  unit-test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.checkoutCommit }}

      - name: Install Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@c81bf94cddd6c3172e6f61aa7f5ad66a2b5db98d # tag=v0.8.0
        with:
          setup-tools: |
            helmv3
          helm: "3.8.0"

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Install dependencies
        env:
          RUBYJQ_USE_SYSTEM_LIBRARIES: 1
        run: |
          sudo apt-get update
          sudo apt-get install libjq-dev
          bundle install

      - name: Run tests
        run: |
          bundle exec m -r ./test/

  generate-install-matrix:
    name: Generate matrix for install
    runs-on: ubuntu-latest
    outputs:
      matrix1: |
        {
          "chart": ${{ steps.list-changed.outputs.charts1 }}
        }
      matrix2: |
        {
          "chart": ${{ steps.list-changed.outputs.charts2 }}
        }
      detected1: ${{ steps.list-changed.outputs.detected1 }}
      detected2: ${{ steps.list-changed.outputs.detected2 }}
    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.checkoutCommit }}

      - name: Set up chart-testing
        uses: helm/chart-testing-action@dae259e86a35ff09145c0805e2d7dd3f7207064a # tag=v2.2.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        if: inputs.chartChangesDetected == 'true'
        run: |
          EXCLUDED=$(yq eval -o=json '.excluded-charts // []' .github/ct-install.yaml)
          CHARTS=$(ct list-changed --config .github/ct-install.yaml)
          CHARTS_JSON=$(echo "${CHARTS}" | jq -R -s -c 'split("\n")[:-1]')
          OUTPUT_JSON=$(echo "{\"excluded\": ${EXCLUDED}, \"all\": ${CHARTS_JSON}}" | jq -c '.all-.excluded')
          OUTPUT_JSON1=$(echo $CHARTS_JSON | jq -r -c '.[:254]')
          OUTPUT_JSON2=$(echo $CHARTS_JSON | jq -r -c '.[254:500]')
          echo ::set-output name=charts1::${OUTPUT_JSON1}
          echo ::set-output name=charts2::${OUTPUT_JSON2}
          if [[ $(echo ${OUTPUT_JSON1} | jq -c '. | length') -gt 0 ]]; then
            echo "::set-output name=detected1::true"
          fi
          if [[ $(echo ${OUTPUT_JSON2} | jq -c '. | length') -gt 0 ]]; then
            echo "::set-output name=detected2::true"
          fi

  install-charts1:
    needs:
      - generate-install-matrix
    if: needs.generate-install-matrix.outputs.detected1 == 'true'
    name: Install charts  Part 1
    strategy:
      matrix: ${{ fromJson(needs.generate-install-matrix.outputs.matrix1) }}
      fail-fast: false
      max-parallel: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.checkoutCommit }}

      - name: Install Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@c81bf94cddd6c3172e6f61aa7f5ad66a2b5db98d # tag=v0.8.0
        with:
          setup-tools: |
            helmv3
          helm: "3.8.0"

      - uses: actions/setup-python@9c644ca2ab8e57ea0a487b5ec2f8290740378bfd # tag=v3
        with:
          python-version: "3.10"

      - name: Set up chart-testing
        uses: helm/chart-testing-action@dae259e86a35ff09145c0805e2d7dd3f7207064a # tag=v2.2.1

      - name: Create k3d cluster
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.20

      - name: Remove node taints
        run: |
          kubectl taint --all=true nodes node.cloudprovider.kubernetes.io/uninitialized- || true

      - name: Run chart-testing (install)
        run: ct install --config ".github/ct-install.yaml" --charts "${{ matrix.chart }}" --upgrade
        
  install-charts2:
    needs:
      - generate-install-matrix
    if: needs.generate-install-matrix.outputs.detected2 == 'true'
    name: Install charts Part 2
    strategy:
      matrix: ${{ fromJson(needs.generate-install-matrix.outputs.matrix2) }}
      fail-fast: false
      max-parallel: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.checkoutCommit }}

      - name: Install Kubernetes tools
        uses: yokawasa/action-setup-kube-tools@c81bf94cddd6c3172e6f61aa7f5ad66a2b5db98d # tag=v0.8.0
        with:
          setup-tools: |
            helmv3
          helm: "3.8.0"

      - uses: actions/setup-python@9c644ca2ab8e57ea0a487b5ec2f8290740378bfd # tag=v3
        with:
          python-version: "3.10"

      - name: Set up chart-testing
        uses: helm/chart-testing-action@dae259e86a35ff09145c0805e2d7dd3f7207064a # tag=v2.2.1

      - name: Create k3d cluster
        uses: nolar/setup-k3d-k3s@v1
        with:
          version: v1.20

      - name: Remove node taints
        run: |
          kubectl taint --all=true nodes node.cloudprovider.kubernetes.io/uninitialized- || true

      - name: Run chart-testing (install)
        run: ct install --config ".github/ct-install.yaml" --charts "${{ matrix.chart }}" --upgrade

  # Summarize matrix https://github.community/t/status-check-for-a-matrix-jobs/127354/7
  install_success:
    needs:
      - generate-install-matrix
      - install-charts1
      - install-charts2
    if: |
      always()
    name: Install successful
    runs-on: ubuntu-latest
    steps:
      - name: Check install matrix status
        if: ${{ ( (needs.generate-install-matrix.outputs.detected1 == 'true') && (needs.install-charts1.result != 'success') ) && ( (needs.generate-install-matrix.outputs.detected2 == 'true') && ( (needs.install-charts2.result != 'success') || ( needs.install-charts2.result != 'skipped' ) ) ) }}
        run: exit 1
