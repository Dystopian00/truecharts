# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controller}
# Include{controllerDeployment}
# Include{replicas}
# Include{replica1}
# Include{strategy}
# Include{recreate}
# Include{controllerExpert}
# Include{controllerExpertExtraArgs}
  - variable: netbox
    group: Container Configuration
    label: Netbox Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: allowed_hosts
          label: Allowed Hosts
          description: This is a list of valid fully-qualified domain names (FQDNs) for the NetBox server. NetBox will not permit write access to the server via any other hostnames. The first FQDN in the list will be treated as the preferred name. (127.0.0.1 and ::1) added automatically
          schema:
            type: list
            default: []
            items:
              - variable: allowed_hosts_entry
                label: Allowed Host
                schema:
                  type: string
                  required: true
                  default: ""
        - variable: allowed_urls_schemes
          label: Allowed URL Schemes
          description: URL schemes that are allowed within links in NetBox.
          schema:
            type: list
            default: []
            items:
              - variable: allowed_url_scheme_entry
                label: Allowed URL Scheme
                schema:
                  type: string
                  required: true
                  default: ""
        - variable: admins
          label: Admins
          description: Specify one or more name and email address tuples representing NetBox administrators. These people will be notified of application errors (assuming correct email settings are provided).
          schema:
            type: list
            default: []
            items:
              - variable: admin_entry
                label: Admin
                schema:
                  type: dict
                  additional_attrs: true
                  attrs:
                    - variable: name
                      label: Name
                      schema:
                        type: string
                        required: true
                        default: ""
                    - variable: email
                      label: Email
                      schema:
                        type: string
                        required: true
                        default: ""
        - variable: auth_password_validators
          label: Auth Password Validators
          description: Enable any desired validators for local account passwords below. For a list of included validators, please see the Django documentation at https://docs.djangoproject.com/en/stable/topics/auth/passwords/#password-validation.
          schema:
            type: list
            default: []
            items:
              - variable: auth_password_validators_entry
                label: Auth Password Validator
                schema:
                  type: dict
                  additional_attrs: true
                  attrs:
                    - variable: name
                      label: Name
                      schema:
                        type: string
                        required: true
                        default: ""
                    - variable: options
                      label: Options
                      schema:
                        type: dict
                        additional_attrs: true
                        attrs:
                          - variable: key
                            label: Key
                            schema:
                              type: string
                              required: true
                              default: ""
                          - variable: value
                            label: Value
                            schema:
                              type: string
                              required: true
                              default: ""
        - variable: banner
          label: Banner
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: login
                label: Login Banner
                description: Text to include on the login page above the login form. HTML is allowed
                schema:
                  type: string
                  default: ""
              - variable: top
                label: Top Banner
                description: Optionally display a persistent banner at the top of every page.
                schema:
                  type: string
                  default: ""
              - variable: bottom
                label: Bottom Banner
                description: Optionally display a persistent banner at the bottom of every page.
                schema:
                  type: string
                  default: ""
        - variable: retention
          label: Retention
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: changelog
                label: Changelog
                description: Maximum number of days to retain logged changes. Set to 0 to retain changes indefinitely.
                schema:
                  type: int
                  default: 90
              - variable: job_result
                label: Job Results
                description: Maximum number of days to retain job results (scripts and reports). Set to 0 to retain job results in the database indefinitely.
                schema:
                  type: int
                  default: 90
        - variable: prefer_ipv4
          label: Prefer IPv4
          description: When determining the primary IP address for a device, IPv6 is preferred over IPv4 by default.
          schema:
            type: boolean
            default: false
        - variable: enforce_global_unique
          label: Enforce Global Unique
          description: Enforcement of unique IP space can be toggled on a per-VRF basis. To enforce unique IP space within the global table
          schema:
            type: boolean
            default: true
        - variable: cors_origin_allow_all
          label: CORS Origin Allow All
          description: If CORS_ORIGIN_ALLOW_ALL is set to True, all origins will be allowed. Otherwise, define a list of allowed origins using either CORS_ORIGIN_WHITELIST or CORS_ORIGIN_REGEX_WHITELIST. For more information, see https://github.com/ottoyiu/django-cors-headers
          schema:
            type: boolean
            default: false
            show_subquestions_if: false
        - variable: cors_origin_whitelist
          label: CORS Origin Whitelist
          description: Example 127.0.0.1
          schema:
            type: list
            default: []
            items:
              - variable: cors_origin_whitelist_entry
                label: CORS Origin Whitelist Entry
                schema:
                  type: string
                  required: true
                  default: ""
        - variable: cors_origin_regex_whitelist
          label: CORS Origin Regex Whitelist
          description: Example r'^(https?://)?(\w+\.)?example\.com$'
          schema:
            type: list
            default: []
            items:
              - variable: cors_origin_whitelist_entry
                label: CORS Origin Regex Whitelist Entry
                schema:
                  type: string
                  required: true
                  default: ""
        - variable: email
          label: Email
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: server
                label: Server
                schema:
                  type: string
                  default: ""
              - variable: port
                label: Port
                schema:
                  type: int
                  default: 587
              - variable: from_email
                label: From Email
                schema:
                  type: string
                  default: ""
              - variable: username
                label: Username
                schema:
                  type: string
                  default: ""
              - variable: password
                label: Password
                schema:
                  type: string
                  private: true
                  default: ""
              - variable: use_ssl
                label: Use SSL
                schema:
                  type: boolean
                  default: false
              - variable: use_tls
                label: Use TLS
                schema:
                  type: boolean
                  default: true
              - variable: timeout
                label: Timeout
                schema:
                  type: int
                  default: 10
        - variable: exempt_view_permissions
          label: Exempt View Permissions
          description: Exempt certain models from the enforcement of view permissions. Models listed here will be viewable by all users and by anonymous users. List models in the form `<app>.<model>`. Add '*' to this list to exempt all models.
          schema:
            type: list
            default: []
            items:
              - variable: exempt_view_permissions_entry
                label: Exempt View Permission
                schema:
                  type: string
                  required: true
                  default: ""
        - variable: http_proxies
          label: HTTP Proxies
          description: HTTP proxies NetBox should use when sending outbound HTTP requests (e.g. for webhooks).
          schema:
            type: list
            default: []
            items:
              - variable: http_proxy_entry
                label: HTTP Proxy Entry
                schema:
                  type: dict
                  additional_attrs: true
                  attrs:
                    - variable: key
                      label: Key
                      schema:
                        type: string
                        required: true
                        default: ""
                    - variable: url
                      label: URL
                      schema:
                        type: string
                        required: true
                        default: ""
        - variable: internal_ips
          label: Internal IPs
          description: IP addresses recognized as internal to the system. The debugging toolbar will be available only to clients accessing NetBox from an internal IP. (127.0.0.1 and ::1) added automatically
          schema:
            type: list
            default: []
            items:
              - variable: internal_ips_entry
                label: Internal IP
                schema:
                  type: string
                  required: true
                  default: ""
        - variable: login_persistence
          label: Login Persistence
          description: Automatically reset the lifetime of a valid session upon each authenticated request. Enables users to remain authenticated to NetBox indefinitely.
          schema:
            type: boolean
            default: false
        - variable: login_required
          label: Login Required
          description: Setting this to true will permit only authenticated users to access any part of NetBox. By default, anonymous users are permitted to access most data in NetBox but not make any changes.
          schema:
            type: boolean
            default: true
        - variable: login_timeout
          label: Login Timeout
          description: The length of time (in seconds) for which a user will remain logged into the web UI before being prompted to re-authenticate.
          schema:
            type: int
            default: 1209600
        - variable: graphql_enabled
          label: Enable GraphQL
          description: Enable GraphQL API.
          schema:
            type: boolean
            default: true
        - variable: maps_url
          label: Maps URl
          description: Maps provider
          schema:
            type: string
            default: https://maps.google.com/?q=
# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 10265
                              required: true
# Include{advancedPortHTTP}
                                - variable: targetPort
                                  label: Target Port
                                  description: The internal(!) port on the container the Application runs on
                                  schema:
                                    type: int
                                    default: 8080
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: App Config Storage
          description: Stores the Application Configuration.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: Privileged mode
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: ReadOnly Root Filesystem
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: Allow Privilege Escalation
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: runAsNonRoot
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: runAsUser
          description: The UserID of the user running the application
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: runAsGroup
          description: The groupID this App of the user running the application
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: fsGroup
          description: The group that should own ALL storage.
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{promtail}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
