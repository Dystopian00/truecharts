image:
  repository: tccr.io/truecharts/guacamole-client
  pullPolicy: IfNotPresent
  tag: v1.4.0@sha256:43f7b0575173f509b5215a89170dfea80ea07f0b2bfed405882a4bc7ec9dfa52

portal:
  path: "/guacamole"

## Check later if we can run this with gaucamole user

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

securityContext:
  runAsNonRoot: false
  readOnlyRootFilesystem: false

service:
  main:
    ports:
      main:
        port: 10080
        targetPort: 8080

env:
  POSTGRES_DATABASE: "{{ .Values.postgresql.postgresqlDatabase }}"
  POSTGRES_USER: "{{ .Values.postgresql.postgresqlUsername }}"
  POSTGRES_PORT: 5432
  GUACD_HOSTNAME: ""
  GUACD_PORT: 4822
  TOTP_ENABLED: false

postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: guacamole
  postgresqlDatabase: guacamole

envValueFrom:
  POSTGRES_HOSTNAME:
    secretKeyRef:
      name: dbcreds
      key: plainhost
  POSTGRES_PASSWORD:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password

probes:
  liveness:
    path: "/guacamole"
  readiness:
    path: "/guacamole"
  startup:
    path: "/guacamole"

initContainers:
  1-creat-initdb-file:
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    volumeMounts:
      - name: initdbdata
        mountPath: "/initdbdata"
    command: ["/bin/sh", "-c"]
    args:
      - >
        echo "Creating initdb.sql file...";
        /opt/guacamole/bin/initdb.sh --postgres > /initdbdata/initdb.sql;
        if [ -e /initdbdata/initdb.sql ];
        then
          echo "Init file created successfully!";
          exit 0;
        else
          echo "Init file failed to create.";
          exit 1;
        fi;
  # Would the DB be ready at this point?
  2-initdb:
    image: "{{ .Values.postgresqlImage.repository }}:{{ .Values.postgresqlImage.tag }}"
    env:
      - name: POSTGRES_DATABASE
        value: "{{ .Values.postgresql.postgresqlDatabase }}"
      - name: POSTGRES_USER
        value: "{{ .Values.postgresql.postgresqlUsername }}"
      - name: POSTGRES_PORT
        value: "5432"
      # Are those ok? Or should I use `envValueFrom`?
      - name: POSTGRES_HOSTNAME
        valueFrom:
          secretKeyRef:
            name: dbcreds
            key: plainhost
      - name: PGPASSWORD
        valueFrom:
          secretKeyRef:
            name: dbcreds
            key: postgresql-password
    volumeMounts:
      - name: initdbdata
        mountPath: "/initdbdata"
    command: ["/bin/sh", "-c"]
    args:
      - >
        echo "Waiting for DB to be ready...";
        DBREADY=0;
        for i in {1..10};
        do pg_isready -t 5 -h $POSTGRES_HOSTNAME -d $POSTGRES_DATABASE -U $POSTGRES_USER -p $POSTGRES_PORT;
          if [ $? -eq 0 ];
            then echo "DB is ready!";
              DBREADY=1;
              break;
            else echo "DB not ready yet.";
          fi;
          echo "Waiting...";
          sleep 5;
        done;
        if [ $DBREADY -eq 1 ];
        then echo "Initializing DB's schema...";
          psql -h $POSTGRES_HOSTNAME -d $POSTGRES_DATABASE -U $POSTGRES_USER -p $POSTGRES_PORT -a -w -f /initdbdata/initdb.sql;
          if [ $? -eq 0 ];
            then echo "DB's schema initialized successfully!";
              exit 0;
            else echo "DB's schema failed to initialize.";
              exit 1;
          fi;
        else echo "DB failed to start.";
        fi;

    # # Until they release an image with the update driver, we need to manually download it.
    # # https://github.com/apache/guacamole-client/pull/655
    # 3-tempHack:
    #   image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    #   # Needs proper volume mount
    #   command: ["/bin/sh"]
    #   args:
    #   - -c
    #   - |
    #     curl -L "https://jdbc.postgresql.org/download/postgresql-42.2.24.jre7.jar" > "$DESTINATION/postgresql/postgresql-42.2.24.jre7.jar"

persistence:
  initdbdata:
    enabled: true
    mountPath: /initdbdata
