# Include{groups}
portals:
  web_portal:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}
  - variable: controller
    group: "Controller"
    label: ""
    schema:
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      type: dict
      attrs:
# Include{fixedEnv}
        - variable: GUACD_HOSTNAME
          label: "Guacd Hostname"
          description: "The hostname of the guacd instance to use to establish remote desktop connections"
          schema:
            type: string
            default: ""
        - variable: GUACD_PORT
          label: "Guacd Port"
          description: "The port that Guacamole should use when connecting to guacd."
          schema:
            type: int
            default: 4822

# Include{containerConfig}
  - variable: totp
    group: "App Configuration"
    label: "TOTP Configuration"
    schema:
      type: dict
      attrs:
        - variable: TOTP_ENABLED
          label: "Enable TOTP"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: TOTP_ISSUER
                label: "TOTP Issuer (Leave blank for default)"
                schema:
                  type: string
                  default: ""
              - variable: TOTP_DIGITS
                label: "TOTP Digits"
                schema:
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "default"
                    - value: "6"
                      description: "6"
                    - value: "7"
                      description: "7"
                    - value: "8"
                      description: "8"
              - variable: TOTP_PERIOD
                label: "TOTP Period (Leave blank for default)"
                schema:
                  type: string
                  default: ""
              - variable: TOTP_MODE
                label: "TOTP Mode"
                schema:
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "default"
                    - value: "sha1"
                      description: "sha1"
                    - value: "sha256"
                      description: "sha256"
                    - value: "sha512"
                      description: "sha512"
  - variable: header
    group: "App Configuration"
    label: "Header Configuration"
    schema:
      type: dict
      attrs:
        - variable: HEADER_ENABLED
          label: "Enable Header"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: HTTP_AUTH_HEADER
                label: "HTTP Auth Header (Leave blank for default)"
                schema:
                  type: string
                  default: ""
  - variable: api
    group: "App Configuration"
    label: "API Configuration"
    schema:
      type: dict
      attrs:
        - variable: API_SESSION_TIMEOUT
          label: "API Session Timeout (Leave blank for default)"
          schema:
            type: string
            default: ""
  - variable: json
    group: "App Configuration"
    label: "JSON Configuration"
    schema:
      type: dict
      attrs:
        - variable: JSON_SECRET_KEY
          label: "JSON Secret Key"
          schema:
            type: string
            default: ""
        - variable: JSON_TRUSTED_NETWORKS
          label: "JSON Trusted Networks (Leave blank for unrestricted"
          description: "Comma separated list e.g.: 127.0.0.0/8, 10.0.0.0/8"
          schema:
            type: string
            default: ""
  - variable: duo
    group: "App Configuration"
    label: "DUO Configuration"
    schema:
      type: dict
      attrs:
        - variable: DUO_API_HOSTNAME
          label: "DUO API Hostname (api-XXXXXXXX.duosecurity.com)"
          schema:
            type: string
            default: ""
        - variable: DUO_INTEGRATION_KEY
          label: "DUO Integration Key (Exactly 20 chars)"
          schema:
            # min_length: 20
            # max_length: 20
            type: string
            default: ""
        - variable: DUO_SECRET_KEY
          label: "DUO Secret Key (Exactly 40 chars)"
          schema:
            # min_length: 40
            # max_length: 40
            type: string
            default: ""
        - variable: DUO_APPLICATION_KEY
          label: "DUO Application Key (At least 40 chars)"
          schema:
            # min_length: 40
            type: string
            default: ""

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10080
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: enabled
                                  label: "Enable the port"
                                  schema:
                                    type: boolean
                                    default: true
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: "HTTP"
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 8080

  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

# Include{persistenceList}

  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            type: dict
            attrs:
# Include{ingressDefault}

# Include{ingressTLS}

# Include{ingressTraefik}

# Include{ingressExpert}

# Include{ingressList}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: true
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: true

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
        - variable: supplementalGroups
          label: "supplemental Groups"
          schema:
            type: list
            default: []
            items:
              - variable: supplementalGroupsEntry
                label: "supplemental Group"
                schema:
                  type: int
        - variable: fsGroupChangePolicy
          label: "When should we take ownership?"
          schema:
            type: string
            default: "OnRootMismatch"
            enum:
              - value: "OnRootMismatch"
                description: "OnRootMismatch"
              - value: "Always"
                description: "Always"

# Include{resources}

# Include{advanced}

# Include{addons}
