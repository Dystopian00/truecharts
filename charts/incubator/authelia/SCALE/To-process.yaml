
  - variable: domain
    group: "App Configuration"
    label: "Domain"
    description: "The highest domain level possible, for example: domain.com when using app.domain.com"
    schema:
      type: string
      default: ""
      required: true

  - variable: default_redirection_url
    group: "App Configuration"
    label: "Default Redirection Url"
    description: "If user tries to authenticate without any referer, this is used"
    schema:
      type: string
      default: ""
      required: false

  - variable: theme
    group: "App Configuration"
    label: "Theme"
    schema:
      type: string
      default: "light"
      enum:
        - value: "light"
          description: "info"
        - value: "gray"
          description: "gray"
        - value: "dark"
          description: "dark"

  - variable: log
    group: "App Configuration"
    label: "Log Configuration "
    schema:
      type: dict
      attrs:
        - variable: level
          label: "Log Level"
          schema:
            type: string
            default: "info"
            enum:
              - value: "info"
                description: "info"
              - value: "debug"
                description: "debug"
              - value: "trace"
                description: "trace"
        - variable: format
          label: "Log Format"
          schema:
            type: string
            default: "text"
            enum:
              - value: "json"
                description: "json"
              - value: "text"
                description: "text"

  - variable: totp
    group: "App Configuration"
    label: "TOTP Configuration"
    schema:
      type: dict
      attrs:
        - variable: issuer
          label: "Issuer"
          description: "The issuer name displayed in the Authenticator application of your choice"
          schema:
            type: string
            default: ""
        - variable: period
          label: "Period"
          description: "The period in seconds a one-time password is current for"
          schema:
            type: int
            default: 30
        - variable: skew
          label: "skew"
          description: "Controls number of one-time passwords either side of the current one that are valid."
          schema:
            type: int
            default: 1

  - variable: duo_api
    group: "App Configuration"
    label: "DUO API Configuration"
    description: "Parameters used to contact the Duo API."
    schema:
      type: dict
      attrs:
        - variable: enabled
          label: "Enable"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: hostname
                label: "Hostname"
                schema:
                  type: string
                  required: true
                  default: ""

              - variable: integration_key
                label: "integration_key"
                schema:
                  type: string
                  defaults: ""
                  required: true
              - variable: plain_api_key
                label: "plain_api_key"
                schema:
                  type: string
                  defaults: ""
                  required: true

  - variable: session
    group: "App Configuration"
    label: "Session Provider"
    description: "The session cookies identify the user once logged in."
    schema:
      type: dict
      attrs:
        - variable: name
          label: "Cookie Name"
          description: "The name of the session cookie."
          schema:
            type: string
            required: true
            default: "authelia_session"
        - variable: same_site
          label: "SameSite Value"
          description: "Sets the Cookie SameSite value"
          schema:
            type: string
            default: "lax"
            enum:
              - value: "lax"
                description: "lax"
              - value: "strict"
                description: "strict"
        - variable: expiration
          label: "Expiration Time"
          description: "The time in seconds before the cookie expires and session is reset."
          schema:
            type: string
            defaults: "1h"
            required: true
        - variable: inactivity
          label: "Inactivity Time"
          description: "The inactivity time in seconds before the session is reset."
          schema:
            type: string
            defaults: "5m"
            required: true
        - variable: inactivity
          label: "Remember-Me duration"
          description: "The remember me duration"
          schema:
            type: string
            defaults: "5M"
            required: true

  - variable: regulation
    group: "App Configuration"
    label: "Regulation Configuration"
    description: "his mechanism prevents attackers from brute forcing the first factor."
    schema:
      type: dict
      attrs:
        - variable: max_retries
          label: "Maximum Retries"
          description: "The number of failed login attempts before user is banned. Set it to 0 to disable regulation."
          schema:
            type: int
            default: 3
        - variable: find_time
          label: "Find Time"
          description: "The time range during which the user can attempt login before being banned."
          schema:
            type: string
            defaults: "2m"
            required: true
        - variable: ban_time
          label: "Ban Duration"
          description: "The length of time before a banned user can login again"
          schema:
            type: string
            defaults: "5m"
            required: true


##
## Authentication Backend Provider Configuration
##
## Used for verifying user passwords and retrieve information such as email address and groups users belong to.
##
## The available providers are: `file`, `ldap`. You must use one and only one of these providers.
authentication_backend:
  ## Disable both the HTML element and the API for reset password functionality
  disable_reset_password: false

  ## The amount of time to wait before we refresh data from the authentication backend. Uses duration notation.
  ## To disable this feature set it to 'disable', this will slightly reduce security because for Authelia, users will
  ## always belong to groups they belonged to at the time of login even if they have been removed from them in LDAP.
  ## To force update on every request you can set this to '0' or 'always', this will increase processor demand.
  ## See the below documentation for more information.
  ## Duration Notation docs:  https://www.authelia.com/docs/configuration/index.html#duration-notation-format
  ## Refresh Interval docs: https://www.authelia.com/docs/configuration/authentication/ldap.html#refresh-interval
  refresh_interval: 5m

  ## LDAP backend configuration.
  ##
  ## This backend allows Authelia to be scaled to more
  ## than one instance and therefore is recommended for
  ## production.
  ldap:

    ## Enable LDAP Backend.
    enabled: false

    ## The LDAP implementation, this affects elements like the attribute utilised for resetting a password.
    ## Acceptable options are as follows:
    ## - 'activedirectory' - For Microsoft Active Directory.
    ## - 'custom' - For custom specifications of attributes and filters.
    ## This currently defaults to 'custom' to maintain existing behaviour.
    ##
    ## Depending on the option here certain other values in this section have a default value, notably all of the
    ## attribute mappings have a default value that this config overrides, you can read more about these default values
    ## at https://www.authelia.com/docs/configuration/authentication/ldap.html#defaults
    implementation: activedirectory

    ## The url to the ldap server. Format: <scheme>://<address>[:<port>].
    ## Scheme can be ldap or ldaps in the format (port optional).
    url: ldap://openldap.default.svc.cluster.local

    ## Connection Timeout.
    timeout: 5s

    ## Use StartTLS with the LDAP connection.
    start_tls: false

    tls:
      ## Server Name for certificate validation (in case it's not set correctly in the URL).
      server_name: ""

      ## Skip verifying the server certificate (to allow a self-signed certificate).
      ## In preference to setting this we strongly recommend you add the public portion of the certificate to the
      ## certificates directory which is defined by the `certificates_directory` option at the top of the config.
      skip_verify: false

      ## Minimum TLS version for either Secure LDAP or LDAP StartTLS.
      minimum_version: TLS1.2

    ## The base dn for every LDAP query.
    base_dn: DC=example,DC=com

    ## The attribute holding the username of the user. This attribute is used to populate the username in the session
    ## information. It was introduced due to #561 to handle case insensitive search queries. For you information,
    ## Microsoft Active Directory usually uses 'sAMAccountName' and OpenLDAP usually uses 'uid'. Beware that this
    ## attribute holds the unique identifiers for the users binding the user and the configuration stored in database.
    ## Therefore only single value attributes are allowed and the value must never be changed once attributed to a user
    ## otherwise it would break the configuration for that user. Technically, non-unique attributes like 'mail' can also
    ## be used but we don't recommend using them, we instead advise to use the attributes mentioned above
    ## (sAMAccountName and uid) to follow https://www.ietf.org/rfc/rfc2307.txt.
    username_attribute: ""

    ## An additional dn to define the scope to all users.
    additional_users_dn: OU=Users

    ## The users filter used in search queries to find the user profile based on input filled in login form.
    ## Various placeholders are available in the user filter:
    ## - {input} is a placeholder replaced by what the user inputs in the login form.
    ## - {username_attribute} is a mandatory placeholder replaced by what is configured in `username_attribute`.
    ## - {mail_attribute} is a placeholder replaced by what is configured in `mail_attribute`.
    ## - DON'T USE - {0} is an alias for {input} supported for backward compatibility but it will be deprecated in later
    ##   versions, so please don't use it.
    ##
    ## Recommended settings are as follows:
    ## - Microsoft Active Directory: (&({username_attribute}={input})(objectCategory=person)(objectClass=user))
    ## - OpenLDAP:
    ##   - (&({username_attribute}={input})(objectClass=person))
    ##   - (&({username_attribute}={input})(objectClass=inetOrgPerson))
    ##
    ## To allow sign in both with username and email, one can use a filter like
    ## (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
    users_filter: ""

    ## An additional dn to define the scope of groups.
    additional_groups_dn: OU=Groups

    ## The groups filter used in search queries to find the groups of the user.
    ## - {input} is a placeholder replaced by what the user inputs in the login form.
    ## - {username} is a placeholder replace by the username stored in LDAP (based on `username_attribute`).
    ## - {dn} is a matcher replaced by the user distinguished name, aka, user DN.
    ## - {username_attribute} is a placeholder replaced by what is configured in `username_attribute`.
    ## - {mail_attribute} is a placeholder replaced by what is configured in `mail_attribute`.
    ## - DON'T USE - {0} is an alias for {input} supported for backward compatibility but it will be deprecated in later
    ##   versions, so please don't use it.
    ## - DON'T USE - {1} is an alias for {username} supported for backward compatibility but it will be deprecated in
    ##   later version, so please don't use it.
    ##
    ## If your groups use the `groupOfUniqueNames` structure use this instead:
    ##    (&(uniquemember={dn})(objectclass=groupOfUniqueNames))
    groups_filter: ""

    ## The attribute holding the name of the group
    group_name_attribute: ""

    ## The attribute holding the mail address of the user. If multiple email addresses are defined for a user, only the
    ## first one returned by the LDAP server is used.
    mail_attribute: ""

    ## The attribute holding the display name of the user. This will be used to greet an authenticated user.
    display_name_attribute: ""

    ## The username of the admin user.
    user: CN=Authelia,DC=example,DC=com
    plain_password: ""

  ##
  ## File (Authentication Provider)
  ##
  ## With this backend, the users database is stored in a file which is updated when users reset their passwords.
  ## Therefore, this backend is meant to be used in a dev environment and not in production since it prevents Authelia
  ## to be scaled to more than one instance. The options under 'password' have sane defaults, and as it has security
  ## implications it is highly recommended you leave the default values. Before considering changing these settings
  ## please read the docs page below:
  ## https://www.authelia.com/docs/configuration/authentication/file.html#password-hash-algorithm-tuning
  ##
  ## Important: Kubernetes (or HA) users must read https://www.authelia.com/docs/features/statelessness.html
  ##
  file:
    enabled: true
    path: /config/users_database.yml
    password:
      algorithm: argon2id
      iterations: 1
      key_length: 32
      salt_length: 16
      memory: 1024
      parallelism: 8

##
## Notification Provider
##
##
## Notifications are sent to users when they require a password reset, a u2f registration or a TOTP registration.
## The available providers are: filesystem, smtp. You must use one and only one of these providers.
notifier:
  ## You can disable the notifier startup check by setting this to true.
  disable_startup_check: false

  ##
  ## File System (Notification Provider)
  ##
  ## Important: Kubernetes (or HA) users must read https://www.authelia.com/docs/features/statelessness.html
  ##
  filesystem:
    enabled: true
    filename: /config/notification.txt

  ##
  ## SMTP (Notification Provider)
  ##
  ## Use a SMTP server for sending notifications. Authelia uses the PLAIN or LOGIN methods to authenticate.
  ## [Security] By default Authelia will:
  ##   - force all SMTP connections over TLS including unauthenticated connections
  ##      - use the disable_require_tls boolean value to disable this requirement
  ##        (only works for unauthenticated connections)
  ##   - validate the SMTP server x509 certificate during the TLS handshake against the hosts trusted certificates
  ##     (configure in tls section)
  smtp:
    enabled: false
    enabledSecret: false
    host: smtp.mail.svc.cluster.local
    port: 25
    timeout: 5s
    username: test
    plain_password: test
    sender: admin@example.com
    ## HELO/EHLO Identifier. Some SMTP Servers may reject the default of localhost.
    identifier: localhost
    ## Subject configuration of the emails sent.
    ## {title} is replaced by the text from the notifier
    subject: "[Authelia] {title}"
    ## This address is used during the startup check to verify the email configuration is correct.
    ## It's not important what it is except if your email server only allows local delivery.
    startup_check_address: test@authelia.com
    disable_require_tls: false
    disable_html_emails: false

    tls:
      ## Server Name for certificate validation (in case you are using the IP or non-FQDN in the host option).
      server_name: ""

      ## Skip verifying the server certificate (to allow a self-signed certificate).
      ## In preference to setting this we strongly recommend you add the public portion of the certificate to the
      ## certificates directory which is defined by the `certificates_directory` option at the top of the config.
      skip_verify: false

      ## Minimum TLS version for either StartTLS or SMTPS.
      minimum_version: TLS1.2


##
## Access Control Configuration
##
## Access control is a list of rules defining the authorizations applied for one resource to users or group of users.
##
## If 'access_control' is not defined, ACL rules are disabled and the 'bypass' rule is applied, i.e., access is allowed
## to anyone. Otherwise restrictions follow the rules defined.
##
## Note: One can use the wildcard * to match any subdomain.
## It must stand at the beginning of the pattern. (example: *.mydomain.com)
##
## Note: You must put patterns containing wildcards between simple quotes for the YAML to be syntactically correct.
##
## Definition: A 'rule' is an object with the following keys: 'domain', 'subject', 'policy' and 'resources'.
##
## - 'domain' defines which domain or set of domains the rule applies to.
##
## - 'subject' defines the subject to apply authorizations to. This parameter is optional and matching any user if not
##    provided. If provided, the parameter represents either a user or a group. It should be of the form
##    'user:<username>' or 'group:<groupname>'.
##
## - 'policy' is the policy to apply to resources. It must be either 'bypass', 'one_factor', 'two_factor' or 'deny'.
##
## - 'resources' is a list of regular expressions that matches a set of resources to apply the policy to. This parameter
##   is optional and matches any resource if not provided.
##
## Note: the order of the rules is important. The first policy matching (domain, resource, subject) applies.
access_control:
  ## Default policy can either be 'bypass', 'one_factor', 'two_factor' or 'deny'. It is the policy applied to any
  ## resource if there is no policy to be applied to the user.
  default_policy: deny

  networks: []
  # networks:
  # - name: private
  #   networks:
  #   - 10.0.0.0/8
  #   - 172.16.0.0/12
  #   - 192.168.0.0/16
  # - name: vpn
  #   networks:
  #   - 10.9.0.0/16

  rules: []
  # rules:
  # - domain: public.example.com
  #   policy: bypass
  # - domain: "*.example.com"
  #   policy: bypass
  #   methods:
  #   - OPTIONS
  # - domain: secure.example.com
  #   policy: one_factor
  #   networks:
  #   - private
  #   - vpn
  #   - 192.168.1.0/24
  #   - 10.0.0.1
  # - domain:
  #   - secure.example.com
  #   - private.example.com
  #   policy: two_factor
  # - domain: singlefactor.example.com
  #   policy: one_factor
  # - domain: "mx2.mail.example.com"
  #   subject: "group:admins"
  #   policy: deny
  # - domain: "*.example.com"
  #   subject:
  #   - "group:admins"
  #   - "group:moderators"
  #   policy: two_factor
  # - domain: dev.example.com
  #   resources:
  #   - "^/groups/dev/.*$"
  #   subject: "group:dev"
  #   policy: two_factor
  # - domain: dev.example.com
  #   resources:
  #   - "^/users/john/.*$"
  #   subject:
  #   - ["group:dev", "user:john"]
  #   - "group:admins"
  #   policy: two_factor
  # - domain: "{user}.example.com"
  #   policy: bypass
