image:
  repository: docspell/restserver
  tag: v0.31.0@sha256:4faf2b35598e9e7e1f9add59130ca9cf43ccbca675011b2ff5f772ae55e19b21
  pullPolicy: IfNotPresent

joexImage:
  repository: docspell/joex
  tag: v0.31.0@sha256:05ad93fc95e9178d3ecd270438d41a237060a4d8546815c6488c687c9b854671

solrImage:
  repository: solr
  tag: 8.11.1@sha256:4f7445630b788708b070ec3a18d21d4a2cb40d79c373ede76720633e936e9d41

secret:
  # If empty, endpoint is disabled
  DOCSPELL_SERVER_ADMIN__ENDPOINT_SECRET: ""
  DOCSPELL_SERVER_AUTH_SERVER__SECRET: "changeme"
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_HTTP__HEADER_HEADER__VALUE: "changeme"
  DOCSPELL_SERVER_BACKEND_SIGNUP_NEW__INVITE__PASSWORD: "changeme"

env:
  TZ: "UTC"
  # App ID should be unique on each node
  DOCSPELL_SERVER_APP__ID: "{{ randAlphaNum 10 | quote }}"
  # App name to show on the top right corner
  DOCSPELL_SERVER_APP__NAME: "Docspell"
  DOCSPELL_SERVER_BACKEND_JDBC_USER: "{{ .Values.postgresql.postgresqlUsername }}"
  DOCSPELL_SERVER_INTERNAL__URL: 'http://{{ include "common.names.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.main.ports.main.port }}'
  DOCSPELL_SERVER_BASE__URL: 'http://{{ include "common.names.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.main.ports.main.port }}'
  DOCSPELL_SERVER_BIND_ADDRESS: 'http://{{ include "common.names.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local'
  DOCSPELL_SERVER_BIND_PORT: "{{ .Values.service.main.ports.main.port }}"
  DOCSPELL_SERVER_AUTH_REMEMBER__ME_ENABLED: true
  DOCSPELL_SERVER_AUTH_REMEMBER__ME_VALID: "30 days"
  DOCSPELL_SERVER_AUTH_SESSION__VALID: "5 minutes"
  DOCSPELL_SERVER_BACKEND_FILES_CHUNK__SIZE: 524288
  DOCSPELL_SERVER_BACKEND_MAIL__DEBUG: false
  DOCSPELL_SERVER_BACKEND_SIGNUP_INVITE__TIME: "3 days"
  DOCSPELL_SERVER_BACKEND_SIGNUP_MODE: "open"
  DOCSPELL_SERVER_FULL__TEXT__SEARCH_ENABLED: false
  DOCSPELL_SERVER_FULL__TEXT__SEARCH_SOLR_COMMIT__WITHIN: 1000
  DOCSPELL_SERVER_FULL__TEXT__SEARCH_SOLR_DEF__TYPE: "lucene"
  DOCSPELL_SERVER_FULL__TEXT__SEARCH_SOLR_LOG__VERBOSE: false
  DOCSPELL_SERVER_FULL__TEXT__SEARCH_SOLR_Q__OP: "OR"
  DOCSPELL_SERVER_FULL__TEXT__SEARCH_SOLR_URL: "http://localhost:8983/solr/docspell"
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_ALLOWED__IPS_ENABLED: false
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_ENABLED: false
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_HTTP__BASIC_ENABLED: false
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_HTTP__BASIC_PASSWORD: "docspell-int"
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_HTTP__BASIC_REALM: "Docspell Integration"
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_HTTP__BASIC_USER: "docspell-int"
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_HTTP__HEADER_ENABLED: false
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_HTTP__HEADER_HEADER__NAME: "Docspell-Integration"
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_PRIORITY: "low"
  DOCSPELL_SERVER_INTEGRATION__ENDPOINT_SOURCE__NAME: "integration"
  DOCSPELL_SERVER_MAX__ITEM__PAGE__SIZE: 200
  DOCSPELL_SERVER_MAX__NOTE__LENGTH: 180
  DOCSPELL_SERVER_SHOW__CLASSIFICATION__SETTINGS: true




envValueFrom:
  DOCSPELL_SERVER_BACKEND_JDBC_PASSWORD:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password
  DOCSPELL_SERVER_BACKEND_JDBC_URL:
    secretKeyRef:
      name: dbcreds
      key: jdbc

service:
  main:
    ports:
      main:
        port: 7880
        targetPort: 7880
  solr:
    ports:
      solr:
        port: 8983
        targetPort: "{{ .Values.additionalContainers.solr.ports.main.containerPort }}"
  joex:
    ports:
      joex:
        port: 7878
        targetPort: "{{ .Values.additionalContainers.joex.ports[0].containerPort }}"

additionalContainers:
  solr:
    name: solr
    image: "{{ .Values.solrImage.repository }}:{{ .Values.solrImage.tag }}"
    ports:
      - containerPort: 8983
        name: main
    command:
      - solr-precreate
      - docspell
    volumeMounts:
    - name: solr
      mountPath: "/var/solr"
    livenessProbe:
      exec:
      # TODO: Figure out the dns genertaion for additional containers
        command: ["curl", "-f", "http://{{ include \"common.names.fullname\" . }}-solr.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.solr.ports.solr.targetPort }}/solr/docspell/admin/ping"]
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
    readinessProbe:
      exec:
      # TODO: Figure out the dns genertaion for additional containers
        command: ["curl", "-f", "http://{{ include \"common.names.fullname\" . }}-solr.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.solr.ports.solr.targetPort }}/solr/docspell/admin/ping"]
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
  joex:
    name: joex
    image: "{{ .Values.joexImage.repository }}:{{ .Values.joexImage.tag }}"
    ports:
      - containerPort: 7878
        name: main
    env:
      - name: TZ
        value: "{{ .Values.env.TZ }}"
      - name: DOCSPELL_JOEX_JDBC_USER
        value: "{{ .Values.postgresql.postgresqlUsername }}"
      - name: DOCSPELL_JOEX_JDBC_URL
        valueFrom:
          secretKeyRef:
            name: dbcreds
            key: jdbc
      - name: DOCSPELL_JOEX_JDBC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: dbcreds
            key: postgresql-password
      - name: DOCSPELL_JOEX_BASE__URL
      # TODO: Figure out the dns genertaion for additional containers
        value: 'http://{{ include "common.names.fullname" . }}-joex.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.joex.ports.joex.targetPort }}'


persistence:
  solr:
    enabled: true
    mountPath: "/var/solr"

# Enabled postgres
postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: docspell
  postgresqlDatabase: docspell
