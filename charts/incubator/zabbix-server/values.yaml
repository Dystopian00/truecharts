image:
  repository: tccr.io/truecharts/zabbix-server
  tag: 6.2.3@sha256:8047806dbb02b779c1fa4dc47f96bc02f35836800ee21a260ccf2e88928c6e97
  pullPolicy: IfNotPresent

webImage:
  repository: tccr.io/truecharts/zabbix-web
  tag: 6.2.3@sha256:b58cdcfe7ab5d8d80b46f6766aea7f44f5ce2ac8c80ecf0c5450e206fd692e1d
  pullPolicy: IfNotPresent

snmptrapsImage:
  repository: tccr.io/truecharts/zabbix-snmptraps
  tag: 6.2.3@sha256:46142f4717a8e8f27da16a82690a62f6bbb18dc5db423610faec53cedf7db8fe
  pullPolicy: IfNotPresent

tty: true

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

zabbix:
  server:
  frontend:
    server_name: My Zabbix Server
    enable_access_logs: true
    max_execution_time: 300
    memory_limit: 128M
    post_max_size: 16M
    upload_max_file_size: 2M
    max_input_time: 300
    session_name: zbx_sessionid
    access_ip_range: []
    deny_gui_access: false
    warning_message: Zabbix Server is under maintenance
    # Advanced
    sso_settings: ""
    php_fpm_pm: dynamic
    php_fpm_pm_max_children: 50
    php_fpm_pm_start_servers: 5
    php_fpm_pm_min_spare_servers: 5
    php_fpm_pm_max_spare_servers: 35
    php_fpm_pm_max_requests: 0
  agent:

env:
  ZBX_WEBSERVICEURL: "http://localhost:8080/report"
  ZBX_ENABLE_SNMP_TRAPS: true
  # User Defined
  ZBX_LOADMODULE: ""
  ZBX_TIMEOUT: 4

envFrom:
  - secretRef:
      name: '{{ include "tc.common.names.fullname" . }}-common-secret'
  - configMapRef:
      name: '{{ include "tc.common.names.fullname" . }}-common-config'
  - configMapRef:
      name: '{{ include "tc.common.names.fullname" . }}-server-config'

service:
  main:
    ports:
      main:
        port: 10211
        targetPort: 8080
  server:
    enabled: true
    ports:
      server:
        enabled: true
        port: 10051
  snmptraps:
    enabled: true
    ports:
      snmptraps:
        protocol: UDP
        enabled: true
        port: 162
        targetPort: 1162

probes:
  liveness:
    custom: true
    spec:
      exec:
        command:
          - /bin/bash
          - -ec
          - "until zabbix_server -R ha_status; do sleep 2; done"
  readiness:
    custom: true
    spec:
      exec:
        command:
          - /bin/bash
          - -ec
          - "until zabbix_server -R ha_status; do sleep 2; done"
  startup:
    custom: true
    spec:
      exec:
        command:
          - /bin/bash
          - -ec
          - "until zabbix_server -R ha_status; do sleep 2; done"

additionalContainers:
  #   agent:
  #     name: agent
  #     image: "{{ .Values.agentImage.repository }}:{{ .Values.agentImage.tag }}"
  #     env:
  #       - name: ZBX_HOSTNAME
  #         value: "{{ .Release.Name }}-{{ randAlphaNum 5 }}"
  #       - name: ZBX_SERVER_HOST
  #         value: "localhost"
  #       - name: ZBX_SERVER_PORT
  #         value: "{{ .Values.service.server.ports.server.targetPort }}"
  snmptraps:
    name: snmptraps
    image: "{{ .Values.snmptrapsImage.repository }}:{{ .Values.snmptrapsImage.tag }}"
    volumeMounts:
      - name: snmptraps
        mountPath: "/var/lib/zabbix/snmptraps"

persistence:
  # Shared
  snmptraps:
    enabled: true
    mountPath: "/var/lib/zabbix/snmptraps"
  # Server
  # alertscripts:
  #   enabled: true
  #   mountPath: "/usr/lib/zabbix/alertscripts"
  # externalscripts:
  #   enabled: true
  #   mountPath: "/usr/lib/zabbix/externalscripts"
  # modules:
  #   enabled: true
  #   mountPath: "/var/lib/zabbix/modules"
  # enc:
  #   enabled: true
  #   mountPath: "/var/lib/zabbix/enc"
  # ssh_keys:
  #   enabled: true
  #   mountPath: "/var/lib/zabbix/ssh_keys"
  # sslcerts:
  #   enabled: true
  #   mountPath: "/var/lib/zabbix/ssl/certs"
  # sslkeys:
  #   enabled: true
  #   mountPath: "/var/lib/zabbix/ssl/keys"
  # sslca:
  #   enabled: true
  #   mountPath: "/var/lib/zabbix/ssl/ssl_ca"
  # mibs:
  #   enabled: true
  #   mountPath: "/var/lib/zabbix/mibs"
  # export:
  #   enabled: true
  #   mountPath: "/var/lib/zabbix/export"
  # SNMP-Traps
  # snmp-mibs:
  #     enabled: true
  #     mountPath: "/var/lib/zabbix/mibs"

postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: zabbix
  postgresqlDatabase: zabbix

portal:
  enabled: true
