# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controller}
# Include{controllerDeployment}
# Include{replicas}
# Include{replica1}
# Include{strategy}
# Include{recreate}
# Include{controllerExpert}
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: ZBX_LOADMODULE
          label: "ZBX_LOADMODULE"
          description: "The variable is list of comma separated loadable Zabbix modules. It works with volume /var/lib/zabbix/modules. The syntax of the variable is dummy1.so,dummy2.so."
          schema:
            type: string
            default: ""
        - variable: ZBX_TIMEOUT
          label: "ZBX_TIMEOUT"
          description: "The variable is used to specify timeout for processing checks. By default, value is 4."
          schema:
            type: int
            default: 4
  - variable: frontendConfig
    group: "Container Configuration"
    label: "Web Frontend Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: ZBX_SERVER_NAME
          label: "ZBX_SERVER_NAME"
          description: "The variable is visible Zabbix installation name in right top corner of the web interface."
          schema:
            type: string
            default: "Zabbix Instance"
        - variable: ZBX_GUI_WARNING_MSG
          label: "ZBX_GUI_WARNING_MSG"
          description: "Zabbix instance is currently in maintenance."
          schema:
            type: string
            default: "Zabbix Instance"
        - variable: ZBX_DENY_GUI_ACCESS
          label: "ZBX_DENY_GUI_ACCESS"
          description: "Enable (true) maintenance mode for Zabbix web-interface."
          schema:
            type: boolean
            default: false
        - variable: ZBX_GUI_ACCESS_IP_RANGE
          label: "ZBX_GUI_ACCESS_IP_RANGE"
          description: "Array of IP addresses which are allowed for accessing to Zabbix web-interface during maintenance period."
          schema:
            type: string
            default: ""
        - variable: ZBX_MEMORYLIMIT
          label: "ZBX_MEMORYLIMIT"
          description: "The varable is PHP memory_limit option. By default, value is 128M."
          schema:
            type: string
            default: "128M"
        - variable: ZBX_POSTMAXSIZE
          label: "ZBX_POSTMAXSIZE"
          description: "The varable is PHP post_max_size option. By default, value is 16M."
          schema:
            type: string
            default: "16M"
        - variable: ZBX_UPLOADMAXFILESIZE
          label: "ZBX_UPLOADMAXFILESIZE"
          description: "The varable is PHP upload_max_filesize option. By default, value is 2M."
          schema:
            type: string
            default: "2M"
        - variable: ZBX_MAXEXECUTIONTIME
          label: "ZBX_MAXEXECUTIONTIME"
          description: "The varable is PHP max_execution_time option. By default, value is 300."
          schema:
            type: int
            default: 300
        - variable: ZBX_MAXINPUTTIME
          label: "ZBX_MAXINPUTTIME"
          description: "The varable is PHP max_input_time option. By default, value is 300."
          schema:
            type: int
            default: 300
# Include{containerConfig}
  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10211
                              required: true
# Include{advancedPortHTTP}
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 8080
        - variable: server
          label: "Server Service"
          description: "The Server Service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: server
                      label: "Server Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10212
                              required: true
# Include{advancedPortHTTP}
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 10051
        - variable: snmptraps
          label: "SNMP Traps Service"
          description: "SNMP Traps Service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: snmptraps
                      label: "SNMP Traps Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 162
                              required: true
# Include{advancedPortHTTP}
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 1162
  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false
# Include{serviceExpert}
# Include{serviceList}
  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: snmptraps
          label: "App snmptraps Storage"
          description: "Stores the Application snmptraps."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
        - variable: server
          label: "Server Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}
  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
