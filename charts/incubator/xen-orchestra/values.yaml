image:
  repository: tccr.io/truecharts/xenorchestra
  tag: 5.102.3@sha256:b8b08278060895a3a889709faddda505c4c426ad1fa50b4953ea8ff317ecc861
  pullPolicy: IfNotPresent

command:
  - /bin/sh
  - -c
  - |
    echo "Injecting redis config..."
    redisURI="{{ printf "redis://%v:%v@%v-redis:6379/%v" .Values.redis.redisUsername (.Values.redis.redisPassword | trimAll "\"") .Release.Name .Values.redis.redisDatabase }}"
    sed -i "s/^uri.*redis.*$/$redisURI/" "/xo-server.toml.j2"
    echo "Done!"
    echo "Starting Xen Orchestra!"
    cat "/xo-server.toml.j2"
    /run.sh

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false
  capabilities:
    add:
      - SYS_ADMIN

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

env:
  HTTPS_PORT: "{{ .Values.service.main.ports.main.port }}"
  # Just so it doesn't try to bind port 80
  HTTP_PORT: "{{ add1 .Values.service.main.ports.main.port }}"
  REDIRECT_TO_HTTPS: true

probes:
  liveness:
    enabled: true
    custom: true
    spec:
      exec:
        command:
          - /healthcheck.sh
  readiness:
    enabled: true
    custom: true
    spec:
      exec:
        command:
          - /healthcheck.sh
  startup:
    enabled: true
    custom: true
    spec:
      exec:
        command:
          - /healthcheck.sh

service:
  main:
    ports:
      main:
        procotol: HTTPS
        port: 10324

persistence:
  xo-data:
    enabled: true
    mountPath: "/var/lib/xo-server"
  redis-data:
    enabled: true
    mountPath: "/var/lib/redis"

redis:
  enabled: true
  existingSecret: rediscreds
  redisUsername: xen
  redisDatabase: "0"

portal:
  enabled: true
