image:
  repository: tccr.io/truecharts/meshcentral
  pullPolicy: IfNotPresent
  tag: latest@sha256:1c28727b9d2e1d4288c05bfc50a3b789dd293e2b83f44068a504b36e3b0de558

command: ["cat /opt/meshcentral/meshcentral-data/config.json"]

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

service:
  main:
    ports:
      main:
        protocol: "HTTPS"
        port: 10205

initContainers:
  init:
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    volumeMounts:
      - name: data
        mountPath: "/opt/meshcentral/meshcentral-data"
    env:
      - name: svcPort
        value: "{{ .Values.service.main.ports.main.port }}"
      - name: "mongodbURL"
        valueFrom:
          secretKeyRef:
            name: mongodbcreds
            key: url
    command: ["/bin/sh", "-c"]
    args:
      - >
        export configfile = /opt/meshcentral/meshcentral-data/config.json";
        if [ -f $configfile ]; then
          echo "Config File exists, skipping...";
        else
          echo "Creating basic config file ($configfile)...";
          echo "{" >> $configfile;
          echo "  "settings": {" >> $configfile;
          echo "    "port": $svcPort," >> $configfile;
          echo "    "mongoDb": "$mongodbURL"," >> $configfile;
          echo "  }" >> $configfile;
          echo "}" >> $configfile;
        fi;

mongodb:
  enabled: true
  mongodbUsername: meshcentral
  mongodbDatabase: meshcentral
  existingSecret: "mongodbcreds"

persistence:
  data:
    enabled: true
    mountPath: "/opt/meshcentral/meshcentral-data"
  user:
    enabled: true
    mountPath: "/opt/meshcentral/meshcentral-files"
