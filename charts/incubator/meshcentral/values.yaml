image:
  repository: tccr.io/truecharts/meshcentral
  pullPolicy: IfNotPresent
  tag: 1.0.85@sha256:86ea102f40926709ce7bab442fc961822860aa8dd70b13b3b2e8af6e4edef2c9

extraArgs: ["--cert", "$hostname"]

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

meshcentral:
  settings:
    mongoDbBulkOperations: true
    # - Set this to the primary DNS name of this MeshCentral server.
    cert: mc.domain.com
  domains:
    "":
      # - The title of this web site. All web pages will have this title.
      title: TrueCharts MeshCentral
      # - Secondary title text that is placed on the upper right on the title on many web pages.
      title2: TrueCharts MeshCentral
      # - When enabled, the server will send reduced sized web pages.
      minify: true
      # - HTTPS URL when to get the TLS certificate that MeshAgent's will see when connecting to this server. This setting is used when a reverse proxy like Traefik is used in front of MeshCentral.
      certUrl: https://mc.domain.com

service:
  main:
    ports:
      main:
        protocol: HTTPS
        port: 10205

mongodb:
  enabled: true
  mongodbUsername: meshcentral
  mongodbDatabase: meshcentral
  existingSecret: mongodbcreds

persistence:
  data:
    enabled: true
    mountPath: "/home/node/meshcentral/meshcentral-data"
  files:
    enabled: true
    mountPath: "/home/node/meshcentral/meshcentral-files"
  configfile:
    enabled: true
    type: secret
    readOnly: true
    objectName: '{{ include "tc.common.names.fullname" . }}-secret'
    mountPath: /home/node/meshcentral/meshcentral-data
    items:
    - key: config.json
      path: config.json

portal:
  enabled: true
















# env:
#   hostname: test.example.com
#   reverseProxyUrl: https://test.example.com


# initContainers:
#   init:
#     image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
#     volumeMounts:
#       - name: data
#         mountPath: "/home/node/meshcentral/meshcentral-data"
#     env:
#       - name: hostname
#         value: "{{ .Values.env.hostname }}"
#       - name: reverseProxyUrl
#         value: "{{ .Values.env.reverseProxyUrl }}"
#       - name: svcPort
#         value: "{{ .Values.service.main.ports.main.port }}"
#       - name: "mongodbURL"
#         valueFrom:
#           secretKeyRef:
#             name: mongodbcreds
#             key: url
#     command: ["/bin/bash", "-c"]
#     args:
#       - >
#         export configfile='/home/node/meshcentral/meshcentral-data/config.json';
#         export basePath='/home/node/meshcentral/meshcentral-data/truecharts';
#         mkdir -p $basePath;
#         else
#           echo "DO NOT DELETE DOT FILES IN THIS DIR" > $basePath/DO_NOT_DELETE_DOT_FILES_IN_THIS_DIR;
#           echo 'Creating basic config to $configfile...';
#           echo '{' >> $configfile;
#           echo '  "settings": {' >> $configfile;
#           echo '    "cert": "'$hostname'"' >> $configfile;
#           echo '  },' >> $configfile;
#           echo '  "domains": {' >> $configfile;
#           echo '    "": {' >> $configfile;
#           if [ ! -z $reverseProxyUrl ]; then
#             echo '      "certUrl": "'$reverseProxyUrl'"' >> $configfile;
#             # Save last reverse url used
#             echo $reverseProxyUrl > $basePath/.lastreverse;
#           else
#             # Underscore in front the the key is making it invisible to meshcentral
#             echo '      "_certUrl": "NOT_PROVIDED"' >> $configfile;
#             # Save last reverse url used
#             echo "NOT_PROVIDED" > $basePath/.lastreverse;
#           fi;
#           echo '    }' >> $configfile;
#           echo '  }' >> $configfile;
#           echo '}' >> $configfile;
#         fi;
