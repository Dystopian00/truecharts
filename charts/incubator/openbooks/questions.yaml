# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controller}
# Include{replicas}
# Include{replica1}
# Include{controllerExpertExtraArgs}
  - variable: env
    group: App Configuration
    label: Image Environment
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: USER_NAME
          label: User Name
          description: Username used to connect to IRC server.
          schema:
            type: string
            default: ""
            required: true
        - variable: DEBUG
          label: Debug
          description: Display additional debug information, including all config values.
          schema:
            type: boolean
            default: false
        - variable: LOG
          label: Log
          description: Save raw IRC logs for each client connection.
          schema:
            type: boolean
            default: false
        - variable: SEARCH
          label: Search
          description: The IRC search operator to use.
          schema:
            type: string
            default: false
            enum:
              - value: search
                description: Search
              - value: searchook
                description: Searchook
        - variable: PERSIST
          label: Persist
          description: Save eBook files after sending to browser.
          schema:
            type: boolean
            default: false
        - variable: NO_BROWSER_DOWNLOADS
          label: No Browser Downloads
          description: Don't send files to browser but save them to disk.
          schema:
            type: boolean
            default: false
        - variable: SERVER
          label: Server
          description: The IRC server:port to connect to.
          schema:
            type: string
        - variable: TLS
          label: TLS
          description: Connect to IRC server over TLS.
          schema:
            type: boolean
            default: true
# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 10607
                              required: true
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: books
          label: App Books Storage
          description: Stores the Application Books.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: Privileged mode
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: ReadOnly Root Filesystem
                schema:
                  type: boolean
                  default: true
              - variable: allowPrivilegeEscalation
                label: Allow Privilege Escalation
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: runAsNonRoot
                schema:
                  type: boolean
                  default: true
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: runAsUser
          description: The UserID of the user running the application
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: runAsGroup
          description: The groupID this App of the user running the application
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: fsGroup
          description: The group that should own ALL storage.
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{vpn}
# Include{documentation}
