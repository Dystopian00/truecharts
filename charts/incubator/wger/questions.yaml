# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}
# Include{controller}
# Include{controllerDeployment}
# Include{replicas}
# Include{replica1}
# Include{strategy}
# Include{recreate}
# Include{controllerExpert}
  - variable: wger
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: sync_exercises_on_startup
          label: "SYNC_EXERCISES_ON_STARTUP (Slow Startup)"
          description: "Enabling that can greatly impact the startup of this app"
          schema:
            type: boolean
            default: false
        - variable: download_exercise_images_on_startup
          label: "DOWNLOAD_EXERCISE_IMAGES_ON_STARTUP (Slow Startup)"
          description: "Enabling that can greatly impact the startup of this app"
          schema:
            type: boolean
            default: false
        - variable: allow_registration
          label: "ALLOW_REGISTRATION"
          schema:
            type: boolean
            default: true
        - variable: allow_guest_users
          label: "ALLOW_GUEST_USERS"
          schema:
            type: boolean
            default: true
        - variable: allow_upload_videos
          label: "ALLOW_UPLOAD_VIDEOS"
          schema:
            type: boolean
            default: true
        - variable: exercise_cache_ttl
          label: "EXERCISE_CACHE_TTL"
          schema:
            type: string
            required: true
            default: "3600"
        - variable: django_perform_migrations
          label: "DJANGO_PERFORM_MIGRATIONS"
          schema:
            type: boolean
            default: true
        - variable: django_debug
          label: "DJANGO_DEBUG"
          schema:
            type: boolean
            default: false
        - variable: enable_email
          label: "Email Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: from_email
                label: "FROM_EMAIL"
                schema:
                  type: string
                  default: ""
              - variable: email_host
                label: "EMAIL_HOST"
                schema:
                  type: string
                  default: ""
              - variable: email_port
                label: "EMAIL_PORT"
                schema:
                  type: string
                  required: true
                  default: "587"
              - variable: email_host_user
                label: "EMAIL_HOST_USER"
                schema:
                  type: string
                  default: ""
              - variable: email_host_password
                label: "EMAIL_HOST_PASSWORD"
                schema:
                  type: string
                  private: true
                  default: ""
              - variable: email_use_tls
                label: "EMAIL_USE_TLS"
                schema:
                  type: boolean
                  default: false
              - variable: email_use_ssl
                label: "EMAIL_USE_SSL"
                schema:
                  type: boolean
                  default: false
        - variable: captchasettings
          label: "Captcha Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: recaptha_public_key
                label: "RECAPTCHA_PUBLIC_KEY"
                schema:
                  type: string
                  default: ""
              - variable: recaptha_private_key
                label: "RECAPTCHA_PRIVATE_KEY"
                schema:
                  type: string
                  private: true
                  default: ""
              - variable: nocaptcha
                label: "NOCAPTCHA"
                schema:
                  type: boolean
                  default: true
# Include{containerConfig}
  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10249
                              required: true
# Include{advancedPortHTTP}
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 80
  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false
# Include{serviceExpert}
# Include{serviceList}
  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: media
          label: "App Media Storage"
          description: "Stores the Application Media."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}
  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 1000
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 1000
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 1000
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
