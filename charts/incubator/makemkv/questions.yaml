# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}
  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}
  - variable: secret
    group: "Container Configuration"
    label: "Image Secrets"
    schema:
      additional_attrs: true
      type: dict
      attrs:
              - variable: VNC_PASSWORD
                label: "VNC_PASSWORD"
                description: "Password needed to connect to the application's GUI. See the VNC Password section for more details."
                schema:
                  type: string
                  private: true
                  default: ""

  - variable: makemkv
    group: "Container Configuration"
    label: "MakeMKV Configuration"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: KEEP_APP_RUNNING
          label: "KEEP_APP_RUNNING"
          description: "When set to true, the application will be automatically restarted if it crashes or if a user quits it."
          schema:
            type: boolean
            default: false
        - variable: SECURE_CONNECTION
          label: "SECURE_CONNECTION"
          description: "When set to true, an encrypted connection is used to access the application's GUI (either via a web browser or VNC client)."
          schema:
            type: boolean
            default: false
        - variable: DISPLAY_WIDTH
          label: "DISPLAY_WIDTH"
          description: "Width (in pixels) of the application's window."
          schema:
            type: int
            default: 1280
        - variable: DISPLAY_HEIGHT
          label: "DISPLAY_HEIGHT"
          description: "Height (in pixels) of the application's window."
          schema:
            type: int
            default: 768
        - variable: MAKEMKV_KEY
          label: "MAKEMKV_KEY"
          description: "MakeMKV registration key to use."
          schema:
            type: string
            default: "BETA"
        - variable: AUTO_DISC_RIPPER_INTERVAL
          label: "AUTO_DISC_RIPPER_INTERVAL"
          description: "Interval, in seconds, the automatic disc ripper checks for the presence of a DVD/Blu-ray discs."
          schema:
            type: int
            default: 5
        - variable: AUTO_DISC_RIPPER_BD_MODE
          label: "AUTO_DISC_RIPPER_BD_MODE"
          description: "Rip mode of Blu-ray discs. mkv is the default mode, where a set of MKV files are produced. When set to backup, a copy of the (decrypted) file system is created instead. This applies to Blu-ray discs only. For DVD discs, MKV files are always produced."
          schema:
            type: string
            default: "mkv"
        - variable: AUTO_DISC_RIPPER_MAKEMKV_PROFILE
          label: "AUTO_DISC_RIPPER_MAKEMKV_PROFILE"
          description: "Filename of the custom MakeMKV profile the automatic disc ripper should use. The profile is expected to be found under the /config folder of the container."
          schema:
            type: string
            default: ""
        - variable: AUTO_DISC_RIPPER
          label: "AUTO_DISC_RIPPER"
          description: "When set to true, disc is ejected from the drive when ripping is terminated."
          schema:
            type: boolean
            default: false
        - variable: AUTO_DISC_RIPPER_EJECT
          label: "AUTO_DISC_RIPPER_EJECT"
          description: "When set to true, disc is ejected from the drive when ripping is terminated."
          schema:
            type: boolean
            default: false
        - variable: AUTO_DISC_RIPPER_PARALLEL_RIP
          label: "AUTO_DISC_RIPPER_PARALLEL_RIP"
          description: "When set to true, discs from all available optical drives are ripped in parallel. Else, each disc from optical drives is ripped one at time."
          schema:
            type: boolean
            default: false
        - variable: AUTO_DISC_RIPPER_NO_GUI_PROGRESS
          label: "AUTO_DISC_RIPPER_NO_GUI_PROGRESS"
          description: "When set to true, progress of discs ripped by the automatic disc ripper is not shown in the MakeMKV GUI."
          schema:
            type: boolean
            default: false
        - variable: AUTO_DISC_RIPPER_FORCE_UNIQUE_OUTPUT_DIR
          label: "AUTO_DISC_RIPPER_FORCE_UNIQUE_OUTPUT_DIR"
          description: "When set to false, files are written to /output/DISC_LABEL/, where DISC_LABEL is the label/name of the disc. If this directory exists, then files are written to /output/DISC_LABEL-XXXXXX, where XXXXXX are random readable characters. When set to true, the /output/DISC_LABEL-XXXXXX pattern is always used."
          schema:
            type: boolean
            default: false

# Include{containerConfig}

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10178
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: "HTTP"
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 8080

  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}

# Include{persistenceList}

  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}

# Include{ingressTLS}

# Include{ingressTraefik}

# Include{ingressExpert}

# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}

# Include{resources}

# Include{advanced}

# Include{addons}
