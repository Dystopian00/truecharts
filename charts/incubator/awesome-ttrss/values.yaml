image:
  repository: wangqiru/ttrss
  pullPolicy: IfNotPresent
  tag: latest@sha256:3cfb6596ba60eded1078f7888b85defef32d3143da123227578671c4a4cde760

mercuryParserImage:
  repository: wangqiru/mercury-parser-api
  tag: latest@sha256:e150c1d477c008012ed4a74cddf12571475dbf7080c6b0012e8e49d9eaba5e5f

openccImage:
  repository: wangqiru/opencc-api-server
  tag: latest@sha256:df6c992935d0afee2ed1226ddf82079c19f6ee77cd8332ec82721a6d62aad97e

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

env:
  TTRSS_DB_NAME: "{{ .Values.postgresql.postgresqlDatabase }}"
  TTRSS_DB_USER: "{{ .Values.postgresql.postgresqlUsername }}"
  TTRSS_DB_PORT: "5432"
  # User Defined
  TTRSS_SELF_URL_PATH: "http://localhost:80"
  SESSION_COOKIE_LIFETIME: 24
  DISABLE_USER_IN_DAYS: 15
  FEED_LOG_QUIET: true

envValueFrom:
  TTRSS_DB_PASS:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password
  TTRSS_DB_HOST:
    secretKeyRef:
      name: dbcreds
      key: plainhost

persistence:
  feedicons:
    enabled: true
    mountPath: "/var/www/feed-icons/"

service:
  main:
    ports:
      main:
        port: 10192
        targetPort: 80

postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: tt-rss
  postgresqlDatabase: tt-rss

additionalContainers:
  mercuryParser:
    name: mercury-parser-api
    image: "{{ .Values.mercuryParserImage.repository }}:{{ .Values.mercuryParserImage.tag }}"
    ports:
      - containerPort: 3001
        name: main
  opencc:
    name: opencc-api-server
    image: "{{ .Values.openccImage.repository }}:{{ .Values.openccImage.tag }}"
    env:
      - name: NODE_ENV
        value: "production"
        # This is not on devs docs, but according to https://github.com/HenryQW/OpenCC.henry.wang/blob/1ecd3247ecb94548dcf5da62bdf0e317f8375f65/bin/www#L15
        # it should work
      - name: PORT
        value: "3001"
    ports:
      - containerPort: 3001
        name: main
