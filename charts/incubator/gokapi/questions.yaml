# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}
# Include{controller}
# Include{controllerDeployment}
# Include{controllerStrategies}
# Include{controllerExpert}
  - variable: secretEnv
    group: "Container Configuration"
    label: "Image Secrets"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: GOKAPI_USERNAME
          label: "GOKAPI_USERNAME"
          schema:
            type: string
            required: true
            default: ""
        - variable: GOKAPI_PASSWORD
          label: "GOKAPI_PASSWORD"
          schema:
            type: string
            required: true
            private: true
            default: ""
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: GOKAPI_LENGTH_ID
          label: "GOKAPI_LENGTH_ID"
          description: "Sets the length of the download IDs."
          schema:
            type: int
            default: 15
        - variable: GOKAPI_MAX_FILESIZE
          label: "GOKAPI_MAX_FILESIZE"
          description: "Sets the maximum allowed file size in MB"
          schema:
            type: int
            default: 102400
        - variable: GOKAPI_MAX_MEMORY_UPLOAD
          label: "GOKAPI_MAX_MEMORY_UPLOAD"
          description: "Sets the amount of RAM in MB that can be allocated for an upload. Any upload with a size greater than that will be written to a temporary file"
          schema:
            type: int
            default: 20
        - variable: awsconfig
          label: "Configure AWS Storage"
          description: "Sets the amount of RAM in MB that can be allocated for an upload. Any upload with a size greater than that will be written to a temporary file"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: GOKAPI_AWS_BUCKET
                label: "GOKAPI_AWS_BUCKET"
                description: "Sets the bucket name"
                schema:
                  type: string
                  default: ""
              - variable: GOKAPI_AWS_REGION
                label: "GOKAPI_AWS_REGION"
                description: "Sets the region name"
                schema:
                  type: string
                  default: ""
              - variable: GOKAPI_AWS_KEY
                label: "GOKAPI_AWS_KEY"
                description: "Sets the API key"
                schema:
                  type: string
                  private: true
                  default: ""
              - variable: GOKAPI_AWS_KEY_SECRET
                label: "GOKAPI_AWS_KEY_SECRET"
                description: "Sets the API key secret"
                schema:
                  type: string
                  private: true
                  default: ""
              - variable: GOKAPI_AWS_ENDPOINT
                label: "GOKAPI_AWS_ENDPOINT"
                description: "Sets the endpoint"
                schema:
                  type: string
                  default: ""
# Include{containerConfig}
  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 53842
                              required: true
# Include{advancedPortHTTP}
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 53842
  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false
# Include{serviceExpert}
# Include{serviceList}
  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: config
          label: "config Storage"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
        - variable: data
          label: "data Storage"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: true
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: true
# Include{securityContextAdvanced}
  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
