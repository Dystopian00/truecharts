# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}
  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: ROOT_URL
          label: "ROOT_URL"
          schema:
            type: string
            default: ""
            required: true
        - variable: BROWSER_POLICY_ENABLED
          label: "BROWSER_POLICY_ENABLED"
          description: "Enable browser policy and allow one trusted URL that can have iframe that has Wekan embedded inside."
          schema:
            type: boolean
            default: false
        - variable: TRUSTED_URL
          label: "TRUSTED_URL"
          description: "When browser policy is enabled, HTML code at this Trusted URL can have iframe that embeds Wekan inside."
          schema:
            type: string
            default: ""
        - variable: WITH_API
          label: "WITH_API"
          schema:
            type: boolean
            default: true
        - variable: RESULTS_PER_PAGE
          label: "RESULTS_PER_PAGE"
          schema:
            type: int
            default: 20
            required: true
        - variable: RICHER_CARD_COMMENT_EDITOR
          label: "RICHER_CARD_COMMENT_EDITOR"
          schema:
            type: boolean
            default: false
        - variable: CARD_OPENED_WEBHOOK_ENABLED
          label: "CARD_OPENED_WEBHOOK_ENABLED"
          schema:
            type: boolean
            default: false
        - variable: PASSWORD_LOGIN_ENABLED
          label: "PASSWORD_LOGIN_ENABLED"
          schema:
            type: boolean
            default: false
        - variable: WAIT_SPINNER
          label: "WAIT_SPINNER"
          description: "Sets the Wait Spinner animation"
          schema:
            type: string
            default: "Bounce"
            enum:
              - value: "Bounce"
                description: "Bounce"
              - value: "Cube"
                description: "Cube"
              - value: "Cube-Grid"
                description: "Cube-Grid"
              - value: "Dot"
                description: "Dot"
              - value: "Double-Bounce"
                description: "Double-Bounce"
              - value: "Rotateplane"
                description: "Rotateplane"
              - value: "Scaleout"
                description: "Scaleout"
              - value: "Wave"
                description: "Wave"
        - variable: LOGOUT_WITH_TIMER
          label: "LOGOUT_WITH_TIMER"
          schema:
            type: boolean
            default: false
        - variable: LOGOUT_IN
          label: "LOGOUT_IN (Days)"
          schema:
            type: int
            default: 0
        - variable: LOGOUT_ON_HOURS
          label: "LOGOUT_ON_HOURS"
          schema:
            type: int
            default: 0
        - variable: LOGOUT_ON_MINUTES
          label: "LOGOUT_ON_MINUTES"
          schema:
            type: int
            default: 0
        - variable: WEBHOOKS_ATTRIBUTES
          label: "WEBHOOKS_ATTRIBUTES"
          description: "What to send to Outgoing Webhook."
          schema:
            type: string
            default: "cardId,listId,oldListId,boardId,comment,user,card,commentId,swimlaneId,customerField,customFieldValue"
        - variable: ACCOUNTS_COMMON_LOGIN_EXPIRATION_IN_DAYS
          label: "ACCOUNTS_COMMON_LOGIN_EXPIRATION_IN_DAYS"
          schema:
            type: int
            default: 90
        - variable: BIGEVENTS_PATTERN
          label: "BIGEVENTS_PATTERN"
          schema:
            type: string
            default: "NONE"
        - variable: NOTIFICATION_TRAY_AFTER_READ_DAYS_BEFORE_REMOVE
          label: "NOTIFICATION_TRAY_AFTER_READ_DAYS_BEFORE_REMOVE"
          description: "Number of days after a notification is read before we remove it."
          schema:
            type: int
            default: 90
# Include{containerConfig}

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10047
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: "HTTP"
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 4040

  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: type
                label: "Type of Storage"
                description: "Sets the persistence type, Anything other than PVC could break rollback!"
                schema:
                  type: string
                  default: "simplePVC"
                  enum:
                    - value: "simplePVC"
                      description: "PVC (simple)"
                    - value: "simpleHP"
                      description: "HostPath (simple)"
                    - value: "emptyDir"
                      description: "emptyDir"
                    - value: "pvc"
                      description: "pvc"
                    - value: "hostPath"
                      description: "hostPath"
# Include{persistenceBasic}
              - variable: hostPath
                label: "hostPath"
                description: "Path inside the container the storage is mounted"
                schema:
                  show_if: [["type", "=", "hostPath"]]
                  type: hostpath
              - variable: medium
                label: "EmptyDir Medium"
                schema:
                  show_if: [["type", "=", "emptyDir"]]
                  type: string
                  default: ""
                  enum:
                    - value: ""
                      description: "Default"
                    - value: "Memory"
                      description: "Memory"
# Include{persistenceAdvanced}

# Include{persistenceList}

  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}

# Include{ingressTLS}

# Include{ingressTraefik}

# Include{ingressExpert}

# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}

# Include{resources}

# Include{advanced}

# Include{addons}
