image:
  repository: linkace/linkace
  tag: v1.9.1@sha256:56a0f144c612b6ac0149a32c3a326ece7cd1814d815853cb3d0f413b47d2f765
  pullPolicy: IfNotPresent

nginxImage:
  repository: tccr.io/truecharts/nginx
  tag: v1.21.6@sha256:80d87a1d4d67749d2caaa64ee061a66a946b81942ac56f4780e36f8356cee371

securityContext:
  # readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

env:
  # Internal Envs
  DB_CONNECTION: "mysql"
  DB_PORT: "3306"
  DB_DATABASE: "{{ .Values.mariadb.mariadbDatabase }}"
  DB_USERNAME: "{{ .Values.mariadb.mariadbUsername }}"
  REDIS_PORT: "6379"
  CACHE_DRIVER: "redis"
  SESSION_DRIVER: "redis"
  APP_NAME: "LinkAce"
  APP_ENV: "production"
  APP_TIMEZONE: "{{ .Values.env.TZ }}"
  # User Envs
  TZ: UTC
  # APP_URL: "http://localhost"
  APP_DEBUG: false

envValueFrom:
  DB_HOST:
    secretKeyRef:
      name: mariadbcreds
      key: plainhost
  DB_PASSWORD:
    secretKeyRef:
      name: mariadbcreds
      key: mariadb-password
  REDIS_HOST:
    secretKeyRef:
      name: rediscreds
      key: plainhost
  REDIS_PASSWORD:
    secretKeyRef:
      name: rediscreds
      key: redis-password

additionalContainers:
  nginx:
    name: nginx
    image: "{{ .Values.nginxImage.repository }}:{{ .Values.nginxImage.tag }}"
    ports:
      - containerPort: 80
        name: main
    volumeMounts:
    - name: linkace-config
      mountPath: "/etc/nginx/conf.d/linkace.conf"
      subPath: nginx-config
      readOnly: true
    - name: app
      mountPath: "/app"

initContainers:
# App checks ".env" for "SETUP_COMPELTED" status, to determine if it needs to run initial setup or not.
# We create this file and set it to false if it doesn't exists.
# If it exists, we let the app decide it's value (true|false) and how to proceed.
  1-create-env-file:
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    volumeMounts:
      - name: app
        mountPath: "/app"
    command: ["/bin/sh", "-c"]
    args:
      - >
        if [ ! -f "/app/.env" ];
        then
          echo "Preparing for initial installation";
          echo "SETUP_COMPLETED=false" > /app/.env;
        else
          echo "Initial installation has already completed.";
        fi;

service:
  main:
    ports:
      main:
        port: 10160
        targetPort: 80

persistence:
  app:
    enabled: true
    mountPath: "/app"
  logs:
    enabled: true
    mountPath: "/logs"

mariadb:
  enabled: true
  mariadbUsername: linkace
  mariadbDatabase: linkace
  existingSecret: "mariadbcreds"

redis:
  enabled: true
  existingSecret: "rediscreds"


# ## Backup configuration
# # Enable backups here
# BACKUP_ENABLED=false
# # Choose the destination of the backup. If you set up AWS S3 credentials below you may choose 's3' which is used
# # as a synonym for AWS. Leave blank or set to 'local' if you want to store backups within /storage/app/backups.
# BACKUP_DISK=s3
# # The notification email may be used to get backup notifications
# BACKUP_NOTIFICATION_EMAIL=your@email.com
# # Maximum size of all backups in megabytes
# BACKUP_MAX_SIZE=512

# ## Amazon Web Services (AWS) S3 configuration
# # Define the key ID, the access key, the region and your bucket name here if you want to use AWS S3 for backups
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_DEFAULT_REGION=us-east-1
# AWS_BUCKET=


# ## Mail configuration
# MAIL_FROM_ADDRESS=your@email.com
# MAIL_FROM_NAME=LinkAce
# # Set the driver used for sending email here, default is `smtp`
# MAIL_DRIVER=smtp
# # Set the SMTP host and its port here
# MAIL_HOST=smtp.mailtrap.io
# MAIL_PORT=2525
# # Set the username used to connect to the SMTP server here
# MAIL_USERNAME=null
# # Set the password used to connect to the SMTP server here
# MAIL_PASSWORD=null
# # If your SMTP server uses encrypted connections, enable it here by setting the variable to `tls`
# MAIL_ENCRYPTION=null
