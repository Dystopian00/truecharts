# Include{groups}
portals: {}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}

# Include{containerBasic}
# Include{containerAdvanced}

  - variable: pps
    group: App Configuration
    label: Plex Playlist Sync
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: plex
          label: Plex Configuration
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: url
                label: Url
                schema:
                  type: string
                  required: true
                  default: "http://plex.ix-plex.svc.cluster.local:32400"
              - variable: token
                label: Token
                schema:
                  type: string
                  required: true
                  private: true
                  default: ""
        - variable: spotify
          label: Spotify Configuration
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: user_id
                label: User Id
                schema:
                  type: string
                  default: ""
              - variable: client_id
                label: Client Id
                schema:
                  type: string
                  private: true
                  default: ""
              - variable: client_secret
                label: Client Secret
                schema:
                  type: string
                  private: true
                  default: ""
        - variable: deezer
          label: Deezer Configuration
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: user_id
                label: User Id
                schema:
                  type: string
                  default: ""
              - variable: playlist_id
                label: Playlist Id
                schema:
                  type: list
                  default: []
                  items:
                    - variable: id
                      label: Id
                      schema:
                        type: string
                        required: true
                        default: ""
        - variable: other
          label: Other Configuration
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: write_missing_as_csv
                label: Write Missing AS CSV
                description: writes missing tracks from each playlist to a csv.
                schema:
                  type: boolean
                  default: false
              - variable: append_service_suffix
                label: Append Service Suffix
                description: Appends the service name to the playlist name.
                schema:
                  type: boolean
                  default: true
              - variable: add_playlist_poster
                label: Add Playlist Poster
                description: Add poster for each playlist
                schema:
                  type: boolean
                  default: true
              - variable: add_playlist_description
                label: Add Playlist Description
                description: Add description for each playlist
                schema:
                  type: boolean
                  default: true
              - variable: append_instead_of_sync
                label: Append Instead of Sync
                description: Sync or append tracks
                schema:
                  type: boolean
                  default: false
              - variable: seconds_to_wait
                label: Seconds to Wait
                schema:
                  type: int
                  default: 84000

# Include{podOptions}
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: data
          label: "data Storage"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
