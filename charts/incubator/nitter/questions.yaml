# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controller}
# Include{replicas}
# Include{replica1}
# Include{controllerExpertExtraArgs}
  - variable: nitter
    group: App Configuration
    label: Nitter Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: title
          label: Website Title
          schema:
            type: string
            required: true
            default: ""
        - variable: hostname
          label: Hostname
          schema:
            type: string
            required: true
            default: ""
  - variable: cache
    group: App Configuration
    label: Cache Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: listMinutes
          label: List Minutes
          description: how long to cache list info (not the tweets, so keep it high).
          schema:
            type: int
            default: 240
        - variable: rssMinutes
          label: RSS Minutes
          description: how long to cache rss queries.
          schema:
            type: int
            default: 10
  - variable: config
    group: App Configuration
    label: App Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: base64Media
          label: Base64 Encoding
          description: Enable base64 encoding for proxied media urls.
          schema:
            type: boolean
            default: false
        - variable: enableRSS
          label: Enable RSS
          description: Uncheck to disable RSS feeds
          schema:
            type: boolean
            default: true
        - variable: enableDebug
          label: Enable Debug
          description: Enable request logs and debug endpoints
          schema:
            type: boolean
            default: false
        - variable: proxy
          label: Proxy
          description: http/https url, SOCKS proxies are not supported
          schema:
            type: string
            default: ""
        - variable: proxyAuth
          label: Proxy Auth
          schema:
            type: string
            default: ""
        - variable: tokenCount
          label: Token Count
          description: Minimum amount of usable tokens that are used to authorize API requests.
          schema:
            type: int
            default: 10
  - variable: preferences
    group: App Configuration
    label: preferences Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: theme
          label: Theme
          schema:
            type: string
            default: "Nitter"
        - variable: replaceTwitter
          label: Replace Twitter
          schema:
            type: string
            default: "nitter.net"
        - variable: replaceYouTube
          label: Replace YouTube
          schema:
            type: string
            default: "piped.video"
        - variable: replaceReddit
          label: Replace Reddit
          schema:
            type: string
            default: "teddit.net"
        - variable: replaceInstagram
          label: Replace Instagram
          schema:
            type: string
            default: ""
        - variable: proxyVideos
          label: Proxy Videos
          schema:
            type: boolean
            default: true
        - variable: hlsPlayback
          label: HLS PlayBack
          schema:
            type: boolean
            default: false
        - variable: infiniteScroll
          label: infinite Scroll
          schema:
            type: boolean
            default: false
# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10606
                              required: true
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: true
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{vpn}
# Include{documentation}
