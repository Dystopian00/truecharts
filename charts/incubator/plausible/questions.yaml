# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}

  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
                  enum:
                    - value: "deployment"
                      description: "Deployment"
                    - value: "statefulset"
                      description: "Statefulset"
                    - value: "daemonset"
                      description: "Daemonset"
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
                  enum:
                    - value: "Recreate"
                      description: "Recreate: Kill existing pods before creating new ones"
                    - value: "RollingUpdate"
                      description: "RollingUpdate: Create new pods and then kill old ones"
                    - value: "OnDelete"
                      description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: plausible
    group: "Container Configuration"
    label: "Plausible Configuration"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: BASE_URL
          label: BASE_URL
          description: The hosting URL of the server, used for URL generation. In production systems, this should be your ingress host.
          schema:
            type: string
            default: http://localhost
            required: true
        - variable: DISABLE_AUTH
          label: DISABLE_AUTH
          description: Disables authentication completely, no registration, login will be shown.
          schema:
            type: boolean
            default: false
        - variable: DISABLE_REGISTRATION
          label: DISABLE_REGISTRATION
          description: Disables registration of new users, keep your admin credentials handy ;)
          schema:
            type: boolean
            default: false
        - variable: ADMIN_USER_NAME
          label: ADMIN_USER_NAME
          description: Admin user's name (First Install Only)
          schema:
            type: string
            default: admin
            required: true
        - variable: ADMIN_USER_EMAIL
          label: ADMIN_USER_EMAIL
          description: The default ("admin") user email (First Install Only)
          schema:
            type: string
            default: admin@example.com
            required: true
        - variable: ADMIN_USER_PWD
          label: ADMIN_USER_PWD
          description: The default ("admin") user password (First Install Only)
          schema:
            type: string
            default: ""
            required: true
            private: true
        - variable: CLICKHOUSE_FLUSH_INTERVAL_MS
          label: CLICKHOUSE_FLUSH_INTERVAL_MS
          description: nterval (in milliseconds) between flushing events and sessions data to Clickhouse. Consult Clickhouse docs before changing it.
          schema:
            type: int
            default: 5000
            required: true
        - variable: CLICKHOUSE_MAX_BUFFER_SIZE
          label: CLICKHOUSE_MAX_BUFFER_SIZE
          description: Maximum size of the buffer of events or sessions. Consult Clickhouse docs before changing it.
          schema:
            type: int
            default: 10000
            required: true
        - variable: MAILER_EMAIL
          label: MAILER_EMAIL
          description: The email id to use for as from address of all communications from Plausible.
          schema:
            type: string
            default: hello@plausible.local
            required: true
        - variable: SMTP_HOST_ADDR
          label: SMTP_HOST_ADDR
          description: The host address of your smtp server.
          schema:
            type: string
            default: localhost
            required: true
        - variable: SMTP_HOST_PORT
          label: SMTP_HOST_PORT
          description: The port of your smtp server.
          schema:
            type: int
            default: 25
            required: true
        - variable: SMTP_USER_NAME
          label: SMTP_USER_NAME
          description: The username/email in case SMTP auth is enabled.
          schema:
            type: string
            default: ""
        - variable: SMTP_USER_PWD
          label: SMTP_USER_PWD
          description: The password in case SMTP auth is enabled.
          schema:
            type: string
            default: ""
            private: true
        - variable: SMTP_HOST_SSL_ENABLED
          label: SMTP_HOST_SSL_ENABLED
          description: If SSL is enabled for SMTP connection
          schema:
            type: boolean
            default: false
        - variable: SMTP_RETRIES
          label: SMTP_RETRIES
          description: Number of retries to make until mailer gives up.
          schema:
            type: int
            default: 2
            required: true
        - variable: MAILER_ADAPTER
          label: MAILER_ADAPTER
          description: Mailer Adapter
          schema:
            type: string
            required: true
            default: Bamboo.SMTPAdapter
            enum:
              - value: Bamboo.SMTPAdapter
                description: Bamboo.SMTPAdapter
              - value: Bamboo.PostmarkAdapter
                description: Bamboo.PostmarkAdapter
        - variable: POSTMARK_API_KEY
          label: POSTMARK_API_KEY
          description: Enter your API key.
          schema:
            type: string
            default: ""
            private: true
        - variable: GOOGLE_CLIENT_ID
          label: GOOGLE_CLIENT_ID
          description: The Client ID from the Google API Console for your Plausible Analytics project
          schema:
            type: string
            default: ""
        - variable: GOOGLE_CLIENT_SECRET
          label: GOOGLE_CLIENT_SECRET
          description: The Client Secret from the Google API Console for your Plausible Analytics project
          schema:
            type: string
            default: ""
            private: true
        - variable: LOG_LEVEL
          label: LOG_LEVEL
          description: Logging Level
          schema:
            type: string
            required: true
            default: warn
            enum:
              - value: debug
                description: debug
              - value: info
                description: info
              - value: warn
                description: warn
              - value: error
                description: error

# Include{containerConfig}

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10277
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: "HTTP"
                                    enum:
                                      - value: HTTP
                                        description: "HTTP"
                                      - value: "HTTPS"
                                        description: "HTTPS"
                                      - value: TCP
                                        description: "TCP"
                                      - value: "UDP"
                                        description: "UDP"
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 8000

  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

# Include{persistenceList}

  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:

# Include{ingressDefault}

# Include{ingressTLS}

# Include{ingressTraefik}

# Include{ingressExpert}

# Include{ingressList}

# Include{security}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: true
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: true
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 1000
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 1000
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}

# Include{resources}

# Include{advanced}

# Include{addons}
