# Include{groups}
portals: {}
questions:
# Include{global}
# Include{controller}
# Include{controllerDeployment}
# Include{replicas}
# Include{replica1}
# Include{strategy}
# Include{recreate}
# Include{controllerExpert}
# Include{controllerExpertExtraArgs}
  - variable: secretEnv
    group: "Container Configuration"
    label: "Image Secrets"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: HONEYBADGER_API_KEY
          label: HONEYBADGER_API_KEY
          description: Get notifications to honeybadger.io when the process crashes for any reason by creating a new project and putting your API key here.
          schema:
            type: string
            private: true
            default: ""
        - variable: PRIMARY_HOST_PASSWORD
          label: "PRIMARY_HOST_PASSWORD"
          description: "The password used to log in to the admin interface."
          schema:
            type: string
            private: true
            default: ""
        - variable: SECONDARY_HOST_1_PASSWORD
          label: "SECONDARY_HOST_1_PASSWORD"
          description: "The password used to log in to the admin interface."
          schema:
            type: string
            private: true
            default: ""
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: PRIMARY_HOST_BASE_URL
          label: "PRIMARY_HOST_BASE_URL"
          description: "The base URL of your Pi-hole, including the scheme (HTTP or HTTPS) and port but not including a following slash."
          schema:
            type: string
            default: "https://pihole1.example.com"
        - variable: SECONDARY_HOST_1_BASE_URL
          label: "SECONDARY_HOST_1_BASE_URL"
          description: "The base URL of your secondary Pi-hole, including the scheme (HTTP or HTTPS) and port but not including a following slash."
          schema:
            type: string
            default: "https://pihole2.example.com"
        - variable: INTERVAL_MINUTES
          label: "INTERVAL_MINUTES"
          description: "How long to wait between synchronizations. Defaults to five minutes. Remember that the DNS server on your secondary servers restarts every time a sync is performed."
          schema:
            type: int
            default: 30
        - variable: SYNC_WHITELIST
          label: SYNC_WHITELIST
          description: Copies the whitelist
          schema:
            type: boolean
            default: true
        - variable: SYNC_REGEX_WHITELIST
          label: SYNC_REGEX_WHITELIST
          description: Copies the regex whitelist
          schema:
            type: boolean
            default: true
        - variable: SYNC_BLACKLIST
          label: SYNC_BLACKLIST
          description: Copies the blacklist
          schema:
            type: boolean
            default: true
        - variable: SYNC_REGEXLIST
          label: SYNC_REGEXLIST
          description: Copies the regex blacklist
          schema:
            type: boolean
            default: true
        - variable: SYNC_ADLIST
          label: SYNC_ADLIST
          description: Copies the adlist
          schema:
            type: boolean
            default: true
        - variable: SYNC_CLIENT
          label: SYNC_CLIENT
          description: Copies clients
          schema:
            type: boolean
            default: true
        - variable: SYNC_GROUP
          label: SYNC_GROUP
          description: Copies groups
          schema:
            type: boolean
            default: true
        - variable: SYNC_AUDITLOG
          label: SYNC_AUDITLOG
          description: Copies the audit log
          schema:
            type: boolean
            default: false
        - variable: SYNC_STATICDHCPLEASES
          label: SYNC_STATICDHCPLEASES
          description: Copies static dhcp leases
          schema:
            type: boolean
            default: false
        - variable: SYNC_LOCALDNSRECORDS
          label: SYNC_LOCALDNSRECORDS
          description: Copies local DNS records
          schema:
            type: boolean
            default: true
        - variable: SYNC_LOCALCNAMERECORDS
          label: SYNC_LOCALCNAMERECORDS
          description: Copies local CNAME records
          schema:
            type: boolean
            default: true
        - variable: SYNC_FLUSHTABLES
          label: SYNC_FLUSHTABLES
          description: Clears existing data on the secondary (copy target) Pi-hole
          schema:
            type: boolean
            default: true
        - variable: RUN_ONCE
          label: RUN_ONCE
          description: By default, orbital-sync runs indefinitely until stopped. Setting RUN_ONCE to true forces it to exit immediately after the first sync.
          schema:
            type: boolean
            default: false
        - variable: VERBOSE
          label: VERBOSE
          description: Whether to output extra log output. Used for debugging.
          schema:
            type: boolean
            default: false
# Include{containerConfig}
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{documentation}
