image:
  repository: getferdi/ferdi-server
  tag: 1.3.2@sha256:b94315a20480e8c47f960590279766c8636c53f9deaaa7697499a51028e33dec
  pullPolicy: IfNotPresent

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

env:
  NODE_ENV: "production"
  DATA_DIR: "/app/data"
  DB_CONNECTION: "pg"
  DB_PORT: "5432"
  DB_USER: "{{ .Values.postgresql.postgresqlUsername }}"
  DB_DATABASE: "{{ .Values.postgresql.postgresqlDatabase }}"
  # User Defined
  APP_URL: ""
  IS_CREATION_ENABLED: true
  IS_DASHBOARD_ENABLED: true
  IS_REGISTRATION_ENABLED: true
  CONNECT_WITH_FRANZ: true
  # MAIL_CONNECTION: "smtp"
  # SMTP_HOST: "localhost"
  # SMTP_PORT: 587
  # MAIL_SSL: true
  # MAIL_USERNAME: "username@example.com"
  # MAIL_PASSWORD: "password"
  # MAIL_SENDER: "noreply@example.com"
  # SPARKPOST_API_KEY: ""
  # MAILGUN_DOMAIN: ""
  # MAILGUN_API_REGION: ""
  # MAILGUN_API_KEY: ""

envValueFrom:
  DB_HOST:
    secretKeyRef:
      name: dbcreds
      key: plainhost
  DB_PASSWORD:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password
  APP_KEY:
    secretKeyRef:
      name: appkey
      key: appkey

service:
  main:
    ports:
      main:
        port: 10206
        targetPort: 3333

persistence:
  data:
    enabled: true
    mountPath: "/app/data"
  recipes:
    enabled: true
    mountPath: "/app/recipes"

postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: ferdi-server
  postgresqlDatabase: ferdi-server
