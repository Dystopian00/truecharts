groups:
  - name: "Container Images"
    description: "Image to be used for container"
  - name: "Container Entrypoint"
    description: "Configuration of the executable that will be run when the container is started"
  - name: "Container Environment Variables"
    description: "Set the environment that will be visible to the container"
  - name: "Networking"
    description: "Configure networking for container"
  - name: "Storage"
    description: "Persist and share data that is separate from the lifecycle of the container"
  - name: "truecommand Configuration"
    description: "Configure truecommand deployment"
  - name: "Workload Details"
    description: "Configure how workload should be deployed"
  - name: "Scaling/Upgrade Policy"
    description: "Configure how pods are replaced when configuration is upgraded"
  - name: "Restart Policy"
    description: "Configure when pod should be restarted in case of failure"
  - name: "Resource Reservation"
    description: "Specify resources to be allocated to workload"

portals:
  web_portal:
    protocols:
      - "http"
    host:
      - "$node_ip"
    ports:
      - "$variable-truecommandService.port"
    path: "/web"

questions:
  # Image related
  - variable: image
    description: "Docker Image Details"
    label: "Docker Image"
    group: "Container Images"
    schema:
      type: dict
      required: true
      attrs:
        - variable: repository
          description: "Docker image repository"
          label: "Image repository"
          schema:
            type: string
            required: true
            default: "ixsystems/truecommand"
        - variable: tag
          description: "Tag to use for specified image"
          label: "Image Tag"
          schema:
            type: string
            default: "1.3.2"
        - variable: pullPolicy
          description: "Docker Image Pull Policy"
          label: "Image Pull Policy"
          schema:
            type: string
            default: "IfNotPresent"
            enum:
              - value: "IfNotPresent"
                description: "Only pull image if not present on host"
              - value: "Always"
                description: "Always pull image even if present on host"
              - value: "Never"
                description: "Never pull image even if it's not present on host"

  - variable: claimToken
    label: "truecommand Claim Token"
    group: "truecommand Configuration"
    schema:
      type: string
      default: ""

  - variable: extraEnv
    label: "Environment variables for truecommand"
    group: "truecommand Configuration"
    schema:
      type: dict
      additional_attrs: true
      attrs: []

  - variable: proxy
    label: "Configure Proxy environment variable"
    group: "truecommand Configuration"
    schema:
      type: dict
      attrs:
        - variable: enabled
          label: "Enable Proxy"
          schema:
            type: boolean
            default: false

  - variable: hostNetwork
    label: "Configure Host Network"
    group: "Networking"
    schema:
      type: boolean
      default: false

  - variable: timezone
    label: "truecommand container timezone"
    group: "truecommand Configuration"
    schema:
      type: string
      default: "Etc/UTC"
      $ref:
        - "definitions/timezone"

  # Update strategy
  - variable: strategyType
    description: "Upgrade Policy"
    label: "Update Strategy"
    group: "Scaling/Upgrade Policy"
    schema:
      type: string
      default: "Recreate"
      enum:
        - value: "RollingUpdate"
          description: "Create new pods and then kill old ones"
        - value: "Recreate"
          description: "Kill existing pods before creating new ones"

  # Port configuration
  - variable: truecommandService
    label: "Configure truecommand Service"
    group: "Networking"
    schema:
      type: dict
      attrs:
        - variable: port
          label: "Port to expose for truecommand UI"
          schema:
            type: int
            min: 2000
            max: 65535
            default: 32204

  - variable: dataHostPathEnabled
    label: "Configure Host Path for Data"
    group: "Storage"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: dataHostPath
          label: "Specify HostPath for Data"
          schema:
            type: hostpath
            required: true

  - variable: dataVolume
    label: "Configure data iXVolume"
    group: "Storage"
    schema:
      type: dict
      show_if: [["dataHostPathEnabled", "=", false]]
      $ref:
        - "normalize/ixVolume"
      attrs:
        - variable: mountPath
          label: "Mount Path"
          description: "Path where the volume will be mounted inside the pod"
          schema:
            type: path
            editable: false
            default: "/data"
        - variable: datasetName
          label: "Dataset Name"
          schema:
            type: string
            default: "ix-truecommand_data"
            editable: false

  - variable: configHostPathEnabled
    label: "Configure Host Path for Config"
    group: "Storage"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: configHostPath
          label: "Specify HostPath for Config"
          schema:
            type: hostpath
            required: true

  - variable: configVolume
    label: "Configure iXVolume"
    group: "Storage"
    schema:
      type: dict
      show_if: [["configHostPathEnabled", "=", false]]
      $ref:
        - "normalize/ixVolume"
      attrs:
        - variable: mountPath
          label: "Mount Path"
          description: "Path where the volume will be mounted inside the pod"
          schema:
            type: path
            editable: false
            default: "/config"
        - variable: datasetName
          label: "Dataset Name"
          schema:
            type: string
            default: "ix-truecommand_config"
            editable: false
