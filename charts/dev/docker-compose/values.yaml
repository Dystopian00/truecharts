image:
  repository: tccr.io/truecharts/docker-in-docker
  pullPolicy: IfNotPresent
  tag: v20.10.12@sha256:c62daf2fbd0b520a5849a5b463b059207e3669c892131eff1f0cf22d3b053deb

controller:
  # -- Set the controller type.
  # Valid options are deployment, daemonset or statefulset
  type: statefulset
  # -- Number of desired pods
  replicas: 1
  # -- Set the controller upgrade strategy
  # For Deployments, valid values are Recreate (default) and RollingUpdate.
  # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
  # DaemonSets ignore this.
  strategy: RollingUpdate
  rollingUpdate:
    # -- Set deployment RollingUpdate max unavailable
    unavailable: 1
    # -- Set deployment RollingUpdate max surge
    surge:
    # -- Set statefulset RollingUpdate partition
    partition:
  # -- ReplicaSet revision history limit
  revisionHistoryLimit: 3

securityContext:
  privileged: true
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: true
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0
  fsGroup: 0

hostNetwork: true

service:
  main:
    enabled: true
    ports:
      main:
        port: 2376
        type: HTTPS

env:
  DOCKER_TLS_CERTDIR: "/certs"
  COMPOSE_FILE: ""

lifecycle:
  postStart:
    exec:
      command:
        - "/bin/sh"
        - "-c"
        - 'if [ ${COMPOSE_FILE} ]; then docker-compose up -d -f ${COMPOSE_FILE} && echo "Loading COMPOSE_FILE at location ${COMPOSE_FILE}"; else echo "COMPOSE_FILE not set, not auto-loading compose-file"; fi'

persistence:
  varrun:
    enabled: false
  mnt:
    enabled: true
    type: hostPath
    hostPath: /mnt
    mountPath: /mnt
    hostPathType: ""
    readOnly: false
  root:
    enabled: true
    type: hostPath
    hostPath: /root
    mountPath: /root
    hostPathType: ""
    readOnly: false
  cluster:
    enabled: true
    type: hostPath
    hostPath: /cluster
    mountPath: /cluster
    hostPathType: ""
    readOnly: false
  docker-certs-ca:
    enabled: true
    mountPath: "/config"

volumeClaimTemplates:
  docker-certs-client:
    enabled: true
    mountPath: "/certs/client"
  docker:
    enabled: true
    mountPath: "/var/lib/docker"
