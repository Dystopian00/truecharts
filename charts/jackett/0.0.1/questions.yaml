groups:
  - name: "Container Images"
    description: "Image to be used for container"
  - name: "Container Entrypoint"
    description: "Configuration of the executable that will be run when the container is started"
  - name: "Container Environment Variables"
    description: "Set the environment that will be visible to the container"
  - name: "Networking"
    description: "Configure networking for container"
  - name: "Storage"
    description: "Persist and share data that is separate from the lifecycle of the container"
  - name: "jackett Configuration"
    description: "Configure jackett deployment"
  - name: "Workload Details"
    description: "Configure how workload should be deployed"
  - name: "Scaling/Upgrade Policy"
    description: "Configure how pods are replaced when configuration is upgraded"
  - name: "Restart Policy"
    description: "Configure when pod should be restarted in case of failure"
  - name: "Resource Reservation"
    description: "Specify resources to be allocated to workload"
  - name: "Ingress"
    description: "Ingress Configuration"

portals:
  web_portal:
    protocols:
      - "http"
    host:
      - "$node_ip"
    ports:
      - "$variable-service.port.port"
    path: "/web"

questions:
  # Image related
  - variable: image
    description: "Docker Image Details"
    label: "Docker Image"
    group: "Container Images"
    schema:
      type: dict
      required: true
      attrs:
        - variable: repository
          description: "Docker image repository"
          label: "Image repository"
          schema:
            type: string
            required: true
            default: "linuxserver/jackett"
        - variable: tag
          description: "Tag to use for specified image"
          label: "Image Tag"
          schema:
            type: string
            default: "version-v0.17.153"
        - variable: pullPolicy
          description: "Docker Image Pull Policy"
          label: "Image Pull Policy"
          schema:
            type: string
            default: "IfNotPresent"
            enum:
              - value: "IfNotPresent"
                description: "Only pull image if not present on host"
              - value: "Always"
                description: "Always pull image even if present on host"
              - value: "Never"
                description: "Never pull image even if it's not present on host"


## TrueCharts Specific

  # Port configuration

  - variable: dataHostPathEnabled
    label: "Configure Host Path for Data"
    group: "Storage"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: dataHostPath
          label: "Specify HostPath for Data"
          schema:
            type: hostpath
            required: true

  - variable: dataVolume
    label: "Configure data iXVolume"
    group: "Storage"
    schema:
      type: dict
      show_if: [["dataHostPathEnabled", "=", false]]
      $ref:
        - "normalize/ixVolume"
      attrs:
        - variable: mountPath
          label: "Mount Path"
          description: "Path where the volume will be mounted inside the pod"
          schema:
            type: path
            editable: false
            default: "/data"
        - variable: datasetName
          label: "Dataset Name"
          schema:
            type: string
            default: "ix-jackett_data"
            editable: false

  - variable: configHostPathEnabled
    label: "Configure Host Path for Config"
    group: "Storage"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: configHostPath
          label: "Specify HostPath for Config"
          schema:
            type: hostpath
            required: true

  - variable: configVolume
    label: "Configure iXVolume"
    group: "Storage"
    schema:
      type: dict
      show_if: [["configHostPathEnabled", "=", false]]
      $ref:
        - "normalize/ixVolume"
      attrs:
        - variable: mountPath
          label: "Mount Path"
          description: "Path where the volume will be mounted inside the pod"
          schema:
            type: path
            editable: false
            default: "/config"
        - variable: datasetName
          label: "Dataset Name"
          schema:
            type: string
            default: "ix-jackett_config"
            editable: false

- variable: appIngressEnabled
    label: "Enable Ingress"
    description: "Configure Ingress Settings"
    group: "Ingress"
    schema:
      type: boolean
      default: true
      show_subquestions_if: true
      subquestions:
        - variable: appIngress
          label: "Ingress Settings"
          schema:
            type: dict
            required: true
            attrs:
              - variable: host
                description: "Ingress Hostname"
                label: "Ingress Hostname"
                schema:
                  type: string
                  default: "your.hostname.com"
                  required: true
              - variable: selfsigned
                description: "Use a self-signed certificate"
                label: "Self-Signed Certificate"
                schema:
                  type: boolean
                  default: false
              - variable: wildcard
                description: "Use wildcard certificate from Certmanager configuration"
                label: "Use Global Wildcard"
                schema:
                  type: boolean
                  default: false
              - variable: existingCert
                description: "Enter name of existing certificate to use"
                label: "Existing Certificate"
                schema:
                  type: string
                  default: ""
              - variable: authForwardUrl
                description: "Enter URL to use for authentication"
                label: "Forward-Auth URL"
                schema:
                  type: string
                  default: ""