---
# Source: metallb/templates/common.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-metallb
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
---
# Source: metallb/templates/common.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME-metallb-speaker
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
---
# Source: metallb/templates/common.yaml
apiVersion: v1
kind: Secret
metadata:
  name: RELEASE-NAME-metallb-webhook-cert
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
  annotations:
---
# Source: metallb/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: controllerenvs
data:
  - name: METALLB_ML_SECRET_NAME
    value: RELEASE-NAME-metallb-memberlist
  - name: METALLB_DEPLOYMENT
    value: RELEASE-NAME-metallb
---
# Source: metallb/templates/crds/bgpadvertisment.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: bgpadvertisements.metallb.io
spec:
  group: metallb.io
  names:
    kind: BGPAdvertisement
    listKind: BGPAdvertisementList
    plural: bgpadvertisements
    singular: bgpadvertisement
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description:
            BGPAdvertisement allows to advertise the IPs coming from the
            selected IPAddressPools via BGP, setting the parameters of the BGP Advertisement.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: BGPAdvertisementSpec defines the desired state of BGPAdvertisement.
              properties:
                aggregationLength:
                  default: 32
                  description:
                    The aggregation-length advertisement option lets you
                    “roll up” the /32s into a larger prefix. Defaults to 32. Works for
                    IPv4 addresses.
                  format: int32
                  minimum: 1
                  type: integer
                aggregationLengthV6:
                  default: 128
                  description:
                    The aggregation-length advertisement option lets you
                    “roll up” the /128s into a larger prefix. Defaults to 128. Works
                    for IPv6 addresses.
                  format: int32
                  type: integer
                communities:
                  description:
                    The BGP communities to be associated with the announcement.
                    Each item can be a community of the form 1234:1234 or the name of
                    an alias defined in the Community CRD.
                  items:
                    type: string
                  type: array
                ipAddressPoolSelectors:
                  description:
                    A selector for the IPAddressPools which would get advertised
                    via this advertisement. If no IPAddressPool is selected by this
                    or by the list, the advertisement is applied to all the IPAddressPools.
                  items:
                    description:
                      A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An empty
                      label selector matches all objects. A null label selector matches
                      no objects.
                    properties:
                      matchExpressions:
                        description:
                          matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description:
                            A label selector requirement is a selector that
                            contains values, a key, and an operator that relates the
                            key and values.
                          properties:
                            key:
                              description:
                                key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description:
                                operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn, Exists
                                and DoesNotExist.
                              type: string
                            values:
                              description:
                                values is an array of string values. If the
                                operator is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during a
                                strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                            - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description:
                          matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                          of matchExpressions, whose key field is "key", the operator
                          is "In", and the values array contains only "value". The requirements
                          are ANDed.
                        type: object
                    type: object
                  type: array
                ipAddressPools:
                  description:
                    The list of IPAddressPools to advertise via this advertisement,
                    selected by name.
                  items:
                    type: string
                  type: array
                localPref:
                  description:
                    The BGP LOCAL_PREF attribute which is used by BGP best
                    path algorithm, Path with higher localpref is preferred over one
                    with lower localpref.
                  format: int32
                  type: integer
                nodeSelectors:
                  description:
                    NodeSelectors allows to limit the nodes to announce as
                    next hops for the LoadBalancer IP. When empty, all the nodes having  are
                    announced as next hops.
                  items:
                    description:
                      A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An empty
                      label selector matches all objects. A null label selector matches
                      no objects.
                    properties:
                      matchExpressions:
                        description:
                          matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description:
                            A label selector requirement is a selector that
                            contains values, a key, and an operator that relates the
                            key and values.
                          properties:
                            key:
                              description:
                                key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description:
                                operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn, Exists
                                and DoesNotExist.
                              type: string
                            values:
                              description:
                                values is an array of string values. If the
                                operator is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during a
                                strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                            - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description:
                          matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                          of matchExpressions, whose key field is "key", the operator
                          is "In", and the values array contains only "value". The requirements
                          are ANDed.
                        type: object
                    type: object
                  type: array
                peers:
                  description:
                    Peers limits the bgppeer to advertise the ips of the
                    selected pools to. When empty, the loadbalancer IP is announced
                    to all the BGPPeers configured.
                  items:
                    type: string
                  type: array
              type: object
            status:
              description: BGPAdvertisementStatus defines the observed state of BGPAdvertisement.
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: metallb/templates/crds/bgppeer.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: bgppeers.metallb.io
spec:
  group: metallb.io
  names:
    kind: BGPPeer
    listKind: BGPPeerList
    plural: bgppeers
    singular: bgppeer
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: BGPPeer is the Schema for the peers API.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: BGPPeerSpec defines the desired state of Peer.
              properties:
                bfdProfile:
                  type: string
                ebgpMultiHop:
                  description: EBGP peer is multi-hops away
                  type: boolean
                holdTime:
                  description: Requested BGP hold time, per RFC4271.
                  type: string
                keepaliveTime:
                  description: Requested BGP keepalive time, per RFC4271.
                  type: string
                myASN:
                  description: AS number to use for the local end of the session.
                  format: int32
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                nodeSelectors:
                  description:
                    Only connect to this peer on nodes that match one of
                    these selectors.
                  items:
                    properties:
                      matchExpressions:
                        items:
                          properties:
                            key:
                              type: string
                            operator:
                              type: string
                            values:
                              items:
                                type: string
                              minItems: 1
                              type: array
                          required:
                            - key
                            - operator
                            - values
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                  type: array
                password:
                  description:
                    Authentication password for routers enforcing TCP MD5
                    authenticated sessions
                  type: string
                peerASN:
                  description: AS number to expect from the remote end of the session.
                  format: int32
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                peerAddress:
                  description: Address to dial when establishing the session.
                  type: string
                peerPort:
                  description: Port to dial when establishing the session.
                  maximum: 16384
                  minimum: 0
                  type: integer
                routerID:
                  description: BGP router ID to advertise to the peer
                  type: string
                sourceAddress:
                  description: Source address to use when establishing the session.
                  type: string
              required:
                - myASN
                - peerASN
                - peerAddress
              type: object
            status:
              description: BGPPeerStatus defines the observed state of Peer.
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: BGPPeer is the Schema for the peers API.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: BGPPeerSpec defines the desired state of Peer.
              properties:
                bfdProfile:
                  description:
                    The name of the BFD Profile to be used for the BFD session
                    associated to the BGP session. If not set, the BFD session won't
                    be set up.
                  type: string
                ebgpMultiHop:
                  description:
                    To set if the BGPPeer is multi-hops away. Needed for
                    FRR mode only.
                  type: boolean
                holdTime:
                  description: Requested BGP hold time, per RFC4271.
                  type: string
                keepaliveTime:
                  description: Requested BGP keepalive time, per RFC4271.
                  type: string
                myASN:
                  description: AS number to use for the local end of the session.
                  format: int32
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                nodeSelectors:
                  description:
                    Only connect to this peer on nodes that match one of
                    these selectors.
                  items:
                    description:
                      A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An empty
                      label selector matches all objects. A null label selector matches
                      no objects.
                    properties:
                      matchExpressions:
                        description:
                          matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description:
                            A label selector requirement is a selector that
                            contains values, a key, and an operator that relates the
                            key and values.
                          properties:
                            key:
                              description:
                                key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description:
                                operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn, Exists
                                and DoesNotExist.
                              type: string
                            values:
                              description:
                                values is an array of string values. If the
                                operator is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during a
                                strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                            - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description:
                          matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                          of matchExpressions, whose key field is "key", the operator
                          is "In", and the values array contains only "value". The requirements
                          are ANDed.
                        type: object
                    type: object
                  type: array
                password:
                  description:
                    Authentication password for routers enforcing TCP MD5
                    authenticated sessions
                  type: string
                passwordSecret:
                  description:
                    passwordSecret is name of the authentication secret for
                    BGP Peer. the secret must be of type "kubernetes.io/basic-auth",
                    and created in the same namespace as the MetalLB deployment. The
                    password is stored in the secret as the key "password".
                  properties:
                    name:
                      description:
                        name is unique within a namespace to reference a
                        secret resource.
                      type: string
                    namespace:
                      description:
                        namespace defines the space within which the secret
                        name must be unique.
                      type: string
                  type: object
                peerASN:
                  description: AS number to expect from the remote end of the session.
                  format: int32
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                peerAddress:
                  description: Address to dial when establishing the session.
                  type: string
                peerPort:
                  default: 179
                  description: Port to dial when establishing the session.
                  maximum: 16384
                  minimum: 0
                  type: integer
                routerID:
                  description: BGP router ID to advertise to the peer
                  type: string
                sourceAddress:
                  description: Source address to use when establishing the session.
                  type: string
              required:
                - myASN
                - peerASN
                - peerAddress
              type: object
            status:
              description: BGPPeerStatus defines the observed state of Peer.
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: metallb/templates/crds/community.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: communities.metallb.io
spec:
  group: metallb.io
  names:
    kind: Community
    listKind: CommunityList
    plural: communities
    singular: community
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description:
            Community is a collection of aliases for communities. Users can
            define named aliases to be used in the BGPPeer CRD.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: CommunitySpec defines the desired state of Community.
              properties:
                communities:
                  items:
                    properties:
                      name:
                        description: The name of the alias for the community.
                        type: string
                      value:
                        description:
                          The BGP community value corresponding to the given
                          name.
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: CommunityStatus defines the observed state of Community.
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: metallb/templates/crds/ipaddresspool.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: ipaddresspools.metallb.io
spec:
  group: metallb.io
  names:
    kind: IPAddressPool
    listKind: IPAddressPoolList
    plural: ipaddresspools
    singular: ipaddresspool
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description:
            IPAddressPool represents a pool of IP addresses that can be allocated
            to LoadBalancer services.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: IPAddressPoolSpec defines the desired state of IPAddressPool.
              properties:
                addresses:
                  description:
                    A list of IP address ranges over which MetalLB has authority.
                    You can list multiple ranges in a single pool, they will all share
                    the same settings. Each range can be either a CIDR prefix, or an
                    explicit start-end range of IPs.
                  items:
                    type: string
                  type: array
                autoAssign:
                  default: true
                  description:
                    AutoAssign flag used to prevent MetallB from automatic
                    allocation for a pool.
                  type: boolean
                avoidBuggyIPs:
                  default: false
                  description:
                    AvoidBuggyIPs prevents addresses ending with .0 and .255
                    to be used by a pool.
                  type: boolean
              required:
                - addresses
              type: object
            status:
              description: IPAddressPoolStatus defines the observed state of IPAddressPool.
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: metallb/templates/crds/l2advertisment.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: l2advertisements.metallb.io
spec:
  group: metallb.io
  names:
    kind: L2Advertisement
    listKind: L2AdvertisementList
    plural: l2advertisements
    singular: l2advertisement
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description:
            L2Advertisement allows to advertise the LoadBalancer IPs provided
            by the selected pools via L2.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: L2AdvertisementSpec defines the desired state of L2Advertisement.
              properties:
                ipAddressPoolSelectors:
                  description:
                    A selector for the IPAddressPools which would get advertised
                    via this advertisement. If no IPAddressPool is selected by this
                    or by the list, the advertisement is applied to all the IPAddressPools.
                  items:
                    description:
                      A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An empty
                      label selector matches all objects. A null label selector matches
                      no objects.
                    properties:
                      matchExpressions:
                        description:
                          matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description:
                            A label selector requirement is a selector that
                            contains values, a key, and an operator that relates the
                            key and values.
                          properties:
                            key:
                              description:
                                key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description:
                                operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn, Exists
                                and DoesNotExist.
                              type: string
                            values:
                              description:
                                values is an array of string values. If the
                                operator is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during a
                                strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                            - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description:
                          matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                          of matchExpressions, whose key field is "key", the operator
                          is "In", and the values array contains only "value". The requirements
                          are ANDed.
                        type: object
                    type: object
                  type: array
                ipAddressPools:
                  description:
                    The list of IPAddressPools to advertise via this advertisement,
                    selected by name.
                  items:
                    type: string
                  type: array
                nodeSelectors:
                  description:
                    NodeSelectors allows to limit the nodes to announce as
                    next hops for the LoadBalancer IP. When empty, all the nodes having  are
                    announced as next hops.
                  items:
                    description:
                      A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An empty
                      label selector matches all objects. A null label selector matches
                      no objects.
                    properties:
                      matchExpressions:
                        description:
                          matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description:
                            A label selector requirement is a selector that
                            contains values, a key, and an operator that relates the
                            key and values.
                          properties:
                            key:
                              description:
                                key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description:
                                operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn, Exists
                                and DoesNotExist.
                              type: string
                            values:
                              description:
                                values is an array of string values. If the
                                operator is In or NotIn, the values array must be non-empty.
                                If the operator is Exists or DoesNotExist, the values
                                array must be empty. This array is replaced during a
                                strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                            - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description:
                          matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                          of matchExpressions, whose key field is "key", the operator
                          is "In", and the values array contains only "value". The requirements
                          are ANDed.
                        type: object
                    type: object
                  type: array
              type: object
            status:
              description: L2AdvertisementStatus defines the observed state of L2Advertisement.
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: metallb/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: RELEASE-NAME-metallb:controller
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services/status"]
  verbs: ["update"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
---
# Source: metallb/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: RELEASE-NAME-metallb:speaker
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["services", "endpoints", "nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
- apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
---
# Source: metallb/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME-metallb:controller
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RELEASE-NAME-metallb:controller
---
# Source: metallb/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME-metallb:speaker
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-metallb-speaker
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RELEASE-NAME-metallb:speaker
---
# Source: metallb/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: RELEASE-NAME-metallb-pod-lister
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metallb.io"]
  resources: ["addresspools"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metallb.io"]
  resources: ["bfdprofiles"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metallb.io"]
  resources: ["bgppeers"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metallb.io"]
  resources: ["l2advertisements"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metallb.io"]
  resources: ["bgpadvertisements"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metallb.io"]
  resources: ["ipaddresspools"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metallb.io"]
  resources: ["communities"]
  verbs: ["get", "list", "watch"]
---
# Source: metallb/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: RELEASE-NAME-metallb-controller
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["RELEASE-NAME-metallb-memberlist"]
  verbs: ["list"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  resourceNames: ["RELEASE-NAME-metallb-controller"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["metallb.io"]
  resources: ["addresspools"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metallb.io"]
  resources: ["ipaddresspools"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metallb.io"]
  resources: ["bgppeers"]
  verbs: ["get", "list"]
- apiGroups: ["metallb.io"]
  resources: ["bgpadvertisements"]
  verbs: ["get", "list"]
- apiGroups: ["metallb.io"]
  resources: ["l2advertisements"]
  verbs: ["get", "list"]
- apiGroups: ["metallb.io"]
  resources: ["communities"]
  verbs: ["get", "list","watch"]
- apiGroups: ["metallb.io"]
  resources: ["bfdprofiles"]
  verbs: ["get", "list","watch"]
---
# Source: metallb/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: RELEASE-NAME-metallb-pod-lister
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RELEASE-NAME-metallb-pod-lister
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME-metallb-speaker
---
# Source: metallb/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: RELEASE-NAME-metallb-controller
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RELEASE-NAME-metallb-controller
subjects:
- kind: ServiceAccount
  name: default
---
# Source: metallb/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME-metallb
  labels:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metallb
    app.kubernetes.io/version: upstream
    helm-revision: "1"
    helm.sh/chart: metallb-4.0.0
  annotations:
spec:
  type: ClusterIP
  ipFamilyPolicy: SingleStack

  ports:
  - port: 7472
    targetPort: 7472
    protocol: TCP
    name: main
  selector:
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
---
# Source: metallb/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME-metallb
  labels:
    app.kubernetes.io/instance: RELEASE-NAME
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: metallb
    app.kubernetes.io/version: upstream
    helm-revision: "1"
    helm.sh/chart: metallb-4.0.0
  annotations:
    rollme: 6q8FA
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: metallb
      app.kubernetes.io/instance: RELEASE-NAME
  template:
    metadata:
      annotations:

      labels:
        app.kubernetes.io/name: metallb
        app.kubernetes.io/instance: RELEASE-NAME
    spec:

      serviceAccountName: default
      securityContext:

        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 568
        runAsUser: 568
        supplementalGroups:
        - 568
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:

          - name: ndots
            value: "1"
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      initContainers:

        - name: prepare
          image: tccr.io/truecharts/multi-init:v0.0.1@sha256:4c2caebee117b055f379377fd0fd306f2ee0e6697fd47d9364073e0e9e6f2e02
          securityContext:
            runAsUser: 0
          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
          env:
          command:
            - "/bin/sh"
            - "-c"
            - |
              /bin/bash <<'EOF'
              echo "Automatically correcting permissions..."

              EOF

          volumeMounts:
      containers:
        - name: RELEASE-NAME-metallb
          image: quay.io/metallb/controller:latest
          imagePullPolicy: IfNotPresent
          args:
            - --port=7472
            - --log-level=
            - --cert-service-name=RELEASE-NAME-metallb-webhook
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add: []
              drop: []
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true

          env:
            - name: UMASK
              value: "2"
            - name: UMASK_SET
              value: "2"
            - name: S6_READ_ONLY_ROOT
              value: "1"
            - name: NVIDIA_VISIBLE_DEVICES
              value: "void"
            - name: TZ
              value: "UTC"
          envFrom:
          ports:
            - name: main
              containerPort: 7472
              protocol: TCP
          volumeMounts:

            - mountPath: /shared
              name: shared
            - mountPath: /tmp
              name: temp
            - mountPath: /var/logs
              name: varlogs
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: webhook-server-cert
              readOnly: true
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: monitoring
            initialDelaySeconds: 25
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: monitoring
            initialDelaySeconds: 25
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            failureThreshold: 60
            httpGet:
              path: /metrics
              port: monitoring
            initialDelaySeconds: 25
            periodSeconds: 5
            timeoutSeconds: 2

          resources:
            limits:
              cpu: 4000m
              memory: 8Gi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: shared
          emptyDir:
            {}
        - name: temp
          emptyDir:
            {}
        - name: varlogs
          emptyDir:
            {}
        - name: webhook-server-cert
          secret:
            secretName: webhook-server-cert
---
# Source: metallb/templates/common.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: metallb-webhook-configuration
  labels:
    helm.sh/chart: metallb-4.0.0
    app.kubernetes.io/name: metallb
    app.kubernetes.io/instance: RELEASE-NAME
    helm-revision: "1"
    app.kubernetes.io/version: "upstream"
    app.kubernetes.io/managed-by: Helm
  annotations:

webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: RELEASE-NAME-metallb-webhook
      namespace: default
      path: /validate-metallb-io-v1beta1-addresspool
  failurePolicy: Fail
  name: addresspoolvalidationwebhook.metallb.io
  rules:
  - apiGroups:
    - metallb.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - addresspools
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: RELEASE-NAME-metallb-webhook
      namespace: default
      path: /validate-metallb-io-v1beta2-bgppeer
  failurePolicy: Fail
  name: bgppeervalidationwebhook.metallb.io
  rules:
  - apiGroups:
    - metallb.io
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    resources:
    - bgppeers
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: RELEASE-NAME-metallb-webhook
      namespace: default
      path: /validate-metallb-io-v1beta1-ipaddresspool
  failurePolicy: Fail
  name: ipaddresspoolvalidationwebhook.metallb.io
  rules:
  - apiGroups:
    - metallb.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ipaddresspools
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: RELEASE-NAME-metallb-webhook
      namespace: default
      path: /validate-metallb-io-v1beta1-bgpadvertisement
  failurePolicy: Fail
  name: bgpadvertisementvalidationwebhook.metallb.io
  rules:
  - apiGroups:
    - metallb.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - bgpadvertisements
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: RELEASE-NAME-metallb-webhook
      namespace: default
      path: /validate-metallb-io-v1beta1-community
  failurePolicy: Fail
  name: communityvalidationwebhook.metallb.io
  rules:
  - apiGroups:
    - metallb.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - communities
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: RELEASE-NAME-metallb-webhook
      namespace: default
      path: /validate-metallb-io-v1beta1-bfdprofile
  failurePolicy: Fail
  name: bfdprofilevalidationwebhook.metallb.io
  rules:
  - apiGroups:
    - metallb.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - DELETE
    resources:
    - bfdprofiles
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: RELEASE-NAME-metallb-webhook
      namespace: default
      path: /validate-metallb-io-v1beta1-l2advertisement
  failurePolicy: Fail
  name: l2advertisementvalidationwebhook.metallb.io
  rules:
  - apiGroups:
    - metallb.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - l2advertisements
  sideEffects: None
