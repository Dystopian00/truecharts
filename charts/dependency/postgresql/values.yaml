image:
  repository: ghcr.io/truecharts/postgresql
  pullPolicy: IfNotPresent
  tag: v14.1.0@sha256:d50f2f6707cf1fbe960479e3bd3b8dd05cb402612a149df0fb3c6325271d4a92

controller:
  # -- Set the controller type.
  # Valid options are deployment, daemonset or statefulset
  type: statefulset
  # -- Number of desired pods
  replicas: 1
  # -- Set the controller upgrade strategy
  # For Deployments, valid values are Recreate (default) and RollingUpdate.
  # For StatefulSets, valid values are OnDelete and RollingUpdate (default).
  # DaemonSets ignore this.
  strategy: RollingUpdate
  rollingUpdate:
    # -- Set deployment RollingUpdate max unavailable
    unavailable: 1
    # -- Set deployment RollingUpdate max surge
    surge:
    # -- Set statefulset RollingUpdate partition
    partition:
  # -- ReplicaSet revision history limit
  revisionHistoryLimit: 3

securityContext:
  readOnlyRootFilesystem: false

service:
  main:
    ports:
      main:
        port: 5432
        targetPort: 5432

## TODO: Fix the backup-on-upgrade system
enableUpgradeBackup: false

podSecurityContext:
  runAsGroup: 0

volumeClaimTemplates:
  db:
    enabled: true
    mountPath: "/bitnami/postgresql"


postgresqlPassword: "testpass"
postgresqlUsername: "test"
postgresqlDatabase: "test"
postgrespassword: "testroot"
existingSecret: ""

envValueFrom:
  POSTGRES_PASSWORD:
    secretKeyRef:
      name: '{{ ( tpl .Values.existingSecret $ ) | default ( include "common.names.fullname" . ) }}'
      key: "postgresql-password"
  POSTGRESQL_POSTGRES_PASSWORD:
    secretKeyRef:
      name: '{{ ( tpl .Values.existingSecret $ ) | default ( include "common.names.fullname" . ) }}'
      key: "postgresql-postgres-password"

envTpl:
  POSTGRES_USER: "{{ .Values.postgresqlUsername }}"
  POSTGRES_DB: "{{ .Values.postgresqlDatabase }}"
# POSTGRESQL_POSTGRES_PASSWORD: "{{ .Values.postgrespassword }}"
# POSTGRESQL_PASSWORD: "{{ .Values.password }}"
