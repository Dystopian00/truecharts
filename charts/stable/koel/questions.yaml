# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controller}
# Include{controllerDeployment}
# Include{replicas}
# Include{replica1}
# Include{strategy}
# Include{recreate}
# Include{controllerExpert}
# Include{controllerExpertExtraArgs}
  - variable: secretEnv
    group: "Container Configuration"
    label: "Image Secrets"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: LASTFM_API_KEY
          label: "LASTFM_API_KEY"
          description: "Enable scrobbling to Last.fm. See https://docs.koel.dev/3rd-party.html#last-fm"
          schema:
            type: string
            default: ""
        - variable: LASTFM_API_SECRET
          label: "LASTFM_API_SECRET"
          description: "Enable scrobbling to Last.fm. See https://docs.koel.dev/3rd-party.html#last-fm"
          schema:
            type: string
            default: ""
        - variable: YOUTUBE_API_KEY
          label: "YOUTUBE_API_KEY"
          description: "Enable YouTube integration. See https://docs.koel.dev/3rd-party.html#youtube"
          schema:
            type: string
            default: ""
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: FORCE_HTTPS
          label: "FORCE_HTTPS"
          description: "If set to true, all URLs redirects done by koel will use https."
          schema:
            type: boolean
            default: false
        - variable: MEMORY_LIMIT
          label: "MEMORY_LIMIT"
          description: "Amount of memory in MB for the scanning process."
          schema:
            type: int
            default: 2048
# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorSimple}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10185
                              required: true
# Include{advancedPortHTTP}
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 80
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: music
          label: "App Music Storage"
          description: "Stores the Application Music."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
        - variable: covers
          label: "App Covers Storage"
          description: "Stores the Application Covers."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
        - variable: searchindex
          label: "App Search Index Storage"
          description: "Stores the Application Search Index."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{documentation}
