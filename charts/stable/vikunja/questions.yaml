# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controller}
# Include{replicas}
# Include{replica1}
# Include{controllerExpertExtraArgs}
  - variable: vikunja
    group: App Configuration
    label: Vikunja Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: service
          label: Service
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: jwtttl
                label: JWT TTL
                description: The duration of the issued JWT tokens in seconds.
                schema:
                  type: int
                  required: true
                  default: 259200
              - variable: jwtttllong
                label: JWT TTL Long
                description: The duration of the “remember me” time in seconds. When the login request is made with the long param set, the token returned will be valid for this period.
                schema:
                  type: int
                  required: true
                  default: 2592000
              - variable: motd
                label: Message of the Day
                description: Set the motd message, available from the /info endpoint
                schema:
                  type: string
                  default: ""
              - variable: frontendurl
                label: Frontend URL
                description: The URL of the frontend, used to send password reset emails.
                schema:
                  type: string
                  required: true
                  default: ""
              - variable: maxitemsperpage
                label: Max Item per Page
                description: The max number of items which can be returned per page.
                schema:
                  type: int
                  required: true
                  default: 50
              - variable: maxavatarsize
                label: Max Avatar Size
                description: |
                  The maximum size clients will be able to request for user avatars.
                  If clients request a size bigger than this, it will be changed on the fly.
                schema:
                  type: int
                  required: true
                  default: 1024
              - variable: enablecaldav
                label: Enable CalDAV
                description: Enable the CalDAV endpoint, see the docs for more details.
                schema:
                  type: boolean
                  default: true
              - variable: enablelinksharing
                label: Enable Link Sharing
                description: Enable sharing of lists via a link.
                schema:
                  type: boolean
                  default: true
              - variable: enableregistration
                label: Enable Registration
                description: Whether to let new users registering themselves or not
                schema:
                  type: boolean
                  default: true
              - variable: enabletaskattachments
                label: Enable Task Attachments
                description: Whether to enable task attachments or not
                schema:
                  type: boolean
                  default: true
              - variable: enabletaskcomments
                label: Enable Task Comments
                description: Whether task comments should be enabled or not
                schema:
                  type: boolean
                  default: true
              - variable: enabletotp
                label: Enable TOTP
                description: Whether TOTP is enabled. In most cases you want to leave that enabled.
                schema:
                  type: boolean
                  default: true
              - variable: enableemailreminders
                label: Enable E-Mail Reminders
                description: |
                  If enabled, vikunja will send an email to everyone who is either assigned to a task
                  or created it when a task reminder is due.
                schema:
                  type: boolean
                  default: true
              - variable: enableuserdeletion
                label: Enable User Deletion
                description: |
                  If true, will allow users to request the complete deletion of their account.
                  When using external authentication methods it may be required to coordinate with
                  them in order to delete the account. This setting will not affect the cli commands for user deletion.
                schema:
                  type: boolean
                  default: true
# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 10220
                              required: true
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: files
          label: App Files Storage
          description: Stores the Application Files.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: Privileged mode
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: ReadOnly Root Filesystem
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: Allow Privilege Escalation
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: runAsNonRoot
                schema:
                  type: boolean
                  default: false
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: runAsUser
          description: The UserID of the user running the application
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: runAsGroup
          description: The groupID this App of the user running the application
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: fsGroup
          description: The group that should own ALL storage.
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{vpn}
# Include{documentation}
