image:
  repository: ghcr.io/stavros-k/nextcloud-fpm
  pullPolicy: IfNotPresent
  tag: 26.0.0-fpm
nginxImage:
  repository: nginxinc/nginx-unprivileged
  pullPolicy: IfNotPresent
  tag: "1.23.3"
imaginaryImage:
  repository: nextcloud/imaginary
  pullPolicy: IfNotPresent
  tag: 20230401@sha256:91d3ef54422870569e5e047027915cc61c6ff154fb7203c11ce4ed2f0f58dc06
hpbImage:
  repository: ghcr.io/stavros-k/nextcloud-notify_push
  pullPolicy: IfNotPresent
  tag: "0.6.2"
clamavImage:
  repository: tccr.io/truecharts/clamav
  pullPolicy: IfNotPresent
  tag: latest@sha256:0f86e1462259f7423d768e42b4d4da257673e19eb89c0ec0cb016cab9cc75bb1

# securityContext:
#  container:
#    readOnlyRootFilesystem: false
#    runAsNonRoot: false
#    runAsUser: 0
#    runAsGroup: 0
#    fsGroup: 33

workload:
  main:
    strategy: RollingUpdate
    replicas: 2
    podSpec:
      initContainers:
        prestart:
          enabled: true
          imageSelector: image
          # TODO: Maybe make it "install" and/or "upgrade"
          type: init
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          command:
            - "/bin/sh"
            - "-c"
            - |
              /bin/sh <<'EOF'
              echo "Forcing permissions on userdata folder..."
              chmod 770 /var/www/html/data || echo "Failed to chmod..."
              EOF
      containers:
        main:
          probes:
            liveness:
              enabled: true
              type: exec
              command: /healthcheck.sh
            readiness:
              enabled: true
              type: exec
              command: /healthcheck.sh
            startup:
              enabled: true
              type: exec
              command: /healthcheck.sh
          envFrom:
            - configMapRef:
                name: nextcloud-config
          env:
            # IP used for exposing nextcloud
            # Often the service or nodePort IP
            # Defaults to the main serviceName for CI purposes.
            AccessIP:
            # Nextcloud Variables
            NEXTCLOUD_ADMIN_USER: admin
            NEXTCLOUD_ADMIN_PASSWORD: adminpass
            POSTGRES_DB: "{{ .Values.cnpg.main.database }}"
            POSTGRES_USER: "{{ .Values.cnpg.main.user }}"
            POSTGRES_PASSWORD:
              secretKeyRef:
                name: cnpg-main-user
                key: password
            POSTGRES_HOST:
              secretKeyRef:
                name: cnpg-main-urls
                key: porthost
        nginx:
          enabled: true
          imageSelector: nginxImage
          probes:
            readiness:
              enabled: true
              path: /robots.txt
              port: 8080
              httpHeaders:
                Host: kube.internal.healthcheck
            liveness:
              enabled: true
              path: /robots.txt
              port: 8080
              httpHeaders:
                Host: kube.internal.healthcheck
            startup:
              enabled: true
              path: /robots.txt
              port: 8080
              httpHeaders:
                Host: kube.internal.healthcheck
  hpb:
    enabled: true
    type: Deployment
    strategy: RollingUpdate
    replicas: 2
    podSpec:
      containers:
        hpb:
          primary: true
          enabled: true
          imageSelector: hpbImage
          # While it can be configured with envs instead of a config file
          # There is a bug in the current version of notify_push that prevents it from working
          # in certain situations. Also it picks the database prefix from the config file,
          # which is something that can change in the future from upstream.
          args:
            - /var/www/html/config/config.php
          env:
            # https://github.com/nextcloud/notify_push#configuration
            # This points to the nginx service internally
            NEXTCLOUD_URL: http://{{ printf "%s-nextcloud" .Release.Name }}:{{ $.Values.service.main.ports.main.port }}
            METRICS_PORT: 7868
          probes:
            readiness:
              enabled: true
              path: /push/test/cookie
              port: 7867
              httpHeaders:
                Host: kube.internal.healthcheck
            liveness:
              enabled: true
              path: /push/test/cookie
              port: 7867
              httpHeaders:
                Host: kube.internal.healthcheck
            startup:
              enabled: true
              path: /push/test/cookie
              port: 7867
              httpHeaders:
                Host: kube.internal.healthcheck

  imaginary:
    enabled: "{{ .Values.previews.imaginary }}"
    type: Deployment
    strategy: RollingUpdate
    replicas: 2
    podSpec:
      containers:
        imaginary:
          primary: true
          enabled: true
          imageSelector: imaginaryImage
          command: imaginary
          args:
            - -concurrency
            - "10"
            - -enable-url-source
            - -return-size
          env:
            PORT: 9090
          probes:
            readiness:
              enabled: true
              path: /
              port: 9090
            liveness:
              enabled: true
              path: /
              port: 9090
            startup:
              enabled: true
              path: /
              port: 9090

cronjobs:
  - name: nextcloud-cron
    enabled: true
    schedule: "*/5 * * * *"
    cmd: |
      echo "Running Nextcloud CronJob..."
      php -f /var/www/html/cron.php
      echo "cronjob finished"
  - name: preview-cron
    enabled: "{{ .Values.previews.enabled }}"
    schedule: "{{ .Values.previews.schedule }}"
    cmd: |
      echo "Running Pre-Generate Previews..."
      occ preview:pre-generate
      echo "Previews generated."

nextcloud:
  activity_expire_days: 90
  trash_retention_obligation: auto
  versions_retention_obligation: auto
  # https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
  default_phone_region: GR
  shared_folder_name: Shared
  max_chunk_size: 31457280
  php_memory_limit: 1G
  php_upload_limit: 10G

previews:
  enabled: true
  imaginary: true
  schedule: "*/30 * * * *"
  max_x: 2048
  max_y: 2048
  max_memory: 512
  max_filesize_image: 150
  jpeg_quality: 60
  height_sizes: 256
  width_sizes: 256 384
  square_sizes: 32 256
  # Casing matters here
  providers:
    - PNG
    - JPEG
    - GIF
    - BMP
    - XBitmap
    - MP3
    - MarkDown
    - OpenDocument
    - TXT
    - Krita
    # - Illustrator
    # - HEIC
    # - Movie
    # - MSOffice2003
    # - MSOffice2007
    # - MSOfficeDoce
    # - PDF
    # - Photoshop
    # - Postscript
    # - StarOffice
    # - SVG
    # - TIFF
    # - Font

service:
  main:
    ports:
      main:
        port: 8080
        targetPort: 8080
  hpb:
    enabled: true
    ports:
      hpb:
        enabled: true
        port: 7867
        targetPort: 7867
  backend:
    enabled: true
    ports:
      hpb-metrics:
        enabled: true
        port: 7868
        targetPort: 7868
      imaginary:
        enabled: true
        port: 9090
        targetPort: 9090

hostAliases:
  - ip: '{{ .Values.workload.main.podSpec.containers.main.env.AccessIP | default "127.0.0.1" }}'
    hostnames:
      - "{{ if .Values.ingress.main.enabled }}{{ with (first .Values.ingress.main.hosts) }}{{ .host }}{{ end }}{{ else }}placeholder.fakedomain.dns{{ end }}"

persistence:
  html:
    enabled: true
    mountPath: /var/www/html
    targetSelector:
      hpb:
        hpb: {}
      main:
        main: {}
        nginx: {}
        prestart: {}
      nc-cron:
        nc-cron: {}
      preview-cron:
        preview-cron: {}
      imaginary:
        imaginary: {}
  data:
    enabled: true
    mountPath: /var/www/html/data
    targetSelector:
      hpb:
        hpb: {}
      main:
        main: {}
        nginx: {}
        prestart: {}
      nc-cron:
        nc-cron: {}
      preview-cron:
        preview-cron: {}
      imaginary:
        imaginary: {}
  ## TODO: CHECK IF NEEDED
  #  varrun:
  #    enabled: true
  #    mountPath: "/var/run"
  #    targetSelector:
  #       cron:
  #         cron: {}
  #      main:
  #        hpb: {}
  #        main: {}

  ## TODO: CHECK IF NEEDED
  #  cache:
  #    enabled: true
  #    type: emptyDir
  #    mountPath: /var/cache/nginx
  #    medium: Memory
  #    targetSelector:
  #      main:
  #        nginx: {}
  nginx:
    enabled: true
    mountPath: /etc/nginx
    readOnly: true
    type: configmap
    objectName: nginx-config
    items:
      - key: nginx.conf
        path: nginx.conf
  php-tune:
    enabled: true
    mountPath: /etc/nginx/usr/local/etc/php-fpm.d
    readOnly: true
    type: configmap
    objectName: php-tune
    items:
      - key: zz-tune.conf
        path: zz-tune.conf
  redis-session:
    enabled: true
    mountPath: /usr/local/etc/php/conf.d/redis-session.ini
    readOnly: true
    type: configmap
    objectName: redis-session
    items:
      - key: redis-session.ini
        path: redis-session.ini

collabora:
  enabled: false
  env:
    aliasgroup1:
      configMapRef:
        name: nextcloudconfig
        key: aliasgroup1
    dictionaries: "de_DE en_GB en_US es_ES fr_FR it nl pt_BR pt_PT ru"
    extra_params: "--o:welcome.enable=false --o:logging.level=information --o:user_interface.mode=notebookbar --o:ssl.termination=true --o:ssl.enable=false "
    server_name: ""
    DONT_GEN_SSL_CERT: true

cnpg:
  main:
    enabled: true
    user: nextcloud
    database: nextcloud

hpb:
  enabled: true

redis:
  enabled: true

portal:
  open:
    enabled: true
