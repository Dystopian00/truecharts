# Include{groups}
portals: {}

questions:
# Include{global}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
# Include{fixedEnv}

# Include{containerConfig}

  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

# Include{serviceExpert}

# Include{serviceList}

# Include{persistenceList}

# Include{ingressList}

  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: true
# Include{securityContextAdvanced}

  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: The groupID this App of the user running the application"
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}

# Include{resources}

# Include{metrics}

# Include{prometheusRule}
                    - variable: downloadLimit
                      label: "Download Limit"
                      description: "Download speed you want alerts to be triggered in Mbps"
                      schema:
                        type: int
                        default: 400
                    - variable: uploadLimit
                      label: "Upload Limit"
                      description: "Upload speed you want alerts to be triggered in Mbps"
                      schema:
                        type: int
                        default: 400
                    - variable: pingLimit
                      label: "Ping Limit"
                      description: "Ping latency you want alerts to be triggered in ms"
                      schema:
                        type: int
                        default: 10
                    - variable: jitterLimit
                      label: "Jitter Limit"
                      description: "Jitter latency you want alerts to be triggered in ms"
                      schema:
                        type: int
                        default: 30

# Include{advanced}

# Include{addons}
