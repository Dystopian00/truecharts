image:
  repository: tccr.io/truecharts/sonarr
  pullPolicy: IfNotPresent
  tag: 3.0.10.1567@sha256:f420ed0b9341a5241c2278d51a7f4f59635a9c3a5670ac893542fa59052e61b2
exportarrImage:
  repository: tccr.io/truecharts/exportarr
  pullPolicy: IfNotPresent
  tag: v1.5.3@sha256:f369a43b28410f12ce1b96f52187dd5c6fb9769a137ecc6f7ab8fdcfbe7db58e

service:
  main:
    ports:
      main:
        port: 8989
  exportarr:
    enabled: true
    ports:
      exportarr:
        enabled: true
        port: 8990

exportarr:
  log_level: INFO
  disable_ssl_verify: false
  enable_additional_metrics: false
  enable_unknown_queue_items: false

additionalContainers:
  exportarr:
    name: exportarr
    image: "{{ .Values.exportarrImage.repository }}:{{ .Values.exportarrImage.tag }}"
    probes:
      liveness:
        enabled: true
        type: http
        path: /metrics
      readiness:
        enabled: true
        type: http
        path: /metrics
      startup:
        enabled: true
        type: http
        path: /metrics
    env:
      - name: INTERFACE
        value: "0.0.0.0"
      - name: URL
        value: "0.0.0.0:{{ .Values.service.main.ports.main.port }}"
      - name: PORT
        value: "{{ .Values.service.exportarr.ports.exportarr.port }}"
      - name: LOG_LEVEL
        value: "{{.Values.exportarr.log_level }}"
      - name: DISABLE_SSL_VERIFY
        value: "{{ ternary true false .Values.exportarr.disable_ssl_verify }}"
      - name: ENABLE_ADDITIONAL_METRICS
        value: "{{ ternary true false .Values.exportarr.enable_additional_metrics }}"
      - name: ENABLE_UNKNOWN_QUEUE_ITEMS
        value: "{{ ternary true false .Values.exportarr.enable_unknown_queue_items }}"
      - name: CONFIG
        value: "{{.Values.persistence.config.mountPath }}"
    args: sonarr
    volumeMounts:
      - name: config
        mountPath: "/config"

workload:
  main:
    podSpec:
      containers:
        main:
          probes:
            liveness:
              enabled: true
              type: http
              path: /ping
            readiness:
              enabled: true
              type: http
              path: /ping
            startup:
              enabled: true
              type: http
              path: /ping
          env:
            SONARR__PORT: "{{ .Values.service.main.ports.main.port }}"
            SONARR__AUTHENTICATION_METHOD: ""

persistence:
  config:
    enabled: true
    mountPath: /config

portal:
  open:
    enabled: true
