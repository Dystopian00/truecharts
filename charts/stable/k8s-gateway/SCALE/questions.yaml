# Include{groups}
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: false
  - variable: controller
    group: "Controller"
    label: ""
    schema:
      type: dict
      attrs:
        - variable: type
          description: "Please specify type of workload to deploy"
          label: "(Advanced) Controller Type"
          schema:
            type: string
            default: "deployment"
            required: true
            enum:
              - value: "deployment"
                description: "Deployment"
              - value: "statefulset"
                description: "Statefulset"
              - value: "daemonset"
                description: "Daemonset"
        - variable: replicas
          description: "Number of desired pod replicas"
          label: "Desired Replicas"
          schema:
            type: int
            default: 1
            required: true
        - variable: strategy
          description: "Please specify type of workload to deploy"
          label: "(Advanced) Update Strategy"
          schema:
            type: string
            default: "Recreate"
            required: true
            enum:
              - value: "Recreate"
                description: "Recreate: Kill existing pods before creating new ones"
              - value: "RollingUpdate"
                description: "RollingUpdate: Create new pods and then kill old ones"
              - value: "OnDelete"
                description: "(Legacy) OnDelete: ignore .spec.template changes"
# Include{controllerExpert}

  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      type: dict
      attrs:
        - variable: TZ
          label: "Timezone"
          schema:
            type: string
            default: "Etc/UTC"
            $ref:
              - "definitions/timezone"
        - variable: UMASK
          label: "UMASK"
          description: "Sets the UMASK env var for LinuxServer.io (compatible) containers"
          schema:
            type: string
            default: "002"
# Include{containerConfig}

  - variable: domains
    group: "App Configuration"
    label: "Domains"
    description: "Please refer to CoreDNS docs for options"
    schema:
      type: list
      default: []
      items:
        - variable: domainEntry
          label: ""
          schema:
            type: dict
            attrs:
              - variable: domain
                label: "Domain name"
                schema:
                  type: string
                  required: true
                  default: "example.com"
              - variable: dnsChallenge
                label: "Forward dnsChallenge"
                description: "Optional configuration option for DNS01 challenge that will redirect all acme"
                schema:
                  type: dict
                  attrs:
                    - variable: enabled
                      label: "Enable"
                      schema:
                        type: boolean
                        default: false
                        show_subquestions_if: true
                        subquestions:
                          - variable: domain
                            label: "Forward to Domain"
                            schema:
                              type: string
                              required: true
                              default: "dns01.clouddns.com"

  - variable: forward
    group: "App Configuration"
    label: "Forward DNS To"
    schema:
      type: dict
      attrs:
        - variable: enabled
          label: "Enabled"
          schema:
            type: boolean
            default: true
            show_subquestions_if: true
            subquestions:
              - variable: primary
                label: "Primary"
                schema:
                  type: string
                  required: true
                  default: "1.1.1.1"
              - variable: secondary
                label: "Secondary"
                schema:
                  type: string
                  required: true
                  default: "1.0.0.1"
              - variable: options
                label: "Forward Options"
                description: "Please refer to CoreDNS docs for options"
                schema:
                  type: list
                  default: []
                  items:
                    - variable: optionEntry
                      label: "Option"
                      schema:
                        type: dict
                        attrs:
                          - variable: name
                            label: "Name"
                            schema:
                              type: string
                              required: true
                              default: ""
                          - variable: value
                            label: "Value"
                            schema:
                              type: string
                              required: true
                              default: ""



  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enable the service"
                schema:
                  type: boolean
                  default: true
                  hidden: true
              - variable: type
                label: "Service Type"
                description: "ClusterIP's are only internally available, nodePorts expose the container to the host node System, Loadbalancer exposes the service using the system loadbalancer"
                schema:
                  type: string
                  default: "LoadBalancer"
                  enum:
                    - value: "NodePort"
                      description: "NodePort"
                    - value: "ClusterIP"
                      description: "ClusterIP"
                    - value: "LoadBalancer"
                      description: "LoadBalancer"
              - variable: loadBalancerIP
                label: "LoadBalancer IP"
                description: "LoadBalancerIP"
                schema:
                  show_if: [["type", "=", "LoadBalancer"]]
                  type: string
                  default: ""
              - variable: externalIPs
                label: "External IP's"
                description: "External IP's"
                schema:
                  show_if: [["type", "=", "LoadBalancer"]]
                  type: list
                  default: []
                  items:
                    - variable: externalIP
                      label: "External IP"
                      schema:
                        type: string
              - variable: ports
                label: "Service's Port(s) Configuration"
                schema:
                  type: dict
                  attrs:
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        type: dict
                        attrs:
                          - variable: enabled
                            label: "Enable the port"
                            schema:
                              type: boolean
                              default: true
                              hidden: true
                          - variable: protocol
                            label: "Port Type"
                            schema:
                              type: string
                              default: "UDP"
                              enum:
                                - value: HTTP
                                  description: "HTTP"
                                - value: "HTTPS"
                                  description: "HTTPS"
                                - value: TCP
                                  description: "TCP"
                                - value: "UDP"
                                  description: "UDP"
                          - variable: targetPort
                            label: "Target Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 53
                              editable: false
                              hidden: true
                          - variable: port
                            label: "Container Port"
                            schema:
                              type: int
                              default: 53
                              editable: true
                              required: true
                          - variable: nodePort
                            label: "Node Port (Optional)"
                            description: "This port gets exposed to the node. Only considered when service type is NodePort"
                            schema:
                              type: int
                              min: 9000
                              max: 65535

  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false

        - variable: dnsPolicy
          group: "Networking and Services"
          label: "dnsPolicy"
          schema:
            type: string
            default: ""
            enum:
              - value: ""
                description: "Default"
              - value: "ClusterFirst"
                description: "ClusterFirst"
              - value: "ClusterFirstWithHostNet"
                description: "ClusterFirstWithHostNet"
              - value: "None"
                description: "None"

        - variable: dnsConfig
          label: "DNS Configuration"
          group: "Networking and Services"
          description: "Specify custom DNS configuration which will be applied to the pod"
          schema:
            type: dict
            attrs:
              - variable: nameservers
                label: "Nameservers"
                schema:
                  default: []
                  type: list
                  items:
                    - variable: nameserver
                      label: "Nameserver"
                      schema:
                        type: string
              - variable: options
                label: "options"
                schema:
                  default: []
                  type: list
                  items:
                    - variable: option
                      label: "Option Entry"
                      schema:
                        type: string
              - variable: searches
                label: "Searches"
                schema:
                  default: []
                  type: list
                  items:
                    - variable: search
                      label: "Search Entry"
                      schema:
                        type: string

# Include{serviceList}


# Include{persistenceList}



  - variable: securityContext
    group: "Security and Permissions"
    label: "Security Context"
    schema:
      type: dict
      attrs:
        - variable: privileged
          label: "Privileged mode"
          schema:
            type: boolean
            default: false
        - variable: readOnlyRootFilesystem
          label: "ReadOnly Root Filesystem"
          schema:
            type: boolean
            default: true
        - variable: allowPrivilegeEscalation
          label: "Allow Privilege Escalation"
          schema:
            type: boolean
            default: false
        - variable: runAsNonRoot
          label: "runAsNonRoot"
          schema:
            type: boolean
            default: true

  - variable: resources
    group: "Resources and Devices"
    label: "Resource Limits"
    schema:
      type: dict
      attrs:
        - variable: limits
          label: "Advanced Limit Resource Consumption"
          schema:
            type: dict
            attrs:
              - variable: cpu
                label: "CPU"
                schema:
                  type: string
                  default: "2000m"
                  valid_chars: '^([0-9]+)(\.[0-9]?|m?)$'
              - variable: memory
                label: "Memory RAM"
                schema:
                  type: string
                  default: "2Gi"
                  valid_chars: '^([0-9.]+)([EPTGMK]i?|[EPTGMK]?|e[0-9]+)$'
        - variable: requests
          label: "Advanced Request minimum resources required"
          schema:
            type: dict
            attrs:
              - variable: cpu
                label: "CPU"
                schema:
                  type: string
                  default: "10m"
                  valid_chars: '^([0-9]+)(\.[0-9]?|m?)$'
              - variable: memory
                label: "Memory RAM"
                schema:
                  type: string
                  default: "50Mi"
                  valid_chars: '^([0-9.]+)([EPTGMK]i?|[EPTGMK]?|e[0-9]+)$'


  - variable: autoscaling
    group: "Resources and Devices"
    label: "(Advanced) Horizontal Pod Autoscaler"
    schema:
      type: dict
      attrs:
        - variable: enabled
          label: "enabled"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: target
                label: "Target"
                description: "deployment name, defaults to main deployment"
                schema:
                  type: string
                  default: ""
              - variable: minReplicas
                label: "Minimum Replicas"
                schema:
                  type: int
                  default: 1
              - variable: maxReplicas
                label: "Maximum Replicas"
                schema:
                  type: int
                  default: 5
              - variable: targetCPUUtilizationPercentage
                label: "Target CPU Utilization Percentage"
                schema:
                  type: int
                  default: 80
              - variable: targetMemoryUtilizationPercentage
                label: "Target Memory Utilization Percentage"
                schema:
                  type: int
                  default: 80

# Include{addons}
