# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{controller}
# Include{controllerDeployment}
# Include{replicas}
# Include{replica1}
# Include{strategy}
# Include{recreate}
# Include{controllerExpert}
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: WHOOGLE_CONFIG_COUNTRY
          label: "WHOOGLE_CONFIG_COUNTRY"
          description: "Filter results by hosting country"
          schema:
            type: string
            default: ""
        - variable: WHOOGLE_CONFIG_THEME
          label: "WHOOGLE_CONFIG_THEME"
          description: "Select theme"
          schema:
            type: string
            default: "dark"
            required: true
            enum:
              - value: "dark"
                description: "Dark"
              - value: "light"
                description: "Light"
              - value: "system"
                description: "System"
        - variable: WHOOGLE_CONFIG_SAFE
          label: "WHOOGLE_CONFIG_SAFE"
          description: "Enable safe searches"
          schema:
            type: boolean
            default: true
        - variable: WHOOGLE_CONFIG_ALTS
          label: "WHOOGLE_CONFIG_ALTS"
          description: "Use social media site alternatives (nitter, invidious, etc)"
          schema:
            type: boolean
            default: false
        - variable: WHOOGLE_CONFIG_TOR
          label: "WHOOGLE_CONFIG_TOR"
          description: "Use Tor routing (if available)"
          schema:
            type: boolean
            default: false
        - variable: WHOOGLE_CONFIG_NEW_TAB
          label: "WHOOGLE_CONFIG_NEW_TAB"
          description: "Always open results in new tab"
          schema:
            type: boolean
            default: false
        - variable: WHOOGLE_CONFIG_GET_ONLY
          label: "WHOOGLE_CONFIG_GET_ONLY"
          description: "Search using GET requests only"
          schema:
            type: boolean
            default: false
        - variable: WHOOGLE_CONFIG_URL
          label: "WHOOGLE_CONFIG_URL"
          description: "The root url of the instance (https://<your url>/)"
          schema:
            type: string
            default: ""
        - variable: WHOOGLE_CONFIG_STYLE
          label: "WHOOGLE_CONFIG_STYLE"
          description: "The custom CSS to use for styling (should be single line)"
          schema:
            type: string
            default: ""
# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10052
                              required: true
# Include{advancedPortHTTP}
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 5000
# Include{serviceExpertRoot}
            default: false
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: true
# Include{securityContextAdvanced}
  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
