# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}
  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
# Include{controllerTypes}

# Include{controllerStrategies}
# Include{controllerExpert}
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: APP_URL
          label: "APP_URL"
          description: "Specify the URL of the Ferdi-server, including http:// or https:// as relevant."
          schema:
            type: string
            required: true
        - variable: IS_CREATION_ENABLED
          label: "IS_CREATION_ENABLED"
          description: "Specify whether to enable the creation of custom recipes."
          schema:
            type: boolean
        - variable: IS_DASHBOARD_ENABLED
          label: "IS_DASHBOARD_ENABLED"
          description: "Specify whether to enable the Ferdi-server dashboard."
          schema:
            type: boolean
        - variable: IS_REGISTRATION_ENABLED
          label: "IS_REGISTRATION_ENABLED"
          description: "Specify whether to allow user registration."
          schema:
            type: boolean
        - variable: CONNECT_WITH_FRANZ
          label: "CONNECT_WITH_FRANZ"
          description: "Specify whether to enable connections to the Franz server."
          schema:
            type: boolean
        - variable: mailsettings
          label: "Mail Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: MAIL_CONNECTION
                label: "MAIL_CONNECTION"
                description: "Specify the mail sender to be used."
                schema:
                  type: string
                  default: "smtp"
              - variable: SMTP_HOST
                label: "SMTP_HOST"
                description: "Specify the mail host to be used"
                schema:
                  type: string
                  default: ""
              - variable: SMTP_PORT
                label: "SMTP_PORT"
                description: "Specify the mail port to be used."
                schema:
                  type: int
                  default: 587
              - variable: MAIL_SSL
                label: "MAIL_SSL"
                description: "Specify SMTP mail security."
                schema:
                  type: boolean
                  default: true
              - variable: MAIL_USERNAME
                label: "MAIL_USERNAME"
                description: "Specify your mail username to be used."
                schema:
                  type: string
                  default: ""
              - variable: MAIL_PASSWORD
                label: "MAIL_PASSWORD"
                description: "Specify your mail password to be used."
                schema:
                  type: string
                  private: true
                  default: ""
              - variable: MAIL_SENDER
                label: "MAIL_SENDER"
                description: "Specify the mail sender address to be used."
                schema:
                  type: string
                  default: ""
              - variable: SPARKPOST_API_KEY
                label: "SPARKPOST_API_KEY"
                description: "Specify SparkPost API Key to be used."
                schema:
                  type: string
                  private: true
                  default: ""
              - variable: MAILGUN_DOMAIN
                label: "MAILGUN_DOMAIN"
                description: "Specify Mailgun domain to be used."
                schema:
                  type: string
                  default: ""
              - variable: MAILGUN_API_REGION
                label: "MAILGUN_API_REGION"
                description: "Specify Mailgun API Region to be used."
                schema:
                  type: string
                  default: ""
              - variable: MAILGUN_API_KEY
                label: "MAILGUN_API_KEY"
                description: "Specify Mailgun API Key to be used."
                schema:
                  type: string
                  private: true
                  default: ""
# Include{containerConfig}
  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10206
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: "HTTP"
# Include{portType}
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 3333
  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false
# Include{serviceExpert}
# Include{serviceList}
  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: data
          label: "App Data Storage"
          description: "Stores the Application Data."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
        - variable: recipes
          label: "App Recipes Storage"
          description: "Stores the Application Recipes."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}
  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
