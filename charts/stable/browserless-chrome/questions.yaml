# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
  metrics:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
    path: "/metrics"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}
  - variable: imageSelector
    group: "Container Image"
    label: "Select Image"
    schema:
      type: string
      default: "image"
      enum:
        - value: "image"
          description: "Chrome"
        - value: "imagePuppeteer"
          description: "Puppeteer"
  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
# Include{controllerTypes}
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
# Include{controllerStrategies}
# Include{controllerExpert}
  - variable: secretEnv
    group: "Container Configuration"
    label: "Image Secrets"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: TOKEN
          label: "TOKEN"
          description: "You can optionally apply a TOKEN param that will restrict calls without a token query-string parameter"
          schema:
            type: string
            default: ""
            private: true
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: HOST
          label: "HOST"
          schema:
            type: string
            default: ""
        - variable: WORKSPACE_DELETE_EXPIRED
          label: "WORKSPACE_DELETE_EXPIRED"
          description: "This will have browserless delete files older than 30 days in the workspace, checking once a day"
          schema:
            type: boolean
            default: false
        - variable: WORKSPACE_EXPIRE_DAYS
          label: "WORKSPACE_EXPIRE_DAYS"
          description: "Attempts to delete files older than X days in the workspace directory"
          schema:
            type: int
            default: 30
        - variable: CHROME_REFRESH_TIME
          label: "CHROME_REFRESH_TIME"
          description: "The CHROME_REFRESH_TIME flag accepts a value in milliseconds to keep Chrome running before it attempts to close it."
          schema:
            type: int
            default: 3600000
        - variable: MAX_CONCURRENT_SESSIONS
          label: "MAX_CONCURRENT_SESSIONS"
          description: "Since running Chrome can be rather resource intensive you'll probably want to limit the number of concurrent sessions."
          schema:
            type: int
            default: 5
        - variable: MAX_QUEUE_LENGTH
          label: "MAX_QUEUE_LENGTH"
          description: "This value determines how many items in the queue are allowed before requests are issued a 429 response code and closed."
          schema:
            type: int
            default: 5
        - variable: DEFAULT_BLOCK_ADS
          label: "DEFAULT_BLOCK_ADS"
          schema:
            type: boolean
            default: false
        - variable: DEFAULT_HEADLESS
          label: "DEFAULT_HEADLESS"
          schema:
            type: boolean
            default: true
        - variable: DEFAULT_IGNORE_HTTPS_ERRORS
          label: "DEFAULT_IGNORE_HTTPS_ERRORS"
          schema:
            type: boolean
            default: false
        - variable: DEFAULT_IGNORE_DEFAULT_ARGS
          label: "DEFAULT_IGNORE_DEFAULT_ARGS"
          schema:
            type: boolean
            default: false
        - variable: ENABLE_API_GET
          label: "ENABLE_API_GET"
          schema:
            type: boolean
            default: false
        - variable: FUNCTION_ENABLE_INCOGNITO_MODE
          label: "FUNCTION_ENABLE_INCOGNITO_MODE"
          schema:
            type: boolean
            default: false
        - variable: EXIT_ON_HEALTH_FAILURE
          label: "EXIT_ON_HEALTH_FAILURE"
          schema:
            type: boolean
            default: false
        - variable: DISABLE_AUTO_SET_DOWNLOAD_BEHAVIOR
          label: "DISABLE_AUTO_SET_DOWNLOAD_BEHAVIOR"
          schema:
            type: boolean
            default: false
        - variable: ENABLE_DEBUGGER
          label: "ENABLE_DEBUGGER"
          schema:
            type: boolean
            default: false
        - variable: ENABLE_CORS
          label: "ENABLE_CORS"
          schema:
            type: boolean
            default: false
        - variable: ENABLE_XVBF
          label: "ENABLE_XVBF"
          schema:
            type: boolean
            default: false
# Include{containerConfig}
  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10194
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: "HTTP"
# Include{portType}
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 3000
  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false
# Include{serviceExpert}
# Include{serviceList}
  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: downloads
          label: "App Downloads Storage"
          description: "Stores the Application Downloads."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
        - variable: metrics
          label: "App Metrics Storage"
          description: "Stores the Application Metrics."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: true
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: true
# Include{securityContextAdvanced}
  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 568
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 568
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
