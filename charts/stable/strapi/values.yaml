image:
  repository: tccr.io/truecharts/strapi
  tag: 4.6.1@sha256:60da6fd6c07d2e0c27ad9f807cbbaccbad50c16a7ea8d20a76b103bba0f644c6
  pullPolicy: Always

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

secretEnv:
  JWT_SECRET: my_jwt_secret
  ADMIN_JWT_SECRET: my_admin_jwt_secret
  APP_KEYS: '["keya", "keyb"]'

env:
  PORT: "{{ .Values.service.main.ports.main.port }}"
  DATABASE_CLIENT: postgres
  DATABASE_PORT: 5432
  DATABASE_NAME: "{{ .Values.postgresql.postgresqlDatabase }}"
  DATABASE_HOST:
    secretKeyRef:
      name: dbcreds
      key: plainhost
  DATABASE_USERNAME: "{{ .Values.postgresql.postgresqlUsername }}"
  DATABASE_PASSWORD:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password
  # STRAPI_LICENSE
  # PUBLIC_URL
  NODE_ENV: development
  STRAPI_DISABLE_UPDATE_NOTIFICATION: true
  FAST_REFRESH: false
  EXTRA_ARGS: ""

service:
  main:
    ports:
      main:
        port: 1337

initContainers:
  init:
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    volumeMounts:
      - name: data
        mountPath: /srv/app
    env:
      - name: JWT_SECRET
        value: "{{ .Values.secret.JWT_SECRET }}"
      - name: ADMIN_JWT_SECRET
        value: "{{ .Values.secret.ADMIN_JWT_SECRET }}"
      - name: APP_KEYS
        value: "{{ .Values.secret.APP_KEYS }}"
      - name: PORT
        value: "{{ .Values.service.main.ports.main.port }}"
      - name: DATABASE_CLIENT
        value: postgres
      - name: DATABASE_PORT
        value: "5432"
      - name: DATABASE_NAME
        value: "{{ .Values.postgresql.postgresqlDatabase }}"
      - name: DATABASE_HOST
        value: '{{ printf "%v-%v" .Release.Name "postgresql" }}'
      - name: DATABASE_USERNAME
        value: "{{ .Values.postgresql.postgresqlUsername }}"
      - name: DATABASE_PASSWORD
        value: "{{ .Values.postgresql.postgresqlPassword }}"
      - name: NODE_ENV
        value: "{{ .Values.env.NODE_ENV }}"
      - name: STRAPI_DISABLE_UPDATE_NOTIFICATION
        value: "{{ .Values.env.STRAPI_DISABLE_UPDATE_NOTIFICATION }}"
      - name: FAST_REFRESH
        value: "{{ .Values.env.FAST_REFRESH }}"
      - name: EXTRA_ARGS
        value: "{{ .Values.env.EXTRA_ARGS }}"
    command: ["/bin/sh", "-c"]
    args:
      - |-
        echo "Creating admin panel..."
        yarn run build
        fi

persistence:
  data:
    enabled: true
    mountPath: /srv/app

# Enabled postgres
postgresql:
  enabled: true
  existingSecret: dbcreds
  postgresqlUsername: strapi
  postgresqlDatabase: strapi

portal:
  enabled: true
