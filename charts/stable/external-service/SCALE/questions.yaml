groups:
  - name: "Container Image"
    description: "Image to be used for container"
  - name: "Controller"
    description: "Configure workload deployment"
  - name: "Container Configuration"
    description: "additional container configuration"
  - name: "App Configuration"
    description: "App specific config options"
  - name: "Networking and Services"
    description: "Configure Network and Services for container"
  - name: "Storage and Persistence"
    description: "Persist and share data that is separate from the container"
  - name: "Ingress"
    description: "Ingress Configuration"
  - name: "Security and Permissions"
    description: "Configure security context and permissions"
  - name: "Resources and Devices"
    description: "Specify resources/devices to be allocated to workload"
  - name: "Advanced"
    description: "Advanced Configuration"
portals:
  web_portal:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true

  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enable the service"
                schema:
                  type: boolean
                  default: true
                  hidden: true
              - variable: type
                label: "Service Type"
                description: "ExternalIP gets connected to using an IP and port, ExternalName gets connected to using a domain name"
                schema:
                  type: string
                  default: "ExternalIP"
                  enum:
                    - value: "ExternalName"
                      description: "ExternalName"
                    - value: "ExternalIP"
                      description: "ExternalIP"
              - variable: externalName
                label: "External Service Domainname"
                description: "Domainname of External service"
                schema:
                  show_if: [["type", "=", "ExternalName"]]
                  type: string
                  default: "google.com"
              - variable: externalIP
                label: "External Service IP"
                description: "IP of External service"
                schema:
                  show_if: [["type", "=", "ExternalIP"]]
                  type: string
                  default: "1.1.1.1"
              - variable: ports
                label: "Service's Port(s) Configuration"
                schema:
                  type: dict
                  attrs:
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        type: dict
                        attrs:
                          - variable: enabled
                            label: "Enable the port"
                            schema:
                              type: boolean
                              default: true
                              hidden: true
                          - variable: protocol
                            label: "Port Type"
                            schema:
                              type: string
                              default: "HTTP"
                              enum:
                                - value: HTTP
                                  description: "HTTP"
                                - value: "HTTPS"
                                  description: "HTTPS"
                                - value: TCP
                                  description: "TCP"
                                - value: "UDP"
                                  description: "UDP"
                          - variable: port
                            label: "Service Port"
                            description: "Both the external service port and internal service port will be the same"
                            schema:
                              type: int
                              default: 80

  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            type: dict
            attrs:
              - variable: enabled
                label: "Enable Ingress"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: hosts
                      label: "Hosts"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: hostEntry
                            label: "Host"
                            schema:
                              type: dict
                              attrs:
                                - variable: host
                                  label: "HostName"
                                  schema:
                                    type: string
                                    default: ""
                                    required: true
                                - variable: paths
                                  label: "Paths"
                                  schema:
                                    type: list
                                    default: []
                                    items:
                                      - variable: pathEntry
                                        label: "Host"
                                        schema:
                                          type: dict
                                          attrs:
                                            - variable: path
                                              label: "path"
                                              schema:
                                                type: string
                                                required: true
                                                default: "/"
                                            - variable: pathType
                                              label: "pathType"
                                              schema:
                                                type: string
                                                required: true
                                                default: "Prefix"
                    - variable: tls
                      label: "TLS-Settings"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: tlsEntry
                            label: "Host"
                            schema:
                              type: dict
                              attrs:
                                - variable: hosts
                                  label: "Certificate Hosts"
                                  schema:
                                    type: list
                                    default: []
                                    items:
                                      - variable: host
                                        label: "Host"
                                        schema:
                                          type: string
                                          default: ""
                                          required: true
                                - variable: scaleCert
                                  label: "Select TrueNAS SCALE Certificate"
                                  schema:
                                    type: int
                                    $ref:
                                      - "definitions/certificate"
                    - variable: entrypoint
                      label: "Traefik Entrypoint"
                      description: "Entrypoint used by Traefik when using Traefik as Ingress Provider"
                      schema:
                        type: string
                        default: "websecure"
                        required: true
                    - variable: middlewares
                      label: "Traefik Middlewares"
                      description: "Add previously created Traefik Middlewares to this Ingress"
                      schema:
                        type: list
                        default: []
                        items:
                          - variable: name
                            label: "Name"
                            schema:
                              type: string
                              default: ""
                              required: true
