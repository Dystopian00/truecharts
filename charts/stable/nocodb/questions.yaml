# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
    path: "/dashboard"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}
# Include{controller}
# Include{controllerDeployment}
# Include{controllerStrategies}
# Include{controllerExpert}
  - variable: secretEnv
    group: "Container Configuration"
    label: "Image Secrets"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: AWS_ACCESS_KEY_ID
          label: "AWS Access Key ID"
          description: "For Litestream - S3 access key id."
          schema:
            type: string
            private: true
            default: ""
        - variable: AWS_SECRET_ACCESS_KEY
          label: "AWS Secret Access Key"
          description: For Litestream - S3 secret access key."
          schema:
            type: string
            private: true
            default: ""
        - variable: AWS_BUCKET
          label: "AWS Bucket"
          description: "For Litestream - S3 bucket."
          schema:
            type: string
            default: ""
        - variable: AWS_BUCKET_PATH
          label: "AWS Bucket Path"
          description: "For Litestream - S3 bucket path (like folder within S3 bucket)."
          schema:
            type: string
            default: ""
        - variable: NC_GOOGLE_CLIENT_ID
          label: "Google Client ID"
          description: "Google client id to enable google authentication."
          schema:
            type: string
            default: ""
        - variable: NC_GOOGLE_CLIENT_SECRET
          label: "Google Client Secret"
          description: "Google client secret to enable google authentication."
          schema:
            type: string
            default: ""
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: NC_PUBLIC_URL
          label: "Public URL"
          description: "Used for sending Email invitations."
          schema:
            type: string
            default: ""
        - variable: NC_JWT_EXPIRES_IN
          label: "JWT Expires in"
          description: "JWT token expiry time."
          schema:
            type: string
            default: "10h"
        - variable: DISABLE_SPLASH_SCREEN
          label: "Disable Splash Screen"
          description: "Disables the default splash screen(initial welcome animation) and matrix screensaver will disable."
          schema:
            type: boolean
            default: false
        - variable: NC_INVITE_ONLY_SIGNUP
          label: "Invite Only Signup"
          description: "Allow users to signup only via invite url, value should be any non-empty string."
          schema:
            type: boolean
            default: false
        - variable: NC_DISABLE_CACHE
          label: "Disable Cache"
          description: "If it is set to true, then meta data will not be cached."
          schema:
            type: boolean
            default: false
        - variable: NC_DISABLE_TELE
          label: "Disable Telemetry"
          description: "Disable telemetry."
          schema:
            type: boolean
            default: true
        - variable: NC_DISABLE_ERR_REPORT
          label: "Disable Error Report"
          description: "Disable Error Reporting."
          schema:
            type: boolean
            default: true
        - variable: NC_REQUEST_BODY_SIZE
          label: "Request Body Size"
          description: "Request body size limit."
          schema:
            type: string
            default: "1MB"
        - variable: NC_EXPORT_MAX_TIMEOUT
          label: "Export Max Timeout"
          description: "After timeout, csv gets downloaded in batches."
          schema:
            type: int
            default: 5000
        - variable: NC_SENTRY_DSN
          label: "Sentry DSN"
          description: "For Sentry monitoring."
          schema:
            type: string
            default: ""
# Include{containerConfig}
  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10226
                              required: true
# Include{advancedPortHTTP}
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 10226
  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false
# Include{serviceExpert}
# Include{serviceList}
  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: data
          label: "App Data Storage"
          description: "Stores the Application Data."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}
  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
