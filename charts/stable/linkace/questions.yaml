# Include{groups}
portals:
  open:
    protocols:
      - "$kubernetes-resource_configmap_portal_protocol"
    host:
      - "$kubernetes-resource_configmap_portal_host"
    ports:
      - "$kubernetes-resource_configmap_portal_port"
questions:
  - variable: portal
    group: "Container Image"
    label: "Configure Portal Button"
    schema:
      type: dict
      hidden: true
      attrs:
        - variable: enabled
          label: "Enable"
          description: "enable the portal button"
          schema:
            hidden: true
            editable: false
            type: boolean
            default: true
# Include{global}
  - variable: controller
    group: "Controller"
    label: ""
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: advanced
          label: "Show Advanced Controller Settings"
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: type
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Controller Type"
                schema:
                  type: string
                  default: "deployment"
                  required: true
# Include{controllerTypes}
              - variable: replicas
                description: "Number of desired pod replicas"
                label: "Desired Replicas"
                schema:
                  type: int
                  default: 1
                  required: true
              - variable: strategy
                description: "Please specify type of workload to deploy"
                label: "(Advanced) Update Strategy"
                schema:
                  type: string
                  default: "Recreate"
                  required: true
# Include{controllerStrategies}
# Include{controllerExpert}
  - variable: secretEnv
    group: "Container Configuration"
    label: "Secret Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: CRON_TOKEN
          label: "CRON_TOKEN (Generate this inside the app)"
          description: "Generate token inside the app and come back later to fill this."
          schema:
            type: string
            default: ""
        - variable: AWS_ACCESS_KEY_ID
          label: "AWS_ACCESS_KEY_ID"
          description: "AWS Access Key ID"
          schema:
            type: string
            default: ""
        - variable: AWS_SECRET_ACCESS_KEY
          label: "AWS_SECRET_ACCESS_KEY"
          description: "AWS Secret Access Key"
          schema:
            type: string
            default: ""
        - variable: AWS_DEFAULT_REGION
          label: "AWS_DEFAULT_REGION"
          description: "AWS Default Region"
          schema:
            type: string
            default: ""
        - variable: AWS_BUCKET
          label: "AWS_BUCKET"
          description: "AWS Bucket"
          schema:
            type: string
            default: ""
        - variable: MAIL_FROM_ADDRESS
          label: "MAIL_FROM_ADDRESS"
          description: "Mail from Address"
          schema:
            type: string
            default: ""
        - variable: MAIL_FROM_NAME
          label: "MAIL_FROM_NAME"
          description: "Mail from Name"
          schema:
            type: string
            default: ""
        - variable: MAIL_DRIVER
          label: "MAIL_DRIVER"
          description: "Mail Driver"
          schema:
            type: string
            default: "smtp"
            enum:
              - value: "smtp"
                description: "smtp"
              - value: "mailgun"
                description: "mailgun"
              - value: "sendmail"
                description: "sendmail"
              - value: "ses"
                description: "ses"
              - value: "postmark"
                description: "postmark"
              - value: "log"
                description: "log"
              - value: "array"
                description: "array"
        - variable: MAIL_HOST
          label: "MAIL_HOST"
          description: "Mail Host"
          schema:
            type: string
            default: ""
        - variable: MAIL_PORT
          label: "MAIL_PORT"
          description: "Mail Port"
          schema:
            type: string
            default: "587"
        - variable: MAIL_USERNAME
          label: "MAIL_USERNAME"
          description: "Mail Username"
          schema:
            type: string
            default: ""
        - variable: MAIL_PASSWORD
          label: "MAIL_PASSWORD"
          description: "Mail Password"
          schema:
            type: string
            default: ""
        - variable: MAIL_ENCRYPTION
          label: "MAIL_ENCRYPTION"
          description: "Mail Encryption"
          schema:
            type: string
            default: "tls"
  - variable: env
    group: "Container Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: APP_URL
          label: "APP_URL"
          description: "Application URL eg. https://linkace.mydomain.com"
          schema:
            type: string
            default: "http://localhost"
        - variable: APP_DEBUG
          label: "APP_DEBUG"
          description: "Enables the debug info"
          schema:
            type: boolean
            default: false
        - variable: BACKUP_ENABLED
          label: "BACKUP_ENABLED"
          description: "Enables backups"
          schema:
            type: boolean
            default: false
        - variable: BACKUP_DISK
          label: "BACKUP_DISK"
          description: "Backup destination"
          schema:
            type: string
            default: "local"
            enum:
              - value: "local"
                description: "local"
              - value: "s3"
                description: "s3"
        - variable: BACKUP_MAX_SIZE
          label: "BACKUP_MAX_SIZE"
          description: "Max size of backup in MB"
          schema:
            type: int
            default: 512
# Include{containerConfig}
  - variable: service
    group: "Networking and Services"
    label: "Configure Service(s)"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelector}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10160
                              required: true
                          - variable: advanced
                            label: "Show Advanced settings"
                            schema:
                              type: boolean
                              default: false
                              show_subquestions_if: true
                              subquestions:
                                - variable: protocol
                                  label: "Port Type"
                                  schema:
                                    type: string
                                    default: "HTTP"
# Include{portType}
                                - variable: nodePort
                                  label: "Node Port (Optional)"
                                  description: "This port gets exposed to the node. Only considered when service type is NodePort, Simple or LoadBalancer"
                                  schema:
                                    type: int
                                    min: 9000
                                    max: 65535
                                - variable: targetPort
                                  label: "Target Port"
                                  description: "The internal(!) port on the container the Application runs on"
                                  schema:
                                    type: int
                                    default: 80
  - variable: serviceexpert
    group: "Networking and Services"
    label: "Show Expert Config"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: hostNetwork
          group: "Networking and Services"
          label: "Host-Networking (Complicated)"
          schema:
            type: boolean
            default: false
# Include{serviceExpert}
# Include{serviceList}
  - variable: persistence
    label: "Integrated Persistent Storage"
    description: "Integrated Persistent Storage"
    group: "Storage and Persistence"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: backups
          label: "App Backup Storage"
          description: "Stores the Application Backup."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
        - variable: logs
          label: "App Logs Storage"
          description: "Stores the Application Logs."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
  - variable: ingress
    label: ""
    group: "Ingress"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
  - variable: advancedSecurity
    label: "Show Advanced Security Settings"
    group: "Security and Permissions"
    schema:
      type: boolean
      default: false
      show_subquestions_if: true
      subquestions:
        - variable: securityContext
          label: "Security Context"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: privileged
                label: "Privileged mode"
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: "ReadOnly Root Filesystem"
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: "Allow Privilege Escalation"
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: "runAsNonRoot"
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}
  - variable: podSecurityContext
    group: "Security and Permissions"
    label: "Pod Security Context"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: runAsUser
          label: "runAsUser"
          description: "The UserID of the user running the application"
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: "runAsGroup"
          description: "The groupID this App of the user running the application"
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 82
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
