image:
  repository: tccr.io/truecharts/paperless-ng
  pullPolicy: IfNotPresent
  tag: v1.5.0@sha256:7ba38a746c03317967ba18fd28cf7751022b2f6f7668c6cf3f701d70cf6d80f8

securityContext:
  runAsNonRoot: false
#   readOnlyRootFilesystem: false

podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

secret:
  PAPERLESS_ADMIN_USER: "admin"
  PAPERLESS_ADMIN_PASSWORD: "admin"
  PAPERLESS_ADMIN_MAIL: "admin@admin.com"

env:
  # TODO: add them to GUI
  PAPERLESS_DATA_DIR: "/config/"
  PAPERLESS_STATICDIR: "/static/"
  # Hostpaths
  PAPERLESS_CONSUMPTION_DIR: "/data/"
  PAPERLESS_MEDIA_ROOT: "/media/"

envTpl:
  USERMAP_UID: "{{ .Values.env.PUID }}"
  USERMAP_GID: "{{ .Values.env.PGID }}"
  PAPERLESS_TIME_ZONE: "{{ .Values.env.TZ }}"
  PAPERLESS_DBNAME: "{{ .Values.postgresql.postgresqlDatabase }}"
  PAPERLESS_DBUSER: "{{ .Values.postgresql.postgresqlUsername }}"
  PAPERLESS_DBPORT: "5432"

envValueFrom:
  PAPERLESS_DBPASS:
    secretKeyRef:
      name: dbcreds
      key: postgresql-password
  PAPERLESS_DBHOST:
    secretKeyRef:
      name: dbcreds
      key: plainhost
  PAPERLESS_SECRET_KEY:
    secretKeyRef:
      name: paperlessng-secrets
      key: PAPERLESS_SECRET_KEY
  # PAPERLESS_REDIS:
  #   secretKeyRef:
  #     name: rediscreds
  #     key: thekeyineedtocreate

service:
  main:
    ports:
      main:
        targetPort: 8000
        port: 10140

persistence:
  config:
    enabled: true
    mountPath: "/config"
  data:
    enabled: true
    mountPath: "/data"
  static:
    enabled: true
    mountPath: "/static"
  media:
    enabled: true
    mountPath: "/media"
  varrun:
    enabled: true

redis:
  enabled: true
  existingSecret: "rediscreds"

postgresql:
  enabled: true
  existingSecret: "dbcreds"
  postgresqlUsername: paperless-ng
  postgresqlDatabase: paperless-ng
