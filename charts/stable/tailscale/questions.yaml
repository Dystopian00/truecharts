# Include{groups}
portals: {}
questions:
# Include{global}
# Include{controller}
# Include{controllerDeployment}
# Include{replicas}
# Include{replica1}
# Include{strategy}
# Include{recreate}
# Include{controllerExpert}
# Include{controllerExpertExtraArgs}
  - variable: tailscale
    group: "Container Configuration"
    label: "Tailscale Configuration"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: authkey
          label: Auth Key
          description: Provide an auth key to automatically authenticate the node as your user account.
          schema:
            type: string
            private: true
            default: ""
        - variable: userspace
          label: Userspace
          description: Userspace Networking mode allows running Tailscale where you don't have access to create a VPN tunnel device.
          schema:
            type: boolean
            default: false
        - variable: accept_dns
          label: Accept DNS
          description: Accept DNS configuration from the admin console.
          schema:
            type: boolean
            default: false
        - variable: routes
          label: Routes
          description: Expose physical subnet routes to your entire Tailscale network.
          schema:
            type: string
            default: ""
        - variable: dest_ip
          label: Dest IP
          description: Tells the DNAT mechanism which Destination IP to set in the IP header, and where to send packets that are matched.
          schema:
            type: string
            default: ""
        - variable: sock5_server
          label: Sock5 Server
          schema:
            type: string
            default: ""
        - variable: hostname
          label: Hostname
          description: You can specify a specific hostname for use inside Tailscale. (Passes --hostname HOSTNAME to extra_args)
          schema:
            type: string
            default: ""
        - variable: advertise_as_exit_node
          label: Advertise as exit node
          description: This is used to pass traffic through tailscale like a private VPN. (Passes --advertise-exit-node to extra_args)
          schema:
            type: boolean
            default: false
        - variable: extra_args
          label: Extra Args
          description: UP_ARGS or flags to pass along to Tailscale, such as --advertise-exit-node
          schema:
            type: string
            default: ""
        - variable: daemon_extra_args
          label: Tailscale Daemon Extra Args
          schema:
            type: string
            default: ""
# Include{containerConfig}
# Include{serviceExpertRoot}
            default: true
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: App Config Storage
          description: Stores the Application Configuration.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceAdvanced}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressExpert}
# Include{ingressList}
# Include{security}
# Include{securityContextAdvancedRoot}
              - variable: privileged
                label: Privileged mode
                schema:
                  type: boolean
                  default: false
              - variable: readOnlyRootFilesystem
                label: ReadOnly Root Filesystem
                schema:
                  type: boolean
                  default: false
              - variable: allowPrivilegeEscalation
                label: Allow Privilege Escalation
                schema:
                  type: boolean
                  default: false
              - variable: runAsNonRoot
                label: runAsNonRoot
                schema:
                  type: boolean
                  default: false
# Include{securityContextAdvanced}
# Include{podSecurityContextRoot}
        - variable: runAsUser
          label: runAsUser
          description: The UserID of the user running the application
          schema:
            type: int
            default: 0
        - variable: runAsGroup
          label: runAsGroup
          description: The groupID this App of the user running the application
          schema:
            type: int
            default: 0
        - variable: fsGroup
          label: fsGroup
          description: The group that should own ALL storage.
          schema:
            type: int
            default: 568
# Include{podSecurityContextAdvanced}
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{documentation}
