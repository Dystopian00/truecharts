# Default values for Bitwarden.

image:
  registry: docker.io
  repository: authelia/authelia
  tag: 4.27.4
  pullPolicy: IfNotPresent
  pullSecrets: []
  # pullSecrets:
  #   - myPullSecretName

strategy:
  type: Recreate


envFrom:
  - configMapRef:
      name: bitwardenconfig
  - secretRef:
      name: bitwardensecret

envValueFrom:
  DATABASE_URL:
    secretKeyRef:
      name: dbcreds
      key: url

persistence:
  db:
    nameOverride: "db"
    enabled: true
    emptyDir: true
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass: ""

# Enabled postgres
# ... for more options see https://github.com/bitnami/charts/tree/master/bitnami/postgresql
postgresql:
  enabled: true
  postgresqlUsername: authelia
  postgresqlDatabase: authelia
  existingSecret: dbcreds
  persistence:
    enabled: false
    existingClaim: db

authelia:
  # nameOverride: authelia-deployment-name
  # appNameOverride: authelia

  ## Authelia Domain
  ## Should be the root domain you want to protect.
  ## For example if you have apps app1.example.com and app2.example.com it should be example.com
  ## This affects the ingress (partially sets the domain used) and configMap.
  ## Authelia must be served from the domain or a subdomain under it.
  domain: example.com

  pod:
    # Must be Deployment, DaemonSet, or StatefulSet.
    kind: DaemonSet

    replicas: 1
    revisionHistoryLimit: 5

    updateStrategy: RollingUpdate

    securityContext:
      container:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
      pod:
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        privileged: false

    resources:
      limits: {}
      # limits:
      #   cpu: "4.00"
      #   memory: 125Mi
      requests: {}
      # requests:
      #   cpu: "0.25"
      #   memory: 50Mi

    extraVolumeMounts: []
    extraVolumes: []

  ##
  ## Kubernetes Pod Disruption Budget
  ##
  podDisruptionBudget:
    enabled: false

    # minAvailable: 1
    # maxUnavailable: 1

  ##
  ## Authelia Config Map Generator
  ##
  configMap:

    # Enable the configMap source for the Authelia config.
    # If this is false you need to provide a volumeMount via PV/PVC or other means that mounts to /config.
    enabled: true

    key: configuration.yaml

    existingConfigMap: ""

    ## Level of verbosity for logs: info, debug, trace.
    log_level: debug
    ## Format the logs are written as: json, text.
    log_format: text

    ## Default redirection URL
    ##
    ## If user tries to authenticate without any referer, Authelia does not know where to redirect the user to at the end
    ## of the authentication process. This parameter allows you to specify the default redirection URL Authelia will use
    ## in such a case.
    ##
    ## Note: this parameter is optional. If not provided, user won't be redirected upon successful authentication.
    ## Default is https://www.<domain> (value at the top of the values.yaml).
    default_redirection_url: ""
    # default_redirection_url: https://example.com

    theme: light

    ##
    ## TOTP Configuration
    ##
    ## Parameters used for TOTP generation
    totp:
      ## The issuer name displayed in the Authenticator application of your choice
      ## See: https://github.com/google/google-authenticator/wiki/Key-Uri-Format for more info on issuer names
      ## Defaults to <domain>.
      issuer: ""
      ## The period in seconds a one-time password is current for. Changing this will require all users to register
      ## their TOTP applications again. Warning: before changing period read the docs link below.
      period: 30
      ## The skew controls number of one-time passwords either side of the current one that are valid.
      ## Warning: before changing skew read the docs link below.
      ## See: https://www.authelia.com/docs/configuration/one-time-password.html#period-and-skew to read the documentation.
      skew: 1

    ##
    ## Duo Push API Configuration
    ##
    ## Parameters used to contact the Duo API. Those are generated when you protect an application of type
    ## "Partner Auth API" in the management panel.
    duo_api:
      enabled: false
      hostname: api-123456789.example.com
      integration_key: ABCDEF

    ##
    ## Authentication Backend Provider Configuration
    ##
    ## Used for verifying user passwords and retrieve information such as email address and groups users belong to.
    ##
    ## The available providers are: `file`, `ldap`. You must use one and only one of these providers.
    authentication_backend:
      ## Disable both the HTML element and the API for reset password functionality
      disable_reset_password: false

      ## The amount of time to wait before we refresh data from the authentication backend. Uses duration notation.
      ## To disable this feature set it to 'disable', this will slightly reduce security because for Authelia, users will
      ## always belong to groups they belonged to at the time of login even if they have been removed from them in LDAP.
      ## To force update on every request you can set this to '0' or 'always', this will increase processor demand.
      ## See the below documentation for more information.
      ## Duration Notation docs:  https://www.authelia.com/docs/configuration/index.html#duration-notation-format
      ## Refresh Interval docs: https://www.authelia.com/docs/configuration/authentication/ldap.html#refresh-interval
      refresh_interval: 5m

      ## LDAP backend configuration.
      ##
      ## This backend allows Authelia to be scaled to more
      ## than one instance and therefore is recommended for
      ## production.
      ldap:

        ## Enable LDAP Backend.
        enabled: false

        ## The LDAP implementation, this affects elements like the attribute utilised for resetting a password.
        ## Acceptable options are as follows:
        ## - 'activedirectory' - For Microsoft Active Directory.
        ## - 'custom' - For custom specifications of attributes and filters.
        ## This currently defaults to 'custom' to maintain existing behaviour.
        ##
        ## Depending on the option here certain other values in this section have a default value, notably all of the
        ## attribute mappings have a default value that this config overrides, you can read more about these default values
        ## at https://www.authelia.com/docs/configuration/authentication/ldap.html#defaults
        implementation: activedirectory

        ## The url to the ldap server. Format: <scheme>://<address>[:<port>].
        ## Scheme can be ldap or ldaps in the format (port optional).
        url: ldap://openldap.default.svc.cluster.local

        ## Use StartTLS with the LDAP connection.
        start_tls: false

        tls:
          ## Skip verifying the server certificate (to allow a self-signed certificate).
          ## In preference to setting this we strongly recommend you add the public portion of the certificate to the
          ## certificates directory which is defined by the `certificates_directory` option at the top of the config.
          skip_verify: true

          ## Minimum TLS version for either Secure LDAP or LDAP StartTLS.
          minimum_version: TLS1.2

        ## The base dn for every LDAP query.
        base_dn: DC=example,DC=com

        ## The attribute holding the username of the user. This attribute is used to populate the username in the session
        ## information. It was introduced due to #561 to handle case insensitive search queries. For you information,
        ## Microsoft Active Directory usually uses 'sAMAccountName' and OpenLDAP usually uses 'uid'. Beware that this
        ## attribute holds the unique identifiers for the users binding the user and the configuration stored in database.
        ## Therefore only single value attributes are allowed and the value must never be changed once attributed to a user
        ## otherwise it would break the configuration for that user. Technically, non-unique attributes like 'mail' can also
        ## be used but we don't recommend using them, we instead advise to use the attributes mentioned above
        ## (sAMAccountName and uid) to follow https://www.ietf.org/rfc/rfc2307.txt.
        username_attribute: ""

        ## An additional dn to define the scope to all users.
        additional_users_dn: OU=Users

        ## The users filter used in search queries to find the user profile based on input filled in login form.
        ## Various placeholders are available in the user filter:
        ## - {input} is a placeholder replaced by what the user inputs in the login form.
        ## - {username_attribute} is a mandatory placeholder replaced by what is configured in `username_attribute`.
        ## - {mail_attribute} is a placeholder replaced by what is configured in `mail_attribute`.
        ## - DON'T USE - {0} is an alias for {input} supported for backward compatibility but it will be deprecated in later
        ##   versions, so please don't use it.
        ##
        ## Recommended settings are as follows:
        ## - Microsoft Active Directory: (&({username_attribute}={input})(objectCategory=person)(objectClass=user))
        ## - OpenLDAP:
        ##   - (&({username_attribute}={input})(objectClass=person))
        ##   - (&({username_attribute}={input})(objectClass=inetOrgPerson))
        ##
        ## To allow sign in both with username and email, one can use a filter like
        ## (&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))
        users_filter: ""

        ## An additional dn to define the scope of groups.
        additional_groups_dn: OU=Groups

        ## The groups filter used in search queries to find the groups of the user.
        ## - {input} is a placeholder replaced by what the user inputs in the login form.
        ## - {username} is a placeholder replace by the username stored in LDAP (based on `username_attribute`).
        ## - {dn} is a matcher replaced by the user distinguished name, aka, user DN.
        ## - {username_attribute} is a placeholder replaced by what is configured in `username_attribute`.
        ## - {mail_attribute} is a placeholder replaced by what is configured in `mail_attribute`.
        ## - DON'T USE - {0} is an alias for {input} supported for backward compatibility but it will be deprecated in later
        ##   versions, so please don't use it.
        ## - DON'T USE - {1} is an alias for {username} supported for backward compatibility but it will be deprecated in
        ##   later version, so please don't use it.
        ##
        ## If your groups use the `groupOfUniqueNames` structure use this instead:
        ##    (&(uniquemember={dn})(objectclass=groupOfUniqueNames))
        groups_filter: ""

        ## The attribute holding the name of the group
        group_name_attribute: ""

        ## The attribute holding the mail address of the user. If multiple email addresses are defined for a user, only the
        ## first one returned by the LDAP server is used.
        mail_attribute: ""

        ## The attribute holding the display name of the user. This will be used to greet an authenticated user.
        display_name_attribute: ""

        ## The username of the admin user.
        user: CN=Authelia,DC=example,DC=com



    ##
    ## Access Control Configuration
    ##
    ## Access control is a list of rules defining the authorizations applied for one resource to users or group of users.

    access_control:
      ## Default policy can either be 'bypass', 'one_factor', 'two_factor' or 'deny'. It is the policy applied to any
      ## resource if there is no policy to be applied to the user.
      default_policy: deny

      rules: []
      # rules:
      # - domain: public.example.com
      #   policy: bypass
      # - domain: "*.example.com"
      #   policy: bypass
      #   methods:
      #   - OPTIONS

    ##
    ## Session Provider Configuration
    ##
    ## The session cookies identify the user once logged in.
    ## The available providers are: `memory`, `redis`. Memory is the provider unless redis is defined.
    session:
      ## The name of the session cookie. (default: authelia_session).
      name: authelia_session

      ## The time in seconds before the cookie expires and session is reset.
      expiration: 1h

      ## The inactivity time in seconds before the session is reset.
      inactivity: 5m

      ## The remember me duration.
      ## Value is in seconds, or duration notation. Value of 0 disables remember me.
      ## See: https://www.authelia.com/docs/configuration/index.html#duration-notation-format
      ## Longer periods are considered less secure because a stolen cookie will last longer giving attackers more time to
      ## spy or attack. Currently the default is 1M or 1 month.
      remember_me_duration: 1M

      ##
      ## Redis Provider
      ##
      ## Important: Kubernetes (or HA) users must read https://www.authelia.com/docs/features/statelessness.html
      ##
      ## The redis connection details
      redis:
        enabled: true
        enabledSecret: false
        host: redis.databases.svc.cluster.local
        port: 6379

        ## Optional username to be used with authentication.
        username: authelia

        ## This is the Redis DB Index https://redis.io/commands/select (sometimes referred to as database number, DB, etc).
        database_index: 0

        ## The maximum number of concurrent active connections to Redis.
        maximum_active_connections: 8

        ## The target number of idle connections to have open ready for work. Useful when opening connections is slow.
        minimum_idle_connections: 0

        ## The Redis TLS configuration. If defined will require a TLS connection to the Redis instance(s).
        tls:
          enabled: false

          ## Server Name for certificate validation (in case you are using the IP or non-FQDN in the host option).
          server_name: ""

          ## Skip verifying the server certificate (to allow a self-signed certificate).
          ## In preference to setting this we strongly recommend you add the public portion of the certificate to the
          ## certificates directory which is defined by the `certificates_directory` option at the top of the config.
          skip_verify: false

          ## Minimum TLS version for the connection.
          minimum_version: TLS1.2

        ## The Redis HA configuration options.
        ## This provides specific options to Redis Sentinel, sentinel_name must be defined (Master Name).
        high_availability:
          enabled: false
          enabledSecret: false
          ## Sentinel Name / Master Name
          sentinel_name: mysentinel

          ## The additional nodes to pre-seed the redis provider with (for sentinel).
          ## If the host in the above section is defined, it will be combined with this list to connect to sentinel.
          ## For high availability to be used you must have either defined; the host above or at least one node below.
          nodes: []
          # nodes:
          #   - host: sentinel-0.databases.svc.cluster.local
          #     port: 26379
          #   - host: sentinel-1.databases.svc.cluster.local
          #     port: 26379

          ## Choose the host with the lowest latency.
          route_by_latency: false

          ## Choose the host randomly.
          route_randomly: false

    ##
    ## Regulation Configuration
    ##
    ## This mechanism prevents attackers from brute forcing the first factor. It bans the user if too many attempts are done
    ## in a short period of time.
    regulation:
      ## The number of failed login attempts before user is banned. Set it to 0 to disable regulation.
      max_retries: 3

      ## The time range during which the user can attempt login before being banned. The user is banned if the
      ## authentication failed 'max_retries' times in a 'find_time' seconds window. Find Time accepts duration notation.
      ## See: https://www.authelia.com/docs/configuration/index.html#duration-notation-format
      find_time: 2m

      ## The length of time before a banned user can login again. Ban Time accepts duration notation.
      ## See: https://www.authelia.com/docs/configuration/index.html#duration-notation-format
      ban_time: 5m


    ##
    ## Storage Provider Configuration
    ##
    ## The available providers are: `local`, `mysql`, `postgres`. You must use one and only one of these providers.
    storage:
      ##
      ## PostgreSQL (Storage Provider)
      ##
      postgres:
        enabled: true
        host: 127.0.0.1
        port: 5432
        database: authelia
        username: authelia
        sslmode: disable

    ##
    ## Notification Provider
    ##
    ##
    ## Notifications are sent to users when they require a password reset, a u2f registration or a TOTP registration.
    ## The available providers are: filesystem, smtp. You must use one and only one of these providers.
    notifier:
      ## You can disable the notifier startup check by setting this to true.
      disable_startup_check: false

      ##
      ## SMTP (Notification Provider)
      ##
      ## Use a SMTP server for sending notifications. Authelia uses the PLAIN or LOGIN methods to authenticate.
      ## [Security] By default Authelia will:
      ##   - force all SMTP connections over TLS including unauthenticated connections
      ##      - use the disable_require_tls boolean value to disable this requirement
      ##        (only works for unauthenticated connections)
      ##   - validate the SMTP server x509 certificate during the TLS handshake against the hosts trusted certificates
      ##     (configure in tls section)
      smtp:
        enabled: true
        enabledSecret: false
        username: test
        host: smtp.mail.svc.cluster.local
        port: 25
        sender: admin@example.com
        ## HELO/EHLO Identifier. Some SMTP Servers may reject the default of localhost.
        identifier: localhost
        ## Subject configuration of the emails sent.
        ## {title} is replaced by the text from the notifier
        subject: "[Authelia] {title}"
        ## This address is used during the startup check to verify the email configuration is correct.
        ## It's not important what it is except if your email server only allows local delivery.
        startup_check_address: test@authelia.com
        disable_require_tls: false
        disable_html_emails: false

        tls:
          ## Server Name for certificate validation (in case you are using the IP or non-FQDN in the host option).
          server_name: ""

          ## Skip verifying the server certificate (to allow a self-signed certificate).
          ## In preference to setting this we strongly recommend you add the public portion of the certificate to the
          ## certificates directory which is defined by the `certificates_directory` option at the top of the config.
          skip_verify: false

          ## Minimum TLS version for either StartTLS or SMTPS.
          minimum_version: TLS1.2

    identity_providers:
      oidc:
        ## Enables this in the config map. Currently in alpha stage there is no official build supporting OIDC.
        ## This exists for testing and preparation.
        enabled: false
        clients:
        - id: myapp
          description: My Application
          ## Secret shared between client and OP. Must be bcrypt hashed.
          secret: $2y$12$Bk1mw11OwVlG0uYWVJaoEuDkbL62FpEUsq59CXzPbe5oL61zR4XoG
          ## Policy is either one_factor or two_factor.
          policy: two_factor
          ## List of valid redirect URIs
          redirect_uris:
          - https://oidc.example.com/oauth2/callback
          scopes:
          - openid
          - profile
          - email
          - groups
          grant_types:
          - refresh_token
          - authorization_code
          response_types:
          - code

  ##
  ## Authelia Secret Generator.
  ##
  ## If both the values and existingSecret are not defined, this chart randomly generates a new secret on each
  ## install. It is recommended that you use something like sealed-secrets (https://github.com/bitnami-labs/sealed-secrets)
  ## and use the existingSecrets. All secrets can be stored in a single k8s secret if desired using the key option.
  ##
  secret:
    existingSecret: ""
    # existingSecret: authelia

    mountPath: /config/secrets

    ## Secrets.
    jwt:
      key: JWT_TOKEN
      # value:
      filename: JWT_TOKEN
    ldap:
      key: LDAP_PASSWORD
      # value:
      filename: LDAP_PASSWORD
    storage:
      key: STORAGE_PASSWORD
      # value:
      filename: STORAGE_PASSWORD
    session:
      key: SESSION_ENCRYPTION_KEY
      # value:
      filename: SESSION_ENCRYPTION_KEY
    duo:
      key: DUO_API_KEY
      # value:
      filename: DUO_API_KEY
    redis:
      key: REDIS_PASSWORD
      # value:
      filename: REDIS_PASSWORD
    redisSentinel:
      key: REDIS_SENTINEL_PASSWORD
      # value:
      filename: REDIS_SENTINEL_PASSWORD
    smtp:
      key: SMTP_PASSWORD
      # value:
      filename: SMTP_PASSWORD
    oidcPrivateKey:
      key: OIDC_PRIVATE_KEY
      # value:
      filename: OIDC_PRIVATE_KEY
    oidcHMACSecret:
      key: OIDC_HMAC_SECRET
      # value:
      filename: OIDC_HMAC_SECRET

  certificates:
    existingSecret: ""
    # existingSecret: authelia

    values: {}
    # values:
    # - name: Example_Com_Root_Certificate_Authority_B64.pem
    #   secretValue: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lMQkFBQUFBQUJJVmhUQ0tJd0RRWUpLb1pJaHZjTkFRRUxCUUF3VERFZ01CNEcKQTFVRUN4TVhSMnh2WW1Gc1UybG5iaUJTYjI5MElFTkJJQzBnVWpNeEV6QVJCZ05WQkFvVENrZHNiMkpoYkZOcApaMjR4RXpBUkJnTlZCQU1UQ2tkc2IySmhiRk5wWjI0d0hoY05NRGt3TXpFNE1UQXdNREF3V2hjTk1qa3dNekU0Ck1UQXdNREF3V2pCTU1TQXdIZ1lEVlFRTEV4ZEhiRzlpWVd4VGFXZHVJRkp2YjNRZ1EwRWdMU0JTTXpFVE1CRUcKQTFVRUNoTUtSMnh2WW1Gc1UybG5iakVUTUJFR0ExVUVBeE1LUjJ4dlltRnNVMmxuYmpDQ0FTSXdEUVlKS29aSQpodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU13bGRwQjVCbmdpRnZYQWc3YUV5aWllL1FWMkVjV3RpSEw4ClJnSkR4N0tLblFSZkpNc3VTK0ZnZ2tiaFVxc01nVWR3Yk4xazBldjFMS01QZ2owTUs2NlgxN1lVaGhCNXV6c1QKZ0hlTUNPRkowbXBpTHg5ZStwWm8zNGtubFRpZkJ0Yyt5Y3NtV1ExejNyREk2U1lPZ3hYRzcxdUwwZ1JneWttbQpLUFpwTy9iTHlDaVI1WjJLWVZjM3JIUVUzSFRnT3U1eUx5NmMrOUM3di9VOUFPRUdNK2lDSzY1VHBqb1djNHpkClFRNGdPc0MwcDZIcHNrK1FMakpnNlZmTHVRU1NhR2psT0NaZ2RiS2ZkLytSRk8rdUlFbjhyVUFWU05FQ01XRVoKWHJpWDc2MTN0MlNhZXI5ZndSUHZtMkw3RFd6Z1ZHa1dxUVBhYnVtRGszRjJ4bW1GZ2hjQ0F3RUFBYU5DTUVBdwpEZ1lEVlIwUEFRSC9CQVFEQWdFR01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJL3dTMytvCkxrVWtyazFRK21PYWk5N2kzUnU4TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCTFFOdkFVS3IreUF6djk1WlUKUlVtN2xnQUpRYXl6RTRhR0tBY3p5bXZtZExtNkFDMnVwQXJUOWZIeEQ0cS9jMmRLZzhkRWUzamdyMjVzYndNcApqak01UmNPTzVMbFhiS3I4RXBic1U4WXQ1Q1JzdVpSais5eFRhR2RXUG9PNHp6VWh3OGxvL3M3YXdsT3F6SkNLCjZmQmRSb3lWM1hwWUtCb3ZIZDdOQURkQmorMUViZGRUS0pkKzgyY0VIaFhYaXBhMDA5NU1KNlJNRzNOemR2UVgKbWNJZmVnN2pMUWl0Q2h3cy96eXJWUTRQa1g0MjY4TlhTYjdoTGkxOFlJdkRRVkVUSTUzTzl6SnJsQUdvbWVjcwpNeDg2T3lYU2hrRE9PeXlHZU1saEx4UzY3dHRWYjkrRTdnVUpUYjBvMkhMTzAySlFaUjdya3BlRE1kbXp0Y3BICldEOWYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
    # - name: Example_Com_Root_Certificate_Authority.pem
    #   value: |
    #     -----BEGIN CERTIFICATE-----
    #     -----END CERTIFICATE-----
